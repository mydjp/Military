%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Daniel Peck) ()
%%Title: (wolverine.ai)
%%CreationDate: 2/7/2019 11:44 AM
%%Canvassize: 16383
%%BoundingBox: 19 -1256 1220 -401
%%HiResBoundingBox: 19.9513 -1255.4293 1219.8462 -401.6186
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 648.5 -864.5 648.5 -864.5
%AI3_TileBox: 360 -1248 936 -480
%AI3_DocumentPreview: None
%AI5_ArtSize: 1296 1728
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1181 62 0.52 1616 948 18 0 0 46 87 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:248 -1164
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 92 8
%%BeginData: 10550 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD30F827F827F8FD042752FD0627F827FD68F827525252FD047DA8
%A8A87DA87DA87DA87D7D7DA8FD067D527D52522727FD5AF852527D7D7DFD
%04522727F827F827FD0DF827F82727522752527D7DA87D7D5227FD51F827
%7D7D7D525227FD24F82752527DA85252FD38F827F827F827FD0DF82752A8
%7D7D5227FD2DF85252A87D7D27FD2FF827277D7DFD07A87D7D527D5227F8
%27F85252A87D5227FD14F8272752527D52FD097D527D52522727FD0BF827
%527D7D7D27FD2AF8277D7D522727F827F827F827275227522752527D7D7D
%5252FD13F852527DA8FD17FFA8A87D7D2727FD07F82752A87D52FD27F852
%7D27FD24F827527DA8FD11FFA8FD0FFFA8A85252FD07F8527DA852FD24F8
%52A8FD21F827277DA8FD15FF7D52F852527D7DFD0FFF7D7D27FD05F827A8
%A87DFD22F8A827FD20F8277DA87DA87D7D527D527D527D7DFD04A8FD0AFF
%7DFD06F8277D7DFD0DFF7D52FD05F8277DA827FD20F8A852FD09F827527D
%527D527D52522727FD0DF827FD11F8272752527DA8FD05FF7D27FD07F87D
%A8FD0DFF5227FD04F827A87D27FD1EF8A827FD07F852FD0BFFA8A87D5227
%FD22F827527DA8FFA852FD08F827A8FD0CFFA87DFD05F852A87DFD1DF87D
%A8FD06F87DFD12FFA85252FD23F87D7D27FD09F852A8FD0DFF5227F8F8F8
%277DA827FD1BF852A8FD06F852FD06FF7D5227522752527D7DA8A8FD05FF
%7D27FD2EF87DFD0DFFA852FD04F827FF52FD1BF8FF27FD06F8A8FD04FF7D
%FD0CF85252522727FD30F87DFD0EFFA8FD05F8A8A827FD19F87DFFFD06F8
%27FD04FF7DFD42F87DFD0FFF27FD04F87DA827FD18F827FF7DFD06F87DFD
%04FFA852522727FD3EF8A8FD0CFFA8FFFF7DFD04F852FF52FD18F852FF27
%FD06F87DFD08FF7DFD3DF827A8FD0BFF7D52A8FF7D27F8F8F827A852FD18
%F8A8FF27FD05F827A8FD07FF52FD3EF852FD0CFF7D277DFFFF27F8F8F827
%FF7DFD18F8FFA8FD07F8A8FD06FFFD30F85227FD0EF87DFD04FFA8A8FD06
%FF52F852FFFF27F8F8F827A87DFD18F8FFFF27FD05F827A8FD05FF7DA8FF
%FFFF7DFD0DF827FD1CF8A8FFA87D27FD0CF8A8FD04FF52FD07FF27F827FF
%FF52F8F8F827FF7DFD18F8FFA827FD06F852FD08FF7DFD09F852527D7D7D
%FD1DF827FD04FF7D52FD0BF8FD04FF5252FD06FFA8F8F8F8A8A8FD04F827
%FF52FD18F8FFFF27FD06F827FD06FF7DFD05F827277DA8FFFFFF7D52FD1F
%F87DFD05FFA8FD0AF827FFFFFF7D27FD07FF52F8F8F827FD05F852FF27FD
%17F8527DFD07F87DFD05FF52FD04F827A8A8FD04FF7DFD23F8A8FD05FF52
%FD0AF852FFFFFFF87DFD06FF7DFD0AF8A87DFD16F87DA8FD06F827FD06FF
%A8F8F8277DA8FD05FF7D27FD25F8FD05FFA8F827FF7D27FD06F87DFFFF52
%F8FD06FFA8FD0AF827FFFD15F87D7DFD06F852FD07FFF8F852FD06FFA827
%FD27F827FD05FF52A8FFFFFF7DFD06F852FF27F87DFD05FFFD0BF827A827
%FD13F87DA8FD05F827A8FD07FF2752FD07FF7DFD2AF82752FD0727527D52
%FD0AF87DFFA87DFD0DF8FF27FD12F852A8FD05F827A8FD07FFA8A8FD06FF
%A827FD52F8A852FD11F852A8FD05F852FD10FFA827FD49F87D7D52F827A8
%52F8F8F87DA8FD10F827A8FD05F852FD10FF7DFD38F827FD12F87DFFA8F8
%7DFFA8FD04F8FF27FD0FF8A852FD04F87DFD10FFA8FD12F85227FD1EF827
%52A8A8FD07FF7D7D5227FD0CF8275252FFFFFFFD04F87DA8FD0FF87D52F8
%F8F852FD10FFA8FD0CF852527D7DFFFFFF7D27FD1BF82752A8FD0EFFA8A8
%5227FD0DF82752FD04F827A87DFD0EF8A852F8F8F852FD10FF27FD07F827
%527DA8FD07FF27FD1BF827A8FD08FFA8A8527D52A8FD08FF7D52FD11F827
%7DFF7D27FD0BF87D7DF8F8F852FD0FFF7DFD06F827A8A8FD08FF7DFD1BF8
%277DFD07FF7D52FD06F87DFD0AFFA85227FD11F87DA8A827FD09F87D52F8
%F8F827FD0FFFFD05F852A8FD09FFA827FD1BF87DFD06FFA852FD09F8A8FD
%0DFFA8FD11F8277DFF7D27FD07F8527DF8F8F827FD0EFF27F8F8F827FD0B
%FF7DFD1CF8A8FD05FFA827FD0BF87DFD0DFF27FD14F87DA87DFD06F87D7D
%FD04F8FD0DFFA8F8F827A8FD0BFF52FD1BF852FD05FFA852FD0DF87DFD0D
%FFF8F827FD13F827A8FF27FD04F852A8FD04F8A8FD0CFF52F852FD0CFF27
%FD1BF852FD05FF7DFD0FF852FD0DFFA8FD17F852FF27F8F8F827A8FD04F8
%7DFD0CFF277DFD0CFF27FD1BF87DFD05FF52FD06F8FD055227FD04F852FD
%0EFFA827FD16F852FFFD04F8A8FD04F827FD0BFFA8A8FD0CFF27FD0EF852
%FD0CF87DFD05FF27FD04F8527DFD07FF7DFD04F8FD10FF52FD16F87D52F8
%F827A852F8F8F827FD18FF7DFD0AF827277DA8FF7DFD0BF87DFD05FF27F8
%F8F827A8FD0AFF52F8F8F8A8FD10FF52F8F8F87D7DFD10F87D7DF8F8F8A8
%52FD04F8A8FD16FFA8FD09F8277DA8FFFFFFA8FD0BF852FD05FF27F8F8F8
%7DFD04FF7D2727A8FD04FFA8F8F8F87DFD11FF52F8F852FF52FD0FF87DA8
%F8F8F87D7DFD04F852FD16FF52FD07F87DA8FD06FF27FD0AF827FD05FF27
%F8F827A8FFFFFF5227F8F8F8FD06FF52F8F827FD12FF52F852FFFF27FD0E
%F8A87DF8F8F852A8FD04F827FD16FFFD06F827FD08FF7DFD0BF8FD05FF27
%F8F8F8A8FFFFA8F8F8F852F827FD05FFA8FD04F87DFD06FF527DFD0AFF27
%27FFFFA8FD0EF87D7DF8F8F827FFFD05F8A8FD14FF7DFD05F87DFD09FFFD
%0BF8A8FD04FF7DFD04F8FFFF7DF8F8F8A8FF2752FFFFFFA852FD05F827FD
%05FF52F87DFD0BFF52FFFFFF27FD0DF8FF52FD04F8A852FD04F827FD08FF
%A87DFD0AFF7DF8F8F827A8FD09FF52FD0AF852FD04FFA8F8F85227F8FF7D
%F8F827FFFFFFF87DFFFF52F8F87DF82727F8F852FFFFFF52F8F87DFD0BFF
%A8FFFFFF52FD0CF827A827FD04F8A87DFD05F8A8FD07FF277DFD0AFF52F8
%F8F8A8FD0AFF27FD09F827FD05FF27F852FF52F852F8F852FD04FF27A8A8
%F8F852FFFFF827FF27F8F8A8A827F8F8F87DFD0FFFA8FD06F82752FD04F8
%52FFFD05F827A8FD05F852FD06FFA8F852FD0AFF52F8F87DFD0AFFA8FD0A
%F852FD04FF7DF827FFFF52F8F8F852FD05FFF827F827A8FFFFA8F852FFA8
%FD06F852F852FD0FFFA8FD05F852A8F8277DF8F8A87DFD05F827FF27FD05
%F8FD06FF52F8A8FD0AFF52F827FD0BFF7DFD06F827F8F8F8FD05FFF8F8A8
%FFFF7DF8F87DFD06FF27F8A8FD04FFA8F852FFFFA8F8F8F827A8A8F8A8FD
%10FFF8F8F852FFFF277DFF7DF827FF27FD06F8A852FD05F827FD05FFF8F8
%7DFD0AFF52F8A8FD0BFF52FD04F82752F8F8F852FD04FF52F87DFFFFFF52
%F87DFD07FF7DFD06FFA8F87DFFA8FD04F8A8FF52F8A8FD0FFF7DF852FFFF
%FF7DA8FFFFF8F87DFFFD07F852FFFD06F87DFFFFFF52F8F87DFD0AFF5227
%FD0CFF27FD04F8FF7DF8F8F87DFD04FFF827FD04FFA87DFD0FFF7DF87D7D
%F8F8F827A8FFFF27F87DFD0FFF2752FD07FF27F8F8FF52FD08F8A827FD05
%F827FFFFA827F8F852FD0AFFA87DFD0CFF27F8F8F8A8FF52F8F8F8FD04FF
%7DF8A8FD10FFA8FD04FF7DFD05F827A8FFFFA8F8F8F87DFD0CFFA82752FD
%07FF52F8F87DA8FD09F8A87DFD06F87DFFA8F8F8F87DFD18FF27F8F852FF
%FF27F8F852FD04FF2752FD08FFA8A8527D5252FD052752527D52FD04F852
%FD04FF7DFD04F852A8FD0AFF2727FD07FF52F8F827FF52FD09F827FFFD07
%F8FF52F8F8F852FD18FF52F8F8A8FFA827F8F852FFFFFFA8F8A8FFFFFFA8
%A85227FD14F852A8A8FFFF52FD06F827A8FD07FFF8F8FD06FFA827F8F8F8
%A8A8FD0BF8A852FD07F827F8F8F827FD18FF52F827FFFFFFF8F8F87DFFFF
%FF7DF8FFA87D2727F827527D7DA8A8FD07FFA8FFA87D527D5227FD04F827
%52FD09F82752A8A8FFA82727FD05FFA852FD04F87DFFFD0CF852A8FD0CF8
%FD18FF7DF852FFFFA8F8F8F852FFFFFF272727F8F8527DFD17FFA87D5227
%FD11F852527D5252FD06F827FFFD0EF8FF27FD0BF8A8FD17FFA8F87DFFFF
%FFF8F8F87DFFFFFFF8F8277DFD1FFFA87D2727FD0BF827FD07F82752F8F8
%A87DFD0EF852A8FD07F852F8F8F87DFD0EFFA8FD09FFF8FD04FF27F8F852
%FFFFA827A8FD24FFA87D27FD0FF8277DFF7DF8F8A852FD0EF827A852FD06
%F87D27F8F827FD0EFFA8A8FD08FF7DFD04FF27F8F827FFFFA8FD0BFFA8A8
%7D7D527D5252527D527D7DFD11FFA87D27FD0AF852A8FFFFFFF8F852FFFD
%10F87DA8FD06F8FF27F8F8F8A8FD0DFF52A8FD0DFF52F8F8F8FD09FF7D52
%2727FD10F8275252A8A8FD0DFFA87DFD06F827FD05FFF8F8F8FF7DFD11F8
%FF52FD04F852FF7DF8F8F8A8FD0DFF52A8FD0DFF7DF8F8F87DFD05FF7D52
%FD19F827277DFD0EFF7D27F8F8F8277DFFFFFF27F8F87DFF27FD11F852FF
%FD04F852FF7DF8F8F827FD0DFF277DFD0EFFF8F8F827FFFF7D52FD14F827
%7D7DFD04A8FFA8A8A8FD10FF7DFD04F852A827F8F827FF52FD13F8A87DF8
%F8F87DFFFFFD04F8A8FD0CFF5227FD0EFF52F8F8F82727FD16F852FD1CFF
%27FD06F827FFA8FD14F827FF27F8F87DA8A827F8F8F852FD0CFF27F8A8FD
%0DFF52FD1CF852FD1CFF27FD05F8A8A8FD16F8A8A8F8F8FF7DA87DFD04F8
%FD0CFF7DF87DFD0DFF52FD09F852527D7D7D525227FD0CF8A8FD1CFFFD05
%F8FF52FD17F8FF52F8FF7D27A8FD04F827FD0BFF52F8F8FD0CFF52FD07F8
%52A8FFFFFFFD05A8FFA87DFD0BF8FD1CFF7DFD04F8A87DFD17F827FF27FF
%52F8FF27FD04F87DFD0AFF7DF8F87DFD0AFF7DFD06F87DFFFF7D2727FD06
%F8277DA8FFA852FD08F852FD1BFF7DFD04F8A87DFD18F852FFFF7DF87D7D
%FD05F8A8FD09FFA8F8F8F8A8FD08FFA8FD05F852FFFF27FD0EF87DFF7DFD
%08F8A8FD17FFA8FF7D27F8F8F827FF52FD19F87DFF52F827FFFD05F827FD
%0AFFF8F8F852FD08FFFD05F8A8FF7DFD11F852FFFFFD07F87DFD17FF27FD
%06F8A8A8FD1BF8A852F8F8A87DFD05F852FD09FF52F8F8F87DFD06FF27FD
%04F8A8FF52FD13F827A8A8FD06F827FD16FF7DFD06F8A8FFFD1CF82727F8
%F852FFFD06F87DFD08FF7DFD04F8A8FD04FF7DFD04F8A8FF27FD15F827FF
%7DFD06F8A8FD15FFFD06F8A8FFFD22F8A852FD06F852FD07FF52FD05F8A8
%FFFFFF27F8F8F87DFF27FD17F827FF27FD05F87DFD0EFFA8FD05FF52FD05
%F8A8FFFD23F827FFFD07F87DFD06FFFD07F8FFFFA8F8F8F852FF7DFD19F8
%7DA8FD05F852FD0EFF7DFD04FFA8FD05F8A8FFFD25F87DA8FD07F852FD04
%FF27FD08F8A852F8F8F8A8A8FD1BF8FF27FD04F852FD07FF7D7DFFFFFFA8
%277DFFFFFF7DFD05F8A8A8FD26F827FF52FD07F852FFFFA8FD0DF827FF27
%FD1BF87DA8FD04F827FD05FFA82727FFFFFF7DF87DFFFFFFA8FD04F827FF
%A8FD28F852FF27FD07F827A827FD0DF8A87DFD1CF827FF27F8F8F827FFFF
%FFA852F827FFFFA8F8F87DFFFFFF52FD04F827FFA8FD2AF87DA8FD08F827
%FD0DF827FF7DFD1DF8FF52FD04F8FF7D52F8F852FFA852F827A8FFFFFF27
%FD04F852FF7DFD2CF8A87DFD0BF8527DFD08F827FF27FD1DF87DA8FD09F8
%5227F8F852FFFFA852FD05F87DFF52FD2EF8FF52FD0AF8A8FF52FD07F852
%FF27FD1DF852FF27FD0BF87DA87D27FD06F8FFFF27FD2FF827FF27FD08F8
%27FF7DA852FD06F852FFFD1FF8FF27FD13F852FF7DFD32F827FF52FD07F8
%7DFFF852FF52FD05F87DFF27FD1DF827FF52FD11F827A8FF52FD34F827FF
%52FD06F8A87DF8F852FF7DFD04F852FFFD1FF8FF52FD10F87DFFA8FD37F8
%27FF52FD05F8FF7DF8F8F827A8FF27F8F852FF52FD1EF8A87DFD0DF8277D
%FFA827FD39F827FF52FD04F8FF27FD05F87DFF52F827FF52FD1EF87D7DFD
%0CF87DFFA827FD3CF827FF7DF8F852FF52FD06F827A8FFFFFF7DFD1EF87D
%A8FD09F8277DFFA852FD40F8A87DF852FFFD09F8277DFF7DFD1EF8A87DFD
%06F82752A8FFA827FD43F8A8A8A8FF27FD0BF852FD1EF8A8A8F8F8F82752
%A8FFA85227FD46F852FFFF27FD2AF8FF7D527DA8A8A85227FD4AF852FF52
%FD29F827FFFFA87D5227FD4EF827FD2BF827FDAEF8FD7FA8A8
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (Line artwork) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (Sketch artwork) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Blue Sky)
(Blue Sky) 0 2 Bd
[
0.56173
0
0.12668
0
0.239216
0.870588
0.929412
4 %_Br
[
0.56173 0 0.12668 0 0.239216 0.870588 0.929412 2 50 100 %_BS
%_0.56173 0 0.12668 0 0.239216 0.870588 0.929412 2 50 100 Bs
0.56173 0 0.12668 0 0.239216 0.870588 0.929412 2 50 0 %_BS
%_0.56173 0 0.12668 0 0.239216 0.870588 0.929412 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gold Dust)
(Gold Dust) 0 4 Bd
[
<
20202121212122222323222424252526262727272828292929292A2A2A2A2A2B2B2C2C2D2D2E2E2E
2F2F302F302F30302F30303130313132323232323333333333333433333434343435343535343535
353536363636
>
<
2E30313233353637383A3C3C3E3F41414344464748494A4B4C4E4F50515354555658595A5C5C5D5F
6162636667696A6B6D6E6F70717374757778797A7B7D7E80818283858687898A8B8C8E8F90929395
9597999A9B9D
>
1
<
00000000000000000000000000000000000000000000000001010101010101010101010102020202
0202030303030303030404040505050606060606070708080909090A0A0B0B0B0C0C0D0D0E0E0E0E
0F0F10101111
>
<
E5E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D9D8D8D8D7D7D6D6D5D5D4D4D4
D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCCCBCBCACAC9C9C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2
C1C1C0C0BFBF
>
<
C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675
74737271706F
>
0
4 %_Br
<
18191919191A1A1A1A1B1B1B1B1B1C1C1C1C1C1C1D1D1D1D1E1E1E1E1E1E1E1E1E1F1F20202020
>
<
6866656362615F5E5C5B595856545352504F4E4B4A4846454442413F3E3C3B393836343331302E
>
1
<
000000000000000000000000000000000000000000000000000000000000000000000000000000
>
0.898039
<
9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5
>
<
030303030303030202020202020202020202020101010101010101010101010100000000000000
>
4 %_Br
<
0000000000000000000000000000000000000000000000000000000101020304040505060709090A
090A0A0C0C0D0E0E10101212131515161718
>
<
ADADADACACACACAAAAA9A9A7A7A6A4A4A3A2A2A09E9E9D9C9A9A989695959492918F8E8D8B898886
858381817F7D7B7977767472706F6D6B6A68
>
1
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000
>
<
FFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EF
EFEEEEEDEDECEBEBEAEAE9E9E8E7E7E6E6E5
>
<
73737374747575767677777878797A7A7B7C7C7D7E7E7F808181828384848586878889898A8B8C8D
8E8F90909192939495969798999A9B9C9D9E
>
<
00000000000000000000000000000001010101010101010101010101010101010101020202020202
020202020202020202020303030303030303
>
4 %_Br
[
0.211032 0.616419 1 0.068025 0.74902 0.435294 0 2 50 99.4382 %_BS
%_0.211032 0.616419 1 0.068025 0.74902 0.435294 0 2 50 99.4382 Bs
0.125582 0.181674 1 0 0.898039 0.772549 0 2 50 86.5168 %_BS
%_0.125582 0.181674 1 0 0.898039 0.772549 0 2 50 86.5168 Bs
0.09543 0.407111 1 0.001007 0.898039 0.619608 0.011765 2 50 55.211 %_BS
%_0.09543 0.407111 1 0.001007 0.898039 0.619608 0.011765 2 50 55.211 Bs
0 0.67892 1 0.000031 1 0.45098 0 2 59.5506 0 %_BS
%_0 0.67892 1 0.000031 1 0.45098 0 2 59.5506 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0E0F101112131314161718191A1B1C1C1D1F2020212324
252627292A2A2B2D2E2F3032333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555658585A5B5D5E6061626364666768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F8081828283848585868787888A8A8B8C8D8E8F8F909192929394959596979898999A9A9B9C9D
9D9E9E9E9FA0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A7A8A8A9AAAAAAABABABACACADADADAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBDBDBDBDBDBEBEBEBEBEBFBFBF
>
<
00000000010102030304040506060708090A0A0B0C0D0E0E0F1010111213131415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343436363738393A3B3C3D3E3F4041
424344454647484A4B4D4E4E4F505253535455565758595A5B5C5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F7071727374757677787879797A7B7C7D7D7E7F8081818283838485868687
8888898A8B8B8C8D8D8E8F8F90909192939394959596969798989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A2A2A2A3A3A3A3A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAABABABABABABABAB
ACACACACACACACACACACADADADADADAD
>
<
00000000010102030304040506060708090A0A0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2D2E2E2F30313233343536373838393A3B3C3D3E3F404142
4345454647484A4B4D4E4F4F515253545455565758595A5B5C5D5D5E5F6061626363646566666768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F808181828383848586
8687878788898A8B8B8C8D8E8E8F8F909090919192929394949595959697979899999A9A9B9C9C9D
9D9D9E9E9E9F9FA0A0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A5A5A6A6A6A6A6A7A7A7A7A7A7A7A7A8A8
A8A8A9A9A9A9A9AAAAAAAAAAABABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D6D8D9DADBDCDDDEDFE0E1E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.749721 0.679194 0.670497 0.901457 0 0 0 2 50 100 %_BS
%_0.749721 0.679194 0.670497 0.901457 0 0 0 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Jive)
(Jive) 47.5615 109.6396 155.9004 219.2813 [
%AI3_Tile
(0 O 0 R 1 0.829892 0.242618 0.080446 0 0.258824 0.494118 Xa
 1 0.829892 0.242618 0.080446 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 74.9453 m
135.0566 75.0645 135.1602 75.1504 135.2813 75.1523 c
148.1875 75.2871 160.0352 78.4199 169.2529 86.667 C
161.2227 81.1094 146.3105 79.1563 137.7256 83.0488 c
137.6152 83.0986 137.5566 83.2188 137.584 83.3369 c
137.6104 83.4551 137.7168 83.5371 137.8379 83.5332 c
148.5176 83.2441 157.1172 86.54 163.8223 92.498 C
156.9531 92.9199 151.248 97.2383 151.2656 102.3428 c
151.2656 102.4619 151.3496 102.5645 151.4668 102.5898 c
151.583 102.6152 151.7012 102.5547 151.75 102.4463 c
152.8711 99.957 156.498 98.666 160.333 99.5664 c
164.5127 100.5469 167.333 103.7559 166.6338 106.7314 c
166.1621 108.7461 164.1973 110.1348 161.6816 110.5186 c
161.5547 110.5371 161.4619 110.6484 161.4648 110.7764 c
161.4688 110.9043 161.5674 111.0098 161.6953 111.0215 c
162.7637 111.124 163.875 111.1279 165.0127 111.0195 c
171.5029 110.4023 176.5264 106.4238 176.9619 101.8418 C
181.6748 102.3887 185.8457 104.998 187.3398 108.6152 c
187.3848 108.7236 187.5 108.7871 187.6152 108.7695 c
187.7305 108.75 187.8184 108.6553 187.8281 108.5391 c
188.2051 103.7871 186.5703 100.7002 182.8584 97.6846 C
188.2422 99.7441 194.3027 99.8496 200.1133 97.1465 c
200.2188 97.0977 200.2773 96.9824 200.2559 96.8672 c
200.2324 96.752 200.1328 96.668 200.0156 96.6641 c
195.1367 96.4736 191.5996 94.9082 188.2852 91.5918 C
206.5391 96.7256 221.3711 85.3906 216.2383 68.5391 c
216.2031 68.4238 216.0918 68.3486 215.9707 68.3613 c
215.8496 68.373 215.7539 68.4688 215.7441 68.5898 c
214.8262 78.3037 208.041 84.7051 197.8828 85.666 C
203.2695 83.6055 208.8828 78.6895 209.4395 70.1318 c
209.4473 70.0098 209.3672 69.8984 209.248 69.8691 c
209.1289 69.8398 209.0059 69.8984 208.9551 70.0098 c
206.1563 76.1641 200.6582 79.2754 194.7949 79.8223 C
201.1289 77.2422 205.1914 71.2207 206.3652 63.4023 c
206.3848 63.2793 206.3105 63.1602 206.1914 63.123 c
206.0742 63.084 205.9453 63.1387 205.8887 63.248 c
202.0234 70.8311 193.7324 76.042 183.4424 72.0605 c
172.8252 67.9512 168.168 55.6738 167.1387 47.0195 c
167.124 46.8984 167.0234 46.8047 166.9004 46.7969 c
166.7783 46.7891 166.668 46.8711 166.6396 46.9922 c
162.9199 62.6797 170.2227 78.9414 183.2764 85.832 C
176.1807 83.8291 169.8369 79.5723 166.249 72.4775 C
157.9551 71.459 152.2451 68.6152 149.3916 63.2383 c
149.335 63.1309 149.2109 63.0781 149.0957 63.1133 c
148.9805 63.1465 148.9043 63.2578 148.9141 63.3789 c
149.0967 65.4883 149.8555 69.709 152.9883 71.6494 C
146.0234 71.6387 140.4824 72.543 135.1895 74.6621 c
135.0781 74.708 135.0127 74.8262 135.0352 74.9453 c
f
164.5215 21.4746 m
164.4229 21.541 164.293 21.5293 164.2061 21.4492 c
164.1201 21.3672 164.1016 21.2383 164.1602 21.1367 c
165.7803 18.3398 164.3008 14.3223 161.1094 14.3223 c
155.3887 14.3223 152.6387 25.0918 153.5137 34.916 C
155.6768 29.1602 157.5469 26.8613 160.8613 24.1211 c
160.9551 24.043 161.0898 24.043 161.1836 24.1191 c
161.2773 24.1973 161.3047 24.3281 161.2471 24.4355 c
156.3906 33.5156 155.3496 40.502 155.3496 48.5215 C
156.8125 42.5625 158.5449 39.1992 163.4766 34.1406 c
163.5625 34.0527 163.6992 34.0391 163.8018 34.1074 c
163.9033 34.1777 163.9404 34.3105 163.8887 34.4238 c
158.5908 46.0137 158.9951 58.8711 162.9414 68.6875 c
162.9805 68.7852 162.9561 68.8965 162.8789 68.9688 c
162.8018 69.0391 162.6895 69.0566 162.5938 69.0098 c
157.3887 66.459 154.3301 64.7832 149.8418 58.6211 C
151.1992 51.2227 150.0703 47.5723 146.6699 41.4258 C
150.6074 51.3438 148.5117 65.3203 138.4824 71.0176 c
138.373 71.0791 138.2344 71.0518 138.1582 70.9531 c
138.0801 70.8535 138.0869 70.7119 138.1738 70.6211 c
141.9551 66.666 144.7051 59.9863 142.3301 52.6934 C
143.8594 63.082 134.7344 71.8086 124.5508 71.8086 c
114.9512 71.8086 108.4004 64.2988 108.9414 56.8672 c
109.4785 49.502 114.3848 45.8984 118.6133 44.3691 c
118.7246 44.3301 118.8496 44.3711 118.9131 44.4707 c
118.9766 44.5723 118.9629 44.7012 118.8799 44.7871 c
113.2695 50.4785 112.502 61.2793 122.4629 64.5469 C
116.6035 59.4902 118.7734 47.7168 128.1523 46.8223 c
128.2695 46.8105 128.3789 46.8809 128.417 46.9922 c
128.4551 47.1035 128.4121 47.2266 128.3135 47.2891 c
126.3047 48.5664 124.6348 51.0605 124.6348 53.8633 c
124.6348 58.5371 128.0566 60.373 130.3105 60.373 c
133.7324 60.373 136.5703 57.1172 136.5703 52.1934 c
136.5703 46.3496 131.3105 41.5098 124.5508 40.7578 c
117.9248 40.0234 111.7686 42.9121 108.8008 47.2168 c
108.7314 47.3184 108.5996 47.3555 108.4873 47.3047 c
108.375 47.2539 108.3164 47.1289 108.3467 47.0098 c
111.3652 35.3066 125.1426 30.1328 135.2344 37.5039 C
128.6211 30.002 118.2285 29.8984 109.5127 37.5898 c
109.4219 37.6699 109.2871 37.6738 109.1904 37.5996 c
109.0938 37.5273 109.0635 37.3945 109.1172 37.2871 c
111.7842 31.8789 118.3701 25.4668 127.7227 26.4023 c
136.2793 27.2578 141.2441 35.416 142.2461 42.0938 C
142.8027 33.5723 140.8525 27.5566 133.4922 21.9473 c
133.3955 21.873 133.3652 21.7402 133.4199 21.6309 c
133.4746 21.5234 133.5996 21.4688 133.7168 21.502 c
140.502 23.4629 145.9473 26.9277 148.7656 34.0469 C
148.7656 27.8848 146.627 21.6738 141.2402 17.5352 c
141.1426 17.4609 141.1133 17.3301 141.168 17.2207 c
141.2227 17.1113 141.3467 17.0566 141.4639 17.0898 c
144.917 18.0742 147.6348 19.5781 149.6016 22.2754 C
150.9121 11.1758 156.123 4.58398 162.127 4.58398 c
166.252 4.58398 169.332 7.61719 169.332 12.4551 c
169.332 15.2852 167.8438 19.2578 164.5215 21.4746 c
f
263.748 113.0938 m
260.5859 116.998 254.209 118.4863 247.3164 117.082 C
247.8262 121.3828 246.9824 125.873 245.7051 128.5664 c
245.6523 128.6758 245.5313 128.7334 245.4141 128.7051 c
245.2969 128.6758 245.2168 128.5684 245.2207 128.4473 c
245.5957 119.6807 240.5977 112.6035 231.7715 109.5371 C
238.6777 114.293 240.6973 123.7305 237.4102 128.6035 c
237.3418 128.7021 237.2148 128.7412 237.1035 128.6953 c
236.9922 128.6504 236.9277 128.5332 236.9492 128.416 c
237.3223 126.3555 236.3438 123.7314 234.2363 121.6895 c
231.3301 118.875 227.3867 118.2363 225.4258 120.2598 c
223.4648 122.2852 224.2285 126.207 227.1328 129.0215 c
228.1934 130.0488 229.3926 130.7832 230.582 131.2061 c
230.6953 131.2461 230.7637 131.3594 230.748 131.4775 c
230.7344 131.5967 230.6387 131.6885 230.5195 131.6982 c
224.1309 132.2529 219.75 128.4463 217.0039 123.8203 c
214.209 119.1152 209.4336 115.4102 203.793 116.1504 c
203.6738 116.166 203.5605 116.0957 203.5195 115.9824 c
203.4805 115.8691 203.5254 115.7422 203.6289 115.6807 c
206.4258 113.9961 209.5 113.2969 213.4922 114.6289 C
207.6973 109.7197 199.4453 106.8867 191.6523 109.4014 c
191.543 109.4375 191.4238 109.3945 191.3613 109.2979 c
191.2988 109.2012 191.3105 109.0752 191.3867 108.9902 c
197.2949 102.4258 209.0762 102.2949 216.4961 107.6172 C
213.459 103.3008 209.4277 100.1328 202.2031 99.1387 c
202.0879 99.123 201.998 99.0313 201.9844 98.916 c
201.9727 98.7998 202.0391 98.6904 202.1484 98.6504 c
210.4395 95.5723 218.748 98.6953 225.5938 106.8652 C
222.6016 100.4883 217.6875 95.3809 210.8262 92.8535 c
210.7109 92.8115 210.6426 92.6934 210.6641 92.5742 c
210.6836 92.4531 210.7871 92.3643 210.9082 92.3613 c
214.8516 92.2803 218.3945 93.2188 223.1738 95.9316 C
219.666 90.2422 220.4336 80.293 225.543 73.6738 c
225.6133 73.582 225.7383 73.5498 225.8457 73.5957 c
225.9512 73.6426 226.0137 73.7549 225.9941 73.8691 c
224.8145 81.0703 227.293 89.1992 231.6035 93.5117 C
229.4512 85.8799 231.5977 78.9355 237.5 73.8672 c
237.5703 73.8066 237.6699 73.79 237.7559 73.8232 c
237.8438 73.8564 237.9043 73.9355 237.918 74.0273 c
239.1523 83.4453 249.6875 93.002 258.5195 93.8027 c
258.6445 93.8135 258.7422 93.9141 258.75 94.0381 c
258.7578 94.1621 258.6758 94.2754 258.5527 94.3027 c
254.2734 95.2715 249.8613 94.793 246.1641 93.2715 C
248.8242 96.2051 252.1035 98.3828 255.7188 99.5176 c
255.8359 99.5537 255.9082 99.668 255.8945 99.7891 c
255.8809 99.9102 255.7813 100.0039 255.6602 100.0127 c
251.1504 100.3242 246.7363 99.0068 242.9297 96.4746 C
247.291 103.0957 253.9102 108.0195 262.3574 109.9805 c
262.4785 110.0088 262.5605 110.1191 262.5547 110.2432 c
262.5469 110.3672 262.4512 110.4668 262.3281 110.4805 c
250.4102 111.7822 240.582 107.1621 234.1074 98.5625 C
235.7559 103.4629 240.4727 108.3184 247.0527 111.1816 c
252.8984 113.7266 258.9023 114.1279 263.4746 112.6914 c
263.5801 112.6582 263.6973 112.6982 263.7598 112.791 c
263.8223 112.8828 263.8184 113.0059 263.748 113.0938 c
f
210.8438 37.5215 m
215.6504 48.0078 215.3086 56.207 211.4375 66.5762 c
211.3926 66.6934 211.2715 66.7607 211.1484 66.7363 c
211.0254 66.7109 210.9395 66.5996 210.9453 66.4746 c
211.5664 53.8535 208.1191 44.8203 200.6465 38.668 C
208.8965 48.5195 205 68.2275 191.8242 68.2275 c
182.2393 68.2275 174.3086 60.252 172.3691 50.7031 c
172.3447 50.582 172.4111 50.459 172.5273 50.416 c
172.6426 50.3711 172.7734 50.416 172.8359 50.5215 c
175.6787 55.2832 180.2451 58.373 185.2939 58.373 c
193.4277 58.373 195.834 51.9063 195.834 47.375 c
195.834 41.1875 190.9082 36.0313 187.127 36.0313 c
183.6904 36.0313 182.0869 38.8555 182.0869 40.959 c
182.0869 44.8574 185.085 48.125 188.4629 49.123 c
188.582 49.1582 188.6602 49.2773 188.6426 49.4023 c
188.623 49.5273 188.5176 49.6191 188.3926 49.6211 c
184.2861 49.6465 180.8154 47.7656 178.7627 44.0527 C
178.4932 46.9277 178.4902 48.7383 179.4033 51.7754 c
179.4385 51.8926 179.3848 52.0176 179.2773 52.0742 c
179.168 52.1309 179.0352 52.1016 178.9609 52.0059 c
171.6045 42.6133 175.125 26.3809 180.9404 19.6484 C
175.4082 23.6309 170.5234 32.2813 170.6006 44.041 c
170.6016 44.1641 170.5156 44.2676 170.3955 44.291 c
170.2754 44.3164 170.1563 44.25 170.1113 44.1367 c
166.0029 33.8848 168.1826 14.8887 179.3926 4.28516 C
176.5088 3.88867 173.5254 3.93945 170.2676 4.97852 c
170.1523 5.01367 170.0273 4.96484 169.9688 4.85938 c
169.9102 4.75195 169.9336 4.61914 170.0273 4.54102 c
174.1191 1.08594 179.8418 0 185.2939 0 C
180.5967 5.5 182.1572 16.5547 189.6484 16.5547 c
194.9961 16.5547 197.4238 8.25586 193.2949 3.77344 c
193.2168 3.6875 193.207 3.55859 193.2695 3.46289 c
193.334 3.36523 193.4551 3.32227 193.5664 3.36133 c
198.3457 5.01563 203.5117 9.15039 203.5117 14.377 c
203.5117 19.4199 198.6992 23.7715 191.7109 23.4277 C
200.5293 25.9336 209.7617 23.1602 214.5918 17.1758 c
214.666 17.082 214.7969 17.0547 214.9023 17.1074 c
215.0098 17.1621 215.0645 17.2832 215.0352 17.3984 c
212.2441 28.1152 203.0684 32.5977 191.5957 31.1055 C
200.877 34.8613 214.8457 31.5859 221.0195 23.7949 c
221.0918 23.7031 221.2188 23.6738 221.3262 23.7227 c
221.4316 23.7734 221.4902 23.8906 221.4668 24.0039 c
220.0957 30.6191 216.6035 35.5664 210.8438 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001434 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001434 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2266 56.8086 m
237.2051 56.6895 237.1016 56.6016 236.9805 56.6016 c
224.0742 56.4648 212.2266 53.334 203.0098 45.0859 C
211.0391 50.6445 225.9512 52.5957 234.5371 48.7051 c
234.6465 48.6543 234.7051 48.5332 234.6777 48.416 c
234.6523 48.2988 234.5449 48.2168 234.4238 48.2188 c
223.7441 48.5098 215.1445 45.2129 208.4395 39.2559 C
215.3086 38.832 221.0137 34.5156 220.9961 29.4102 c
220.9961 29.291 220.9121 29.1875 220.7949 29.1621 c
220.6797 29.1387 220.5605 29.1973 220.5117 29.3066 c
219.3906 31.7949 215.7637 33.0879 211.9297 32.1875 c
207.75 31.2051 204.9297 27.998 205.6289 25.0215 c
206.0996 23.0078 208.0645 21.6191 210.5801 21.2344 c
210.707 21.2148 210.8008 21.1055 210.7969 20.9766 c
210.793 20.8496 210.6953 20.7441 210.5664 20.7305 c
209.498 20.6289 208.3867 20.625 207.25 20.7344 c
200.7598 21.3516 195.7363 25.3281 195.3008 29.9121 C
190.5879 29.3652 186.416 26.7539 184.9229 23.1387 c
184.8779 23.0293 184.7646 22.9668 184.6475 22.9844 c
184.5322 23.002 184.4443 23.0977 184.4346 23.2148 c
184.0576 27.9648 185.6924 31.0527 189.4043 34.0684 C
184.0205 32.0098 177.959 31.9043 172.1484 34.6055 c
172.043 34.6563 171.9844 34.7715 172.0059 34.8867 c
172.0293 35.002 172.1289 35.0859 172.2461 35.0898 c
177.125 35.2793 180.6631 36.8457 183.9795 40.1621 C
165.7227 35.0273 150.8906 46.3633 156.0234 63.2129 c
156.0586 63.3301 156.1699 63.4043 156.291 63.3926 c
156.4121 63.3809 156.5078 63.2852 156.5176 63.1641 c
157.4355 53.4492 164.2207 47.0469 174.3789 46.0879 C
168.9922 48.1465 163.3789 53.0625 162.8223 61.6211 c
162.8145 61.7441 162.8945 61.8535 163.0137 61.8848 c
163.1328 61.9141 163.2559 61.8535 163.3066 61.7422 c
166.1055 55.5879 171.6035 52.4785 177.4668 51.9297 C
171.1328 54.5117 167.0703 60.5332 165.8965 68.3516 c
165.877 68.4746 165.9512 68.5918 166.0703 68.6309 c
166.1875 68.668 166.3164 68.6152 166.373 68.5039 c
170.2383 60.9219 178.5293 55.7109 188.8203 59.6934 c
199.4375 63.8027 204.0938 76.0781 205.123 84.7324 c
205.1387 84.8555 205.2383 84.9492 205.3613 84.957 c
205.4844 84.9629 205.5938 84.8809 205.623 84.7617 c
209.3418 69.0723 202.0391 52.8125 188.9863 45.9219 C
196.082 47.9238 202.4258 52.1816 206.0137 59.2754 C
214.3066 60.293 220.0176 63.1387 222.8711 68.5156 c
222.9277 68.6211 223.0508 68.6738 223.166 68.6406 c
223.2813 68.6055 223.3574 68.4941 223.3477 68.375 c
223.166 66.2656 222.4063 62.0449 219.2734 60.1035 C
226.2383 60.1152 231.7793 59.2109 237.0723 57.0898 c
237.1836 57.0449 237.25 56.9277 237.2266 56.8086 c
f
207.7402 110.2773 m
207.8398 110.2129 207.9688 110.2227 208.0566 110.3047 c
208.1426 110.3848 208.1602 110.5137 208.1016 110.6172 c
206.4824 113.4141 207.9609 117.4297 211.1523 117.4297 c
216.873 117.4297 219.623 106.6602 218.748 96.8379 C
216.5859 102.5918 214.7148 104.8926 211.4004 107.6328 c
211.3066 107.709 211.1719 107.7109 211.0781 107.6328 c
210.9844 107.5566 210.957 107.4238 211.0156 107.3164 c
215.8711 98.2383 216.9121 91.252 216.9121 83.2324 C
215.4492 89.1895 213.7168 92.5527 208.7852 97.6133 c
208.6992 97.7012 208.5625 97.7148 208.4609 97.6445 c
208.3594 97.5742 208.3223 97.4414 208.373 97.3301 c
213.6719 85.7383 213.2676 72.8828 209.3203 63.0664 c
209.2813 62.9688 209.3066 62.8574 209.3828 62.7852 c
209.4609 62.7129 209.5723 62.6973 209.668 62.7422 c
214.873 65.293 217.9316 66.9688 222.4199 73.1328 C
221.0625 80.5313 222.1914 84.1797 225.5918 90.3262 C
221.6543 80.4102 223.75 66.4336 233.7793 60.7363 c
233.8887 60.6738 234.0273 60.7012 234.1035 60.8008 c
234.1816 60.9004 234.1758 61.041 234.0879 61.1328 c
230.3066 65.0879 227.5566 71.7676 229.9316 79.0586 C
228.4023 68.6699 237.5273 59.9453 247.7109 59.9453 c
257.3105 59.9453 263.8613 67.4531 263.3203 74.8848 c
262.7832 82.25 257.877 85.8555 253.6484 87.3828 c
253.5371 87.4238 253.4121 87.3809 253.3496 87.2813 c
253.2852 87.1816 253.2988 87.0508 253.3828 86.9668 c
258.9922 81.2734 259.7598 70.4746 249.7988 67.207 C
255.6582 72.2637 253.4883 84.0352 244.1094 84.9316 c
243.9922 84.9414 243.8828 84.8711 243.8457 84.7598 c
243.8066 84.6504 243.8496 84.5273 243.9492 84.4648 c
245.957 83.1855 247.627 80.6934 247.627 77.8906 c
247.627 73.2168 244.2051 71.3789 241.9512 71.3789 c
238.5293 71.3789 235.6914 74.6348 235.6914 79.5605 c
235.6914 85.4023 240.9512 90.2441 247.7109 90.9941 c
254.3379 91.7305 260.4941 88.8398 263.4609 84.5352 c
263.5313 84.4336 263.6621 84.3984 263.7754 84.4492 c
263.8867 84.5 263.9453 84.623 263.916 84.7422 c
260.8965 96.4453 247.1191 101.6191 237.0273 94.25 C
243.6406 101.75 254.0332 101.8555 262.75 94.1641 c
262.8398 94.084 262.9746 94.0781 263.0723 94.1523 c
263.168 94.2266 263.1992 94.3574 263.1445 94.4668 c
260.4785 99.873 253.8926 106.2852 244.5391 105.3516 c
235.9824 104.4961 231.0176 96.3359 230.0156 89.6602 C
229.459 98.1816 231.4102 104.1953 238.7695 109.8047 c
238.8672 109.8789 238.8965 110.0117 238.8418 110.1211 c
238.7871 110.2305 238.6621 110.2852 238.5449 110.25 c
231.7598 108.291 226.3145 104.8262 223.4961 97.707 C
223.4961 103.8672 225.6348 110.0781 231.0215 114.2168 c
231.1191 114.291 231.1484 114.4238 231.0938 114.5332 c
231.0391 114.6406 230.916 114.6953 230.7988 114.6621 c
227.3457 113.6797 224.627 112.1738 222.6602 109.4785 C
221.3496 120.5781 216.1387 127.168 210.1348 127.168 c
206.0098 127.168 202.9297 124.1348 202.9297 119.2988 c
202.9297 116.4688 204.418 112.4961 207.7402 110.2773 c
f
108.5137 18.6602 m
111.6758 14.7559 118.0527 13.2676 124.9453 14.6719 C
124.4355 10.3691 125.2793 5.88086 126.5566 3.18555 c
126.6094 3.07813 126.7305 3.01953 126.8477 3.04883 c
126.9648 3.07813 127.0449 3.18555 127.041 3.30664 c
126.666 12.0723 131.6641 19.1484 140.4902 22.2148 C
133.584 17.459 131.5645 8.02148 134.8516 3.15039 c
134.9199 3.05078 135.0469 3.01172 135.1582 3.05664 c
135.2695 3.10156 135.334 3.21875 135.3125 3.33789 c
134.9395 5.39844 135.918 8.02148 138.0254 10.0625 c
140.9316 12.877 144.875 13.5156 146.8359 11.4922 c
148.7969 9.4668 148.0332 5.54492 145.1289 2.73242 c
144.0684 1.70508 142.8691 0.96875 141.6797 0.546875 c
141.5664 0.505859 141.498 0.392578 141.5137 0.275391 c
141.5273 0.15625 141.623 0.064453 141.7422 0.054688 c
148.1309 -0.5 152.5117 3.30664 155.2578 7.93164 c
158.0527 12.6367 162.8281 16.3438 168.4688 15.6035 c
168.5879 15.5879 168.7012 15.6582 168.7422 15.7715 c
168.7813 15.8848 168.7363 16.0098 168.6328 16.0723 c
165.8359 17.7559 162.7617 18.4551 158.7695 17.125 C
164.5645 22.0332 172.8164 24.8652 180.6104 22.3516 c
180.7197 22.3164 180.8389 22.3594 180.9014 22.4551 c
180.9639 22.5508 180.9541 22.6777 180.876 22.7637 c
174.9668 29.3281 163.1855 29.459 155.7656 24.1348 C
158.8027 28.4512 162.834 31.6211 170.0586 32.6133 c
170.1738 32.6289 170.2637 32.7227 170.2773 32.8379 c
170.2891 32.9531 170.2227 33.0625 170.1133 33.1035 c
161.8223 36.1797 153.5137 33.0586 146.668 24.8867 C
149.6602 31.2656 154.5742 36.373 161.4355 38.9004 c
161.5508 38.9414 161.6191 39.0586 161.5977 39.1797 c
161.5781 39.3008 161.4746 39.3887 161.3535 39.3906 c
157.4102 39.4727 153.8672 38.5332 149.0879 35.8203 C
152.5957 41.5117 151.8281 51.459 146.7188 58.0801 c
146.6484 58.1719 146.5234 58.2031 146.416 58.1582 c
146.3105 58.1113 146.248 57.998 146.2676 57.8828 c
147.4473 50.6836 144.9688 42.5547 140.6582 38.2422 C
142.8105 45.873 140.6641 52.8184 134.7617 57.8848 c
134.6914 57.9453 134.5918 57.9629 134.5059 57.9297 c
134.418 57.8965 134.3574 57.8184 134.3438 57.7266 c
133.1094 48.3086 122.5742 38.752 113.7422 37.9512 c
113.6172 37.9395 113.5195 37.8398 113.5117 37.7148 c
113.5039 37.5898 113.5859 37.4785 113.709 37.4512 c
117.9883 36.4824 122.4004 36.9609 126.0977 38.4805 C
123.4375 35.5488 120.1582 33.3711 116.543 32.2363 c
116.4258 32.1992 116.3535 32.0859 116.3672 31.9648 c
116.3809 31.8438 116.4805 31.748 116.6016 31.7402 c
121.1113 31.4297 125.5254 32.7461 129.332 35.2793 C
124.9707 28.6582 118.3516 23.7344 109.9043 21.7715 c
109.7832 21.7441 109.7012 21.6328 109.707 21.5098 c
109.7148 21.3867 109.8105 21.2871 109.9336 21.2734 c
121.8516 19.9707 131.6797 24.5918 138.1543 33.1914 C
136.5059 28.2891 131.7891 23.4355 125.209 20.5723 c
119.3633 18.0273 113.3594 17.625 108.7871 19.0625 c
108.6816 19.0957 108.5645 19.0547 108.502 18.9629 c
108.4395 18.8691 108.4434 18.7461 108.5137 18.6602 c
f
161.418 94.2324 m
156.6113 83.7461 156.9531 75.5469 160.8242 65.1777 c
160.8691 65.0605 160.9902 64.9922 161.1133 65.0176 c
161.2363 65.043 161.3223 65.1543 161.3164 65.2773 c
160.6953 77.9004 164.1426 86.9316 171.6152 93.0859 C
163.3652 83.2324 167.2617 63.5254 180.4385 63.5254 c
190.0234 63.5254 197.9531 71.502 199.8926 81.0508 c
199.918 81.1719 199.8516 81.293 199.7344 81.3379 c
199.6191 81.3828 199.4883 81.3379 199.4258 81.2305 c
196.584 76.4688 192.0176 73.3789 186.9688 73.3789 c
178.834 73.3789 176.4277 79.8457 176.4277 84.3789 c
176.4277 90.5645 181.3545 95.7207 185.1357 95.7207 c
188.5723 95.7207 190.1758 92.8984 190.1758 90.7949 c
190.1758 86.8965 187.1777 83.6289 183.8018 82.6309 c
183.6807 82.5938 183.6045 82.4766 183.6221 82.3516 c
183.6396 82.2266 183.7451 82.1328 183.8721 82.1328 c
187.9766 82.1074 191.4473 83.9863 193.5 87.7012 C
193.7695 84.8262 193.7715 83.0156 192.8594 79.9766 c
192.8242 79.8594 192.877 79.7344 192.9844 79.6777 c
193.0938 79.623 193.2266 79.6504 193.3008 79.748 c
200.6582 89.1406 197.1367 105.3711 191.3223 112.1055 C
196.8535 108.123 201.7383 99.4707 201.6621 87.7109 c
201.6602 87.5898 201.7461 87.4844 201.8672 87.4609 c
201.9863 87.4375 202.1055 87.502 202.1504 87.6152 c
206.2598 97.8691 204.0801 116.8633 192.8691 127.4668 C
195.7539 127.8652 198.7363 127.8145 201.9941 126.7754 c
202.1094 126.7383 202.2344 126.7891 202.293 126.8945 c
202.3516 127 202.3281 127.1328 202.2344 127.2109 c
198.1426 130.666 192.4199 131.752 186.9688 131.752 C
191.666 126.252 190.1055 115.1992 182.6162 115.1992 c
177.2656 115.1992 174.8379 123.498 178.9668 127.9805 c
179.0449 128.0664 179.0547 128.1934 178.9922 128.291 c
178.9277 128.3887 178.8066 128.4297 178.6953 128.3926 c
173.916 126.7363 168.75 122.6035 168.75 117.375 c
168.75 112.334 173.5625 107.9805 180.5537 108.3242 C
171.7324 105.8203 162.5 108.5918 157.6699 114.5781 c
157.5957 114.6699 157.4648 114.6992 157.3594 114.6445 c
157.252 114.5918 157.1973 114.4707 157.2266 114.3535 c
160.0176 103.6387 169.1934 99.1543 180.667 100.6484 C
171.3848 96.8906 157.416 100.166 151.2422 107.957 c
151.1699 108.0488 151.043 108.0801 150.9355 108.0293 c
150.8301 107.9805 150.7715 107.8633 150.7949 107.748 c
152.166 101.1328 155.6582 96.1875 161.418 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829892 0.242618 0.080446 0 0.258824 0.494118 Xa
 1 0.829892 0.242618 0.080446 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 74.9453 m
26.7178 75.0645 26.8213 75.1504 26.9424 75.1523 c
39.8486 75.2871 51.6963 78.4199 60.9141 86.667 C
52.8838 81.1094 37.9717 79.1563 29.3867 83.0488 c
29.2764 83.0986 29.2178 83.2188 29.2451 83.3369 c
29.2715 83.4551 29.3779 83.5371 29.499 83.5332 c
40.1787 83.2441 48.7783 86.54 55.4834 92.498 C
48.6143 92.9199 42.9092 97.2383 42.9268 102.3428 c
42.9268 102.4619 43.0107 102.5645 43.1279 102.5898 c
43.2441 102.6152 43.3623 102.5547 43.4111 102.4463 c
44.5322 99.957 48.1592 98.666 51.9941 99.5664 c
56.1738 100.5469 58.9941 103.7559 58.2949 106.7314 c
57.8232 108.7461 55.8584 110.1348 53.3428 110.5186 c
53.2158 110.5371 53.123 110.6484 53.126 110.7764 c
53.1299 110.9043 53.2285 111.0098 53.3564 111.0215 c
54.4248 111.124 55.5361 111.1279 56.6738 111.0195 c
63.1641 110.4023 68.1875 106.4238 68.623 101.8418 C
73.3359 102.3887 77.5078 104.998 79.002 108.6152 c
79.0469 108.7236 79.1621 108.7871 79.2773 108.7695 c
79.3926 108.75 79.4805 108.6553 79.4902 108.5391 c
79.8672 103.7871 78.2324 100.7002 74.5195 97.6846 C
79.9043 99.7441 85.9648 99.8496 91.7754 97.1465 c
91.8809 97.0977 91.9395 96.9824 91.918 96.8672 c
91.8945 96.752 91.7949 96.668 91.6777 96.6641 c
86.7988 96.4736 83.2617 94.9082 79.9473 91.5918 C
98.2012 96.7256 113.0332 85.3906 107.9004 68.5391 c
107.8652 68.4238 107.7539 68.3486 107.6328 68.3613 c
107.5117 68.373 107.416 68.4688 107.4063 68.5898 c
106.4883 78.3037 99.7031 84.7051 89.5449 85.666 C
94.9316 83.6055 100.5449 78.6895 101.1016 70.1318 c
101.1094 70.0098 101.0293 69.8984 100.9102 69.8691 c
100.791 69.8398 100.668 69.8984 100.6172 70.0098 c
97.8184 76.1641 92.3203 79.2754 86.457 79.8223 C
92.791 77.2422 96.8535 71.2207 98.0273 63.4023 c
98.0469 63.2793 97.9727 63.1602 97.8535 63.123 c
97.7363 63.084 97.6074 63.1387 97.5508 63.248 c
93.6855 70.8311 85.3945 76.042 75.1035 72.0605 c
64.4863 67.9512 59.8291 55.6738 58.7998 47.0195 c
58.7852 46.8984 58.6846 46.8047 58.5615 46.7969 c
58.4395 46.7891 58.3291 46.8711 58.3008 46.9922 c
54.5811 62.6797 61.8838 78.9414 74.9375 85.832 C
67.8418 83.8291 61.498 79.5723 57.9102 72.4775 C
49.6162 71.459 43.9063 68.6152 41.0527 63.2383 c
40.9961 63.1309 40.8721 63.0781 40.7568 63.1133 c
40.6416 63.1465 40.5654 63.2578 40.5752 63.3789 c
40.7578 65.4883 41.5166 69.709 44.6494 71.6494 C
37.6846 71.6387 32.1436 72.543 26.8506 74.6621 c
26.7393 74.708 26.6738 74.8262 26.6963 74.9453 c
f
56.1826 21.4746 m
56.084 21.541 55.9541 21.5293 55.8672 21.4492 c
55.7813 21.3672 55.7627 21.2383 55.8213 21.1367 c
57.4414 18.3398 55.9619 14.3223 52.7705 14.3223 c
47.0498 14.3223 44.2998 25.0918 45.1748 34.916 C
47.3379 29.1602 49.208 26.8613 52.5225 24.1211 c
52.6162 24.043 52.751 24.043 52.8447 24.1191 c
52.9385 24.1973 52.9658 24.3281 52.9082 24.4355 c
48.0518 33.5156 47.0107 40.502 47.0107 48.5215 C
48.4736 42.5625 50.2061 39.1992 55.1377 34.1406 c
55.2236 34.0527 55.3604 34.0391 55.4629 34.1074 c
55.5645 34.1777 55.6016 34.3105 55.5498 34.4238 c
50.252 46.0137 50.6563 58.8711 54.6025 68.6875 c
54.6416 68.7852 54.6172 68.8965 54.54 68.9688 c
54.4629 69.0391 54.3506 69.0566 54.2549 69.0098 c
49.0498 66.459 45.9912 64.7832 41.5029 58.6211 C
42.8604 51.2227 41.7314 47.5723 38.3311 41.4258 C
42.2686 51.3438 40.1729 65.3203 30.1436 71.0176 c
30.0342 71.0791 29.8955 71.0518 29.8193 70.9531 c
29.7412 70.8535 29.748 70.7119 29.835 70.6211 c
33.6162 66.666 36.3662 59.9863 33.9912 52.6934 C
35.5205 63.082 26.3955 71.8086 16.2119 71.8086 c
6.6123 71.8086 0.061523 64.2988 0.602539 56.8672 c
1.13965 49.502 6.0459 45.8984 10.2744 44.3691 c
10.3857 44.3301 10.5107 44.3711 10.5742 44.4707 c
10.6377 44.5723 10.624 44.7012 10.541 44.7871 c
4.93066 50.4785 4.16309 61.2793 14.124 64.5469 C
8.26465 59.4902 10.4346 47.7168 19.8135 46.8223 c
19.9307 46.8105 20.04 46.8809 20.0781 46.9922 c
20.1162 47.1035 20.0732 47.2266 19.9746 47.2891 c
17.9658 48.5664 16.2959 51.0605 16.2959 53.8633 c
16.2959 58.5371 19.7178 60.373 21.9717 60.373 c
25.3936 60.373 28.2314 57.1172 28.2314 52.1934 c
28.2314 46.3496 22.9717 41.5098 16.2119 40.7578 c
9.58594 40.0234 3.42969 42.9121 0.461914 47.2168 c
0.392578 47.3184 0.260742 47.3555 0.148438 47.3047 c
0.036133 47.2539 -0.022461 47.1289 0.007813 47.0098 c
3.02637 35.3066 16.8037 30.1328 26.8955 37.5039 C
20.2822 30.002 9.88965 29.8984 1.17383 37.5898 c
1.08301 37.6699 0.948242 37.6738 0.851563 37.5996 c
0.754883 37.5273 0.724609 37.3945 0.77832 37.2871 c
3.44531 31.8789 10.0313 25.4668 19.3838 26.4023 c
27.9404 27.2578 32.9053 35.416 33.9072 42.0938 C
34.4639 33.5723 32.5137 27.5566 25.1533 21.9473 c
25.0566 21.873 25.0264 21.7402 25.0811 21.6309 c
25.1357 21.5234 25.2607 21.4688 25.3779 21.502 c
32.1631 23.4629 37.6084 26.9277 40.4268 34.0469 C
40.4268 27.8848 38.2881 21.6738 32.9014 17.5352 c
32.8037 17.4609 32.7744 17.3301 32.8291 17.2207 c
32.8838 17.1113 33.0078 17.0566 33.125 17.0898 c
36.5781 18.0742 39.2959 19.5781 41.2627 22.2754 C
42.5732 11.1758 47.7842 4.58398 53.7881 4.58398 c
57.9131 4.58398 60.9932 7.61719 60.9932 12.4551 c
60.9932 15.2852 59.5049 19.2578 56.1826 21.4746 c
f
155.4102 113.0938 m
152.248 116.998 145.8711 118.4863 138.9785 117.082 C
139.4883 121.3828 138.6445 125.873 137.3672 128.5664 c
137.3145 128.6758 137.1934 128.7334 137.0762 128.7051 c
136.959 128.6758 136.8789 128.5684 136.8828 128.4473 c
137.2578 119.6807 132.2598 112.6035 123.4336 109.5371 C
130.3398 114.293 132.3594 123.7305 129.0723 128.6035 c
129.0039 128.7021 128.877 128.7412 128.7656 128.6953 c
128.6543 128.6504 128.5898 128.5332 128.6113 128.416 c
128.9844 126.3555 128.0059 123.7314 125.8984 121.6895 c
122.9922 118.875 119.0488 118.2363 117.0879 120.2598 c
115.127 122.2852 115.8906 126.207 118.7949 129.0215 c
119.8555 130.0488 121.0547 130.7832 122.2441 131.2061 c
122.3574 131.2461 122.4258 131.3594 122.4102 131.4775 c
122.3965 131.5967 122.3008 131.6885 122.1816 131.6982 c
115.793 132.2529 111.4121 128.4463 108.666 123.8203 c
105.8711 119.1152 101.0957 115.4102 95.4551 116.1504 c
95.3359 116.166 95.2227 116.0957 95.1816 115.9824 c
95.1426 115.8691 95.1875 115.7422 95.291 115.6807 c
98.0879 113.9961 101.1621 113.2969 105.1543 114.6289 C
99.3594 109.7197 91.1074 106.8867 83.3145 109.4014 c
83.2051 109.4375 83.0859 109.3945 83.0234 109.2979 c
82.9609 109.2012 82.9727 109.0752 83.0488 108.9902 c
88.957 102.4258 100.7383 102.2949 108.1582 107.6172 C
105.1211 103.3008 101.0898 100.1328 93.8652 99.1387 c
93.75 99.123 93.6602 99.0313 93.6465 98.916 c
93.6348 98.7998 93.7012 98.6904 93.8105 98.6504 c
102.1016 95.5723 110.4102 98.6953 117.2559 106.8652 C
114.2637 100.4883 109.3496 95.3809 102.4883 92.8535 c
102.373 92.8115 102.3047 92.6934 102.3262 92.5742 c
102.3457 92.4531 102.4492 92.3643 102.5703 92.3613 c
106.5137 92.2803 110.0566 93.2188 114.8359 95.9316 C
111.3281 90.2422 112.0957 80.293 117.2051 73.6738 c
117.2754 73.582 117.4004 73.5498 117.5078 73.5957 c
117.6133 73.6426 117.6758 73.7549 117.6563 73.8691 c
116.4766 81.0703 118.9551 89.1992 123.2656 93.5117 C
121.1133 85.8799 123.2598 78.9355 129.1621 73.8672 c
129.2324 73.8066 129.332 73.79 129.418 73.8232 c
129.5059 73.8564 129.5664 73.9355 129.5801 74.0273 c
130.8145 83.4453 141.3496 93.002 150.1816 93.8027 c
150.3066 93.8135 150.4043 93.9141 150.4121 94.0381 c
150.4199 94.1621 150.3379 94.2754 150.2148 94.3027 c
145.9355 95.2715 141.5234 94.793 137.8262 93.2715 C
140.4863 96.2051 143.7656 98.3828 147.3809 99.5176 c
147.498 99.5537 147.5703 99.668 147.5566 99.7891 c
147.543 99.9102 147.4434 100.0039 147.3223 100.0127 c
142.8125 100.3242 138.3984 99.0068 134.5918 96.4746 C
138.9531 103.0957 145.5723 108.0195 154.0195 109.9805 c
154.1406 110.0088 154.2227 110.1191 154.2168 110.2432 c
154.209 110.3672 154.1133 110.4668 153.9902 110.4805 c
142.0723 111.7822 132.2441 107.1621 125.7695 98.5625 C
127.418 103.4629 132.1348 108.3184 138.7148 111.1816 c
144.5605 113.7266 150.5645 114.1279 155.1367 112.6914 c
155.2422 112.6582 155.3594 112.6982 155.4219 112.791 c
155.4844 112.8828 155.4805 113.0059 155.4102 113.0938 c
f
102.5059 37.5215 m
107.3125 48.0078 106.9707 56.207 103.0996 66.5762 c
103.0547 66.6934 102.9336 66.7607 102.8105 66.7363 c
102.6875 66.7109 102.6016 66.5996 102.6074 66.4746 c
103.2285 53.8535 99.7813 44.8203 92.3086 38.668 C
100.5586 48.5195 96.6621 68.2275 83.4863 68.2275 c
73.9004 68.2275 65.9697 60.252 64.0303 50.7031 c
64.0059 50.582 64.0723 50.459 64.1885 50.416 c
64.3037 50.3711 64.4346 50.416 64.4971 50.5215 c
67.3398 55.2832 71.9063 58.373 76.9551 58.373 c
85.0898 58.373 87.4961 51.9063 87.4961 47.375 c
87.4961 41.1875 82.5703 36.0313 78.7891 36.0313 c
75.3516 36.0313 73.748 38.8555 73.748 40.959 c
73.748 44.8574 76.7461 48.125 80.125 49.123 c
80.2441 49.1582 80.3223 49.2773 80.3047 49.4023 c
80.2852 49.5273 80.1797 49.6191 80.0547 49.6211 c
75.9473 49.6465 72.4766 47.7656 70.4238 44.0527 C
70.1543 46.9277 70.1514 48.7383 71.0645 51.7754 c
71.0996 51.8926 71.0459 52.0176 70.9385 52.0742 c
70.8291 52.1309 70.6963 52.1016 70.6221 52.0059 c
63.2656 42.6133 66.7861 26.3809 72.6016 19.6484 C
67.0693 23.6309 62.1846 32.2813 62.2617 44.041 c
62.2627 44.1641 62.1768 44.2676 62.0566 44.291 c
61.9365 44.3164 61.8174 44.25 61.7725 44.1367 c
57.6641 33.8848 59.8438 14.8887 71.0537 4.28516 C
68.1699 3.88867 65.1865 3.93945 61.9287 4.97852 c
61.8135 5.01367 61.6885 4.96484 61.6299 4.85938 c
61.5713 4.75195 61.5947 4.61914 61.6885 4.54102 c
65.7803 1.08594 71.5029 0 76.9551 0 C
72.2578 5.5 73.8184 16.5547 81.3105 16.5547 c
86.6582 16.5547 89.0859 8.25586 84.957 3.77344 c
84.8789 3.6875 84.8691 3.55859 84.9316 3.46289 c
84.9961 3.36523 85.1172 3.32227 85.2285 3.36133 c
90.0078 5.01563 95.1738 9.15039 95.1738 14.377 c
95.1738 19.4199 90.3613 23.7715 83.373 23.4277 C
92.1914 25.9336 101.4238 23.1602 106.2539 17.1758 c
106.3281 17.082 106.459 17.0547 106.5645 17.1074 c
106.6719 17.1621 106.7266 17.2832 106.6973 17.3984 c
103.9063 28.1152 94.7305 32.5977 83.2578 31.1055 C
92.5391 34.8613 106.5078 31.5859 112.6816 23.7949 c
112.7539 23.7031 112.8809 23.6738 112.9883 23.7227 c
113.0938 23.7734 113.1523 23.8906 113.1289 24.0039 c
111.7578 30.6191 108.2656 35.5664 102.5059 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001434 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001434 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8887 56.8086 m
128.8672 56.6895 128.7637 56.6016 128.6426 56.6016 c
115.7363 56.4648 103.8887 53.334 94.6719 45.0859 C
102.7012 50.6445 117.6133 52.5957 126.1992 48.7051 c
126.3086 48.6543 126.3672 48.5332 126.3398 48.416 c
126.3145 48.2988 126.207 48.2168 126.0859 48.2188 c
115.4063 48.5098 106.8066 45.2129 100.1016 39.2559 C
106.9707 38.832 112.6758 34.5156 112.6582 29.4102 c
112.6582 29.291 112.5742 29.1875 112.457 29.1621 c
112.3418 29.1387 112.2227 29.1973 112.1738 29.3066 c
111.0527 31.7949 107.4258 33.0879 103.5918 32.1875 c
99.4121 31.2051 96.5918 27.998 97.291 25.0215 c
97.7617 23.0078 99.7266 21.6191 102.2422 21.2344 c
102.3691 21.2148 102.4629 21.1055 102.459 20.9766 c
102.4551 20.8496 102.3574 20.7441 102.2285 20.7305 c
101.1602 20.6289 100.0488 20.625 98.9121 20.7344 c
92.4219 21.3516 87.3984 25.3281 86.9629 29.9121 C
82.25 29.3652 78.0781 26.7539 76.584 23.1387 c
76.5391 23.0293 76.4258 22.9668 76.3086 22.9844 c
76.1934 23.002 76.1055 23.0977 76.0957 23.2148 c
75.7188 27.9648 77.3535 31.0527 81.0664 34.0684 C
75.6816 32.0098 69.6201 31.9043 63.8096 34.6055 c
63.7041 34.6563 63.6455 34.7715 63.667 34.8867 c
63.6904 35.002 63.79 35.0859 63.9072 35.0898 c
68.7861 35.2793 72.3242 36.8457 75.6406 40.1621 C
57.3838 35.0273 42.5518 46.3633 47.6846 63.2129 c
47.7197 63.3301 47.8311 63.4043 47.9521 63.3926 c
48.0732 63.3809 48.1689 63.2852 48.1787 63.1641 c
49.0967 53.4492 55.8818 47.0469 66.04 46.0879 C
60.6533 48.1465 55.04 53.0625 54.4834 61.6211 c
54.4756 61.7441 54.5557 61.8535 54.6748 61.8848 c
54.7939 61.9141 54.917 61.8535 54.9678 61.7422 c
57.7666 55.5879 63.2646 52.4785 69.1279 51.9297 C
62.7939 54.5117 58.7314 60.5332 57.5576 68.3516 c
57.5381 68.4746 57.6123 68.5918 57.7314 68.6309 c
57.8486 68.668 57.9775 68.6152 58.0342 68.5039 c
61.8994 60.9219 70.1904 55.7109 80.4824 59.6934 c
91.0996 63.8027 95.7559 76.0781 96.7852 84.7324 c
96.8008 84.8555 96.9004 84.9492 97.0234 84.957 c
97.1465 84.9629 97.2559 84.8809 97.2852 84.7617 c
101.0039 69.0723 93.7012 52.8125 80.6484 45.9219 C
87.7441 47.9238 94.0879 52.1816 97.6758 59.2754 C
105.9688 60.293 111.6797 63.1387 114.5332 68.5156 c
114.5898 68.6211 114.7129 68.6738 114.8281 68.6406 c
114.9434 68.6055 115.0195 68.4941 115.0098 68.375 c
114.8281 66.2656 114.0684 62.0449 110.9355 60.1035 C
117.9004 60.1152 123.4414 59.2109 128.7344 57.0898 c
128.8457 57.0449 128.9121 56.9277 128.8887 56.8086 c
f
99.4023 110.2773 m
99.502 110.2129 99.6309 110.2227 99.7188 110.3047 c
99.8047 110.3848 99.8223 110.5137 99.7637 110.6172 c
98.1445 113.4141 99.623 117.4297 102.8145 117.4297 c
108.5352 117.4297 111.2852 106.6602 110.4102 96.8379 C
108.248 102.5918 106.377 104.8926 103.0625 107.6328 c
102.9688 107.709 102.834 107.7109 102.7402 107.6328 c
102.6465 107.5566 102.6191 107.4238 102.6777 107.3164 c
107.5332 98.2383 108.5742 91.252 108.5742 83.2324 C
107.1113 89.1895 105.3789 92.5527 100.4473 97.6133 c
100.3613 97.7012 100.2246 97.7148 100.123 97.6445 c
100.0215 97.5742 99.9844 97.4414 100.0352 97.3301 c
105.334 85.7383 104.9297 72.8828 100.9824 63.0664 c
100.9434 62.9688 100.9688 62.8574 101.0449 62.7852 c
101.123 62.7129 101.2344 62.6973 101.3301 62.7422 c
106.5352 65.293 109.5938 66.9688 114.082 73.1328 C
112.7246 80.5313 113.8535 84.1797 117.2539 90.3262 C
113.3164 80.4102 115.4121 66.4336 125.4414 60.7363 c
125.5508 60.6738 125.6895 60.7012 125.7656 60.8008 c
125.8438 60.9004 125.8379 61.041 125.75 61.1328 c
121.9688 65.0879 119.2188 71.7676 121.5938 79.0586 C
120.0645 68.6699 129.1895 59.9453 139.373 59.9453 c
148.9727 59.9453 155.5234 67.4531 154.9824 74.8848 c
154.4453 82.25 149.5391 85.8555 145.3105 87.3828 c
145.1992 87.4238 145.0742 87.3809 145.0117 87.2813 c
144.9473 87.1816 144.9609 87.0508 145.0449 86.9668 c
150.6543 81.2734 151.4219 70.4746 141.4609 67.207 C
147.3203 72.2637 145.1504 84.0352 135.7715 84.9316 c
135.6543 84.9414 135.5449 84.8711 135.5078 84.7598 c
135.4688 84.6504 135.5117 84.5273 135.6113 84.4648 c
137.6191 83.1855 139.2891 80.6934 139.2891 77.8906 c
139.2891 73.2168 135.8672 71.3789 133.6133 71.3789 c
130.1914 71.3789 127.3535 74.6348 127.3535 79.5605 c
127.3535 85.4023 132.6133 90.2441 139.373 90.9941 c
146 91.7305 152.1563 88.8398 155.123 84.5352 c
155.1934 84.4336 155.3242 84.3984 155.4375 84.4492 c
155.5488 84.5 155.6074 84.623 155.5781 84.7422 c
152.5586 96.4453 138.7813 101.6191 128.6895 94.25 C
135.3027 101.75 145.6953 101.8555 154.4121 94.1641 c
154.502 94.084 154.6367 94.0781 154.7344 94.1523 c
154.8301 94.2266 154.8613 94.3574 154.8066 94.4668 c
152.1406 99.873 145.5547 106.2852 136.2012 105.3516 c
127.6445 104.4961 122.6797 96.3359 121.6777 89.6602 C
121.1211 98.1816 123.0723 104.1953 130.4316 109.8047 c
130.5293 109.8789 130.5586 110.0117 130.5039 110.1211 c
130.4492 110.2305 130.3242 110.2852 130.207 110.25 c
123.4219 108.291 117.9766 104.8262 115.1582 97.707 C
115.1582 103.8672 117.2969 110.0781 122.6836 114.2168 c
122.7813 114.291 122.8105 114.4238 122.7559 114.5332 c
122.7012 114.6406 122.5781 114.6953 122.4609 114.6621 c
119.0078 113.6797 116.2891 112.1738 114.3223 109.4785 C
113.0117 120.5781 107.8008 127.168 101.7969 127.168 c
97.6719 127.168 94.5918 124.1348 94.5918 119.2988 c
94.5918 116.4688 96.0801 112.4961 99.4023 110.2773 c
f
0.174805 18.6602 m
3.33691 14.7559 9.71387 13.2676 16.6064 14.6719 C
16.0967 10.3691 16.9404 5.88086 18.2178 3.18555 c
18.2705 3.07813 18.3916 3.01953 18.5088 3.04883 c
18.626 3.07813 18.7061 3.18555 18.7021 3.30664 c
18.3271 12.0723 23.3252 19.1484 32.1514 22.2148 C
25.2451 17.459 23.2256 8.02148 26.5127 3.15039 c
26.5811 3.05078 26.708 3.01172 26.8193 3.05664 c
26.9307 3.10156 26.9951 3.21875 26.9736 3.33789 c
26.6006 5.39844 27.5791 8.02148 29.6865 10.0625 c
32.5928 12.877 36.5361 13.5156 38.4971 11.4922 c
40.458 9.4668 39.6943 5.54492 36.79 2.73242 c
35.7295 1.70508 34.5303 0.96875 33.3408 0.546875 c
33.2275 0.505859 33.1592 0.392578 33.1748 0.275391 c
33.1885 0.15625 33.2842 0.064453 33.4033 0.054688 c
39.792 -0.5 44.1729 3.30664 46.9189 7.93164 c
49.7139 12.6367 54.4893 16.3438 60.1299 15.6035 c
60.249 15.5879 60.3623 15.6582 60.4033 15.7715 c
60.4424 15.8848 60.3975 16.0098 60.2939 16.0723 c
57.4971 17.7559 54.4229 18.4551 50.4307 17.125 C
56.2256 22.0332 64.4775 24.8652 72.2715 22.3516 c
72.3809 22.3164 72.5 22.3594 72.5625 22.4551 c
72.625 22.5508 72.6152 22.6777 72.5371 22.7637 c
66.6279 29.3281 54.8467 29.459 47.4268 24.1348 C
50.4639 28.4512 54.4951 31.6211 61.7197 32.6133 c
61.835 32.6289 61.9248 32.7227 61.9385 32.8379 c
61.9502 32.9531 61.8838 33.0625 61.7744 33.1035 c
53.4834 36.1797 45.1748 33.0586 38.3291 24.8867 C
41.3213 31.2656 46.2354 36.373 53.0967 38.9004 c
53.2119 38.9414 53.2803 39.0586 53.2588 39.1797 c
53.2393 39.3008 53.1357 39.3887 53.0146 39.3906 c
49.0713 39.4727 45.5283 38.5332 40.749 35.8203 C
44.2568 41.5117 43.4893 51.459 38.3799 58.0801 c
38.3096 58.1719 38.1846 58.2031 38.0771 58.1582 c
37.9717 58.1113 37.9092 57.998 37.9287 57.8828 c
39.1084 50.6836 36.6299 42.5547 32.3193 38.2422 C
34.4717 45.873 32.3252 52.8184 26.4229 57.8848 c
26.3525 57.9453 26.2529 57.9629 26.167 57.9297 c
26.0791 57.8965 26.0186 57.8184 26.0049 57.7266 c
24.7705 48.3086 14.2354 38.752 5.40332 37.9512 c
5.27832 37.9395 5.18066 37.8398 5.17285 37.7148 c
5.16504 37.5898 5.24707 37.4785 5.37012 37.4512 c
9.64941 36.4824 14.0615 36.9609 17.7588 38.4805 C
15.0986 35.5488 11.8193 33.3711 8.2041 32.2363 c
8.08691 32.1992 8.01465 32.0859 8.02832 31.9648 c
8.04199 31.8438 8.1416 31.748 8.2627 31.7402 c
12.7725 31.4297 17.1865 32.7461 20.9932 35.2793 C
16.6318 28.6582 10.0127 23.7344 1.56543 21.7715 c
1.44434 21.7441 1.3623 21.6328 1.36816 21.5098 c
1.37598 21.3867 1.47168 21.2871 1.59473 21.2734 c
13.5127 19.9707 23.3408 24.5918 29.8154 33.1914 C
28.167 28.2891 23.4502 23.4355 16.8701 20.5723 c
11.0244 18.0273 5.02051 17.625 0.448242 19.0625 c
0.342773 19.0957 0.225586 19.0547 0.163086 18.9629 c
0.100586 18.8691 0.104492 18.7461 0.174805 18.6602 c
f
53.0791 94.2324 m
48.2725 83.7461 48.6143 75.5469 52.4854 65.1777 c
52.5303 65.0605 52.6514 64.9922 52.7744 65.0176 c
52.8975 65.043 52.9834 65.1543 52.9775 65.2773 c
52.3564 77.9004 55.8037 86.9316 63.2764 93.0859 C
55.0264 83.2324 58.9229 63.5254 72.0996 63.5254 c
81.6855 63.5254 89.6152 71.502 91.5547 81.0508 c
91.5801 81.1719 91.5137 81.293 91.3965 81.3379 c
91.2813 81.3828 91.1504 81.3379 91.0879 81.2305 c
88.2461 76.4688 83.6797 73.3789 78.6309 73.3789 c
70.4951 73.3789 68.0889 79.8457 68.0889 84.3789 c
68.0889 90.5645 73.0156 95.7207 76.7969 95.7207 c
80.2344 95.7207 81.8379 92.8984 81.8379 90.7949 c
81.8379 86.8965 78.8398 83.6289 75.4629 82.6309 c
75.3418 82.5938 75.2656 82.4766 75.2832 82.3516 c
75.3008 82.2266 75.4063 82.1328 75.5332 82.1328 c
79.6387 82.1074 83.1094 83.9863 85.1621 87.7012 C
85.4316 84.8262 85.4336 83.0156 84.5215 79.9766 c
84.4863 79.8594 84.5391 79.7344 84.6465 79.6777 c
84.7559 79.623 84.8887 79.6504 84.9629 79.748 c
92.3203 89.1406 88.7988 105.3711 82.9844 112.1055 C
88.5156 108.123 93.4004 99.4707 93.3242 87.7109 c
93.3223 87.5898 93.4082 87.4844 93.5293 87.4609 c
93.6484 87.4375 93.7676 87.502 93.8125 87.6152 c
97.9219 97.8691 95.7422 116.8633 84.5313 127.4668 C
87.416 127.8652 90.3984 127.8145 93.6563 126.7754 c
93.7715 126.7383 93.8965 126.7891 93.9551 126.8945 c
94.0137 127 93.9902 127.1328 93.8965 127.2109 c
89.8047 130.666 84.082 131.752 78.6309 131.752 C
83.3281 126.252 81.7676 115.1992 74.2773 115.1992 c
68.9268 115.1992 66.499 123.498 70.6279 127.9805 c
70.7061 128.0664 70.7158 128.1934 70.6533 128.291 c
70.5889 128.3887 70.4678 128.4297 70.3564 128.3926 c
65.5771 126.7363 60.4111 122.6035 60.4111 117.375 c
60.4111 112.334 65.2236 107.9805 72.2148 108.3242 C
63.3936 105.8203 54.1611 108.5918 49.3311 114.5781 c
49.2568 114.6699 49.126 114.6992 49.0205 114.6445 c
48.9131 114.5918 48.8584 114.4707 48.8877 114.3535 c
51.6787 103.6387 60.8545 99.1543 72.3281 100.6484 C
63.0459 96.8906 49.0771 100.166 42.9033 107.957 c
42.8311 108.0488 42.7041 108.0801 42.5967 108.0293 c
42.4912 107.9805 42.4326 107.8633 42.4561 107.748 c
43.8271 101.1328 47.3193 96.1875 53.0791 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829892 0.242618 0.080446 0 0.258824 0.494118 Xa
 1 0.829892 0.242618 0.080446 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 184.5869 m
135.0566 184.7061 135.1602 184.792 135.2813 184.7939 c
148.1875 184.9287 160.0352 188.0615 169.2529 196.3086 C
161.2227 190.751 146.3105 188.7979 137.7256 192.6904 c
137.6152 192.7402 137.5566 192.8604 137.584 192.9785 c
137.6104 193.0967 137.7168 193.1787 137.8379 193.1748 c
148.5176 192.8857 157.1172 196.1816 163.8223 202.1396 C
156.9531 202.5615 151.248 206.8799 151.2656 211.9844 c
151.2656 212.1035 151.3496 212.2061 151.4668 212.2314 c
151.583 212.2568 151.7012 212.1963 151.75 212.0879 c
152.8711 209.5986 156.498 208.3076 160.333 209.208 c
164.5127 210.1885 167.333 213.3975 166.6338 216.373 c
166.1621 218.3877 164.1973 219.7764 161.6816 220.1602 c
161.5547 220.1787 161.4619 220.29 161.4648 220.418 c
161.4688 220.5459 161.5674 220.6514 161.6953 220.6631 c
162.7637 220.7656 163.875 220.7695 165.0127 220.6611 c
171.5029 220.0439 176.5264 216.0654 176.9619 211.4834 C
181.6748 212.0303 185.8457 214.6396 187.3398 218.2568 c
187.3848 218.3652 187.5 218.4287 187.6152 218.4111 c
187.7305 218.3916 187.8184 218.2969 187.8281 218.1807 c
188.2051 213.4287 186.5703 210.3418 182.8584 207.3262 C
188.2422 209.3857 194.3027 209.4912 200.1133 206.7881 c
200.2188 206.7393 200.2773 206.624 200.2559 206.5088 c
200.2324 206.3936 200.1328 206.3096 200.0156 206.3057 c
195.1367 206.1152 191.5996 204.5498 188.2852 201.2334 C
206.5391 206.3672 221.3711 195.0322 216.2383 178.1807 c
216.2031 178.0654 216.0918 177.9902 215.9707 178.0029 c
215.8496 178.0146 215.7539 178.1104 215.7441 178.2314 c
214.8262 187.9453 208.041 194.3467 197.8828 195.3076 C
203.2695 193.2471 208.8828 188.3311 209.4395 179.7734 c
209.4473 179.6514 209.3672 179.54 209.248 179.5107 c
209.1289 179.4814 209.0059 179.54 208.9551 179.6514 c
206.1563 185.8057 200.6582 188.917 194.7949 189.4639 C
201.1289 186.8838 205.1914 180.8623 206.3652 173.0439 c
206.3848 172.9209 206.3105 172.8018 206.1914 172.7646 c
206.0742 172.7256 205.9453 172.7803 205.8887 172.8896 c
202.0234 180.4727 193.7324 185.6836 183.4424 181.7021 c
172.8252 177.5928 168.168 165.3154 167.1387 156.6611 c
167.124 156.54 167.0234 156.4463 166.9004 156.4385 c
166.7783 156.4307 166.668 156.5127 166.6396 156.6338 c
162.9199 172.3213 170.2227 188.583 183.2764 195.4736 C
176.1807 193.4707 169.8369 189.2139 166.249 182.1191 C
157.9551 181.1006 152.2451 178.2568 149.3916 172.8799 c
149.335 172.7725 149.2109 172.7197 149.0957 172.7549 c
148.9805 172.7881 148.9043 172.8994 148.9141 173.0205 c
149.0967 175.1299 149.8555 179.3506 152.9883 181.291 C
146.0234 181.2803 140.4824 182.1846 135.1895 184.3037 c
135.0781 184.3496 135.0127 184.4678 135.0352 184.5869 c
f
164.5215 131.1162 m
164.4229 131.1826 164.293 131.1709 164.2061 131.0908 c
164.1201 131.0088 164.1016 130.8799 164.1602 130.7783 c
165.7803 127.9814 164.3008 123.9639 161.1094 123.9639 c
155.3887 123.9639 152.6387 134.7334 153.5137 144.5576 C
155.6768 138.8018 157.5469 136.5029 160.8613 133.7627 c
160.9551 133.6846 161.0898 133.6846 161.1836 133.7607 c
161.2773 133.8389 161.3047 133.9697 161.2471 134.0771 c
156.3906 143.1572 155.3496 150.1436 155.3496 158.1631 C
156.8125 152.2041 158.5449 148.8408 163.4766 143.7822 c
163.5625 143.6943 163.6992 143.6807 163.8018 143.749 c
163.9033 143.8193 163.9404 143.9521 163.8887 144.0654 c
158.5908 155.6553 158.9951 168.5127 162.9414 178.3291 c
162.9805 178.4268 162.9561 178.5381 162.8789 178.6104 c
162.8018 178.6807 162.6895 178.6982 162.5938 178.6514 c
157.3887 176.1006 154.3301 174.4248 149.8418 168.2627 C
151.1992 160.8643 150.0703 157.2139 146.6699 151.0674 C
150.6074 160.9854 148.5117 174.9619 138.4824 180.6592 c
138.373 180.7207 138.2344 180.6934 138.1582 180.5947 c
138.0801 180.4951 138.0869 180.3535 138.1738 180.2627 c
141.9551 176.3076 144.7051 169.6279 142.3301 162.335 C
143.8594 172.7236 134.7344 181.4502 124.5508 181.4502 c
114.9512 181.4502 108.4004 173.9404 108.9414 166.5088 c
109.4785 159.1436 114.3848 155.54 118.6133 154.0107 c
118.7246 153.9717 118.8496 154.0127 118.9131 154.1123 c
118.9766 154.2139 118.9629 154.3428 118.8799 154.4287 c
113.2695 160.1201 112.502 170.9209 122.4629 174.1885 C
116.6035 169.1318 118.7734 157.3584 128.1523 156.4639 c
128.2695 156.4521 128.3789 156.5225 128.417 156.6338 c
128.4551 156.7451 128.4121 156.8682 128.3135 156.9307 c
126.3047 158.208 124.6348 160.7021 124.6348 163.5049 c
124.6348 168.1787 128.0566 170.0146 130.3105 170.0146 c
133.7324 170.0146 136.5703 166.7588 136.5703 161.835 c
136.5703 155.9912 131.3105 151.1514 124.5508 150.3994 c
117.9248 149.665 111.7686 152.5537 108.8008 156.8584 c
108.7314 156.96 108.5996 156.9971 108.4873 156.9463 c
108.375 156.8955 108.3164 156.7705 108.3467 156.6514 c
111.3652 144.9482 125.1426 139.7744 135.2344 147.1455 C
128.6211 139.6436 118.2285 139.54 109.5127 147.2314 c
109.4219 147.3115 109.2871 147.3154 109.1904 147.2412 c
109.0938 147.1689 109.0635 147.0361 109.1172 146.9287 c
111.7842 141.5205 118.3701 135.1084 127.7227 136.0439 c
136.2793 136.8994 141.2441 145.0576 142.2461 151.7354 C
142.8027 143.2139 140.8525 137.1982 133.4922 131.5889 c
133.3955 131.5146 133.3652 131.3818 133.4199 131.2725 c
133.4746 131.165 133.5996 131.1104 133.7168 131.1436 c
140.502 133.1045 145.9473 136.5693 148.7656 143.6885 C
148.7656 137.5264 146.627 131.3154 141.2402 127.1768 c
141.1426 127.1025 141.1133 126.9717 141.168 126.8623 c
141.2227 126.7529 141.3467 126.6982 141.4639 126.7314 c
144.917 127.7158 147.6348 129.2197 149.6016 131.917 C
150.9121 120.8174 156.123 114.2256 162.127 114.2256 c
166.252 114.2256 169.332 117.2588 169.332 122.0967 c
169.332 124.9268 167.8438 128.8994 164.5215 131.1162 c
f
263.748 222.7354 m
260.5859 226.6396 254.209 228.1279 247.3164 226.7236 C
247.8262 231.0244 246.9824 235.5146 245.7051 238.208 c
245.6523 238.3174 245.5313 238.375 245.4141 238.3467 c
245.2969 238.3174 245.2168 238.21 245.2207 238.0889 c
245.5957 229.3223 240.5977 222.2451 231.7715 219.1787 C
238.6777 223.9346 240.6973 233.3721 237.4102 238.2451 c
237.3418 238.3438 237.2148 238.3828 237.1035 238.3369 c
236.9922 238.292 236.9277 238.1748 236.9492 238.0576 c
237.3223 235.9971 236.3438 233.373 234.2363 231.3311 c
231.3301 228.5166 227.3867 227.8779 225.4258 229.9014 c
223.4648 231.9268 224.2285 235.8486 227.1328 238.6631 c
228.1934 239.6904 229.3926 240.4248 230.582 240.8477 c
230.6953 240.8877 230.7637 241.001 230.748 241.1191 c
230.7344 241.2383 230.6387 241.3301 230.5195 241.3398 c
224.1309 241.8945 219.75 238.0879 217.0039 233.4619 c
214.209 228.7568 209.4336 225.0518 203.793 225.792 c
203.6738 225.8076 203.5605 225.7373 203.5195 225.624 c
203.4805 225.5107 203.5254 225.3838 203.6289 225.3223 c
206.4258 223.6377 209.5 222.9385 213.4922 224.2705 C
207.6973 219.3613 199.4453 216.5283 191.6523 219.043 c
191.543 219.0791 191.4238 219.0361 191.3613 218.9395 c
191.2988 218.8428 191.3105 218.7168 191.3867 218.6318 c
197.2949 212.0674 209.0762 211.9365 216.4961 217.2588 C
213.459 212.9424 209.4277 209.7744 202.2031 208.7803 c
202.0879 208.7646 201.998 208.6729 201.9844 208.5576 c
201.9727 208.4414 202.0391 208.332 202.1484 208.292 c
210.4395 205.2139 218.748 208.3369 225.5938 216.5068 C
222.6016 210.1299 217.6875 205.0225 210.8262 202.4951 c
210.7109 202.4531 210.6426 202.335 210.6641 202.2158 c
210.6836 202.0947 210.7871 202.0059 210.9082 202.0029 c
214.8516 201.9219 218.3945 202.8604 223.1738 205.5732 C
219.666 199.8838 220.4336 189.9346 225.543 183.3154 c
225.6133 183.2236 225.7383 183.1914 225.8457 183.2373 c
225.9512 183.2842 226.0137 183.3965 225.9941 183.5107 c
224.8145 190.7119 227.293 198.8408 231.6035 203.1533 C
229.4512 195.5215 231.5977 188.5771 237.5 183.5088 c
237.5703 183.4482 237.6699 183.4316 237.7559 183.4648 c
237.8438 183.498 237.9043 183.5771 237.918 183.6689 c
239.1523 193.0869 249.6875 202.6436 258.5195 203.4443 c
258.6445 203.4551 258.7422 203.5557 258.75 203.6797 c
258.7578 203.8037 258.6758 203.917 258.5527 203.9443 c
254.2734 204.9131 249.8613 204.4346 246.1641 202.9131 C
248.8242 205.8467 252.1035 208.0244 255.7188 209.1592 c
255.8359 209.1953 255.9082 209.3096 255.8945 209.4307 c
255.8809 209.5518 255.7813 209.6455 255.6602 209.6543 c
251.1504 209.9658 246.7363 208.6484 242.9297 206.1162 C
247.291 212.7373 253.9102 217.6611 262.3574 219.6221 c
262.4785 219.6504 262.5605 219.7607 262.5547 219.8848 c
262.5469 220.0088 262.4512 220.1084 262.3281 220.1221 c
250.4102 221.4238 240.582 216.8037 234.1074 208.2041 C
235.7559 213.1045 240.4727 217.96 247.0527 220.8232 c
252.8984 223.3682 258.9023 223.7695 263.4746 222.333 c
263.5801 222.2998 263.6973 222.3398 263.7598 222.4326 c
263.8223 222.5244 263.8184 222.6475 263.748 222.7354 c
f
210.8438 147.1631 m
215.6504 157.6494 215.3086 165.8486 211.4375 176.2178 c
211.3926 176.335 211.2715 176.4023 211.1484 176.3779 c
211.0254 176.3525 210.9395 176.2412 210.9453 176.1162 c
211.5664 163.4951 208.1191 154.4619 200.6465 148.3096 C
208.8965 158.1611 205 177.8691 191.8242 177.8691 c
182.2393 177.8691 174.3086 169.8936 172.3691 160.3447 c
172.3447 160.2236 172.4111 160.1006 172.5273 160.0576 c
172.6426 160.0127 172.7734 160.0576 172.8359 160.1631 c
175.6787 164.9248 180.2451 168.0146 185.2939 168.0146 c
193.4277 168.0146 195.834 161.5479 195.834 157.0166 c
195.834 150.8291 190.9082 145.6729 187.127 145.6729 c
183.6904 145.6729 182.0869 148.4971 182.0869 150.6006 c
182.0869 154.499 185.085 157.7666 188.4629 158.7646 c
188.582 158.7998 188.6602 158.9189 188.6426 159.0439 c
188.623 159.1689 188.5176 159.2607 188.3926 159.2627 c
184.2861 159.2881 180.8154 157.4072 178.7627 153.6943 C
178.4932 156.5693 178.4902 158.3799 179.4033 161.417 c
179.4385 161.5342 179.3848 161.6592 179.2773 161.7158 c
179.168 161.7725 179.0352 161.7432 178.9609 161.6475 c
171.6045 152.2549 175.125 136.0225 180.9404 129.29 C
175.4082 133.2725 170.5234 141.9229 170.6006 153.6826 c
170.6016 153.8057 170.5156 153.9092 170.3955 153.9326 c
170.2754 153.958 170.1563 153.8916 170.1113 153.7783 c
166.0029 143.5264 168.1826 124.5303 179.3926 113.9268 C
176.5088 113.5303 173.5254 113.5811 170.2676 114.6201 c
170.1523 114.6553 170.0273 114.6064 169.9688 114.501 c
169.9102 114.3936 169.9336 114.2607 170.0273 114.1826 c
174.1191 110.7275 179.8418 109.6416 185.2939 109.6416 C
180.5967 115.1416 182.1572 126.1963 189.6484 126.1963 c
194.9961 126.1963 197.4238 117.8975 193.2949 113.415 c
193.2168 113.3291 193.207 113.2002 193.2695 113.1045 c
193.334 113.0068 193.4551 112.9639 193.5664 113.0029 c
198.3457 114.6572 203.5117 118.792 203.5117 124.0186 c
203.5117 129.0615 198.6992 133.4131 191.7109 133.0693 C
200.5293 135.5752 209.7617 132.8018 214.5918 126.8174 c
214.666 126.7236 214.7969 126.6963 214.9023 126.749 c
215.0098 126.8037 215.0645 126.9248 215.0352 127.04 c
212.2441 137.7568 203.0684 142.2393 191.5957 140.7471 C
200.877 144.5029 214.8457 141.2275 221.0195 133.4365 c
221.0918 133.3447 221.2188 133.3154 221.3262 133.3643 c
221.4316 133.415 221.4902 133.5322 221.4668 133.6455 c
220.0957 140.2607 216.6035 145.208 210.8438 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001434 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001434 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2266 166.4502 m
237.2051 166.3311 237.1016 166.2432 236.9805 166.2432 c
224.0742 166.1064 212.2266 162.9756 203.0098 154.7275 C
211.0391 160.2861 225.9512 162.2373 234.5371 158.3467 c
234.6465 158.2959 234.7051 158.1748 234.6777 158.0576 c
234.6523 157.9404 234.5449 157.8584 234.4238 157.8604 c
223.7441 158.1514 215.1445 154.8545 208.4395 148.8975 C
215.3086 148.4736 221.0137 144.1572 220.9961 139.0518 c
220.9961 138.9326 220.9121 138.8291 220.7949 138.8037 c
220.6797 138.7803 220.5605 138.8389 220.5117 138.9482 c
219.3906 141.4365 215.7637 142.7295 211.9297 141.8291 c
207.75 140.8467 204.9297 137.6396 205.6289 134.6631 c
206.0996 132.6494 208.0645 131.2607 210.5801 130.876 c
210.707 130.8564 210.8008 130.7471 210.7969 130.6182 c
210.793 130.4912 210.6953 130.3857 210.5664 130.3721 c
209.498 130.2705 208.3867 130.2666 207.25 130.376 c
200.7598 130.9932 195.7363 134.9697 195.3008 139.5537 C
190.5879 139.0068 186.416 136.3955 184.9229 132.7803 c
184.8779 132.6709 184.7646 132.6084 184.6475 132.626 c
184.5322 132.6436 184.4443 132.7393 184.4346 132.8564 c
184.0576 137.6064 185.6924 140.6943 189.4043 143.71 C
184.0205 141.6514 177.959 141.5459 172.1484 144.2471 c
172.043 144.2979 171.9844 144.4131 172.0059 144.5283 c
172.0293 144.6436 172.1289 144.7275 172.2461 144.7314 c
177.125 144.9209 180.6631 146.4873 183.9795 149.8037 C
165.7227 144.6689 150.8906 156.0049 156.0234 172.8545 c
156.0586 172.9717 156.1699 173.0459 156.291 173.0342 c
156.4121 173.0225 156.5078 172.9268 156.5176 172.8057 c
157.4355 163.0908 164.2207 156.6885 174.3789 155.7295 C
168.9922 157.7881 163.3789 162.7041 162.8223 171.2627 c
162.8145 171.3857 162.8945 171.4951 163.0137 171.5264 c
163.1328 171.5557 163.2559 171.4951 163.3066 171.3838 c
166.1055 165.2295 171.6035 162.1201 177.4668 161.5713 C
171.1328 164.1533 167.0703 170.1748 165.8965 177.9932 c
165.877 178.1162 165.9512 178.2334 166.0703 178.2725 c
166.1875 178.3096 166.3164 178.2568 166.373 178.1455 c
170.2383 170.5635 178.5293 165.3525 188.8203 169.335 c
199.4375 173.4443 204.0938 185.7197 205.123 194.374 c
205.1387 194.4971 205.2383 194.5908 205.3613 194.5986 c
205.4844 194.6045 205.5938 194.5225 205.623 194.4033 c
209.3418 178.7139 202.0391 162.4541 188.9863 155.5635 C
196.082 157.5654 202.4258 161.8232 206.0137 168.917 C
214.3066 169.9346 220.0176 172.7803 222.8711 178.1572 c
222.9277 178.2627 223.0508 178.3154 223.166 178.2822 c
223.2813 178.2471 223.3574 178.1357 223.3477 178.0166 c
223.166 175.9072 222.4063 171.6865 219.2734 169.7451 C
226.2383 169.7568 231.7793 168.8525 237.0723 166.7314 c
237.1836 166.6865 237.25 166.5693 237.2266 166.4502 c
f
207.7402 219.9189 m
207.8398 219.8545 207.9688 219.8643 208.0566 219.9463 c
208.1426 220.0264 208.1602 220.1553 208.1016 220.2588 c
206.4824 223.0557 207.9609 227.0713 211.1523 227.0713 c
216.873 227.0713 219.623 216.3018 218.748 206.4795 C
216.5859 212.2334 214.7148 214.5342 211.4004 217.2744 c
211.3066 217.3506 211.1719 217.3525 211.0781 217.2744 c
210.9844 217.1982 210.957 217.0654 211.0156 216.958 c
215.8711 207.8799 216.9121 200.8936 216.9121 192.874 C
215.4492 198.8311 213.7168 202.1943 208.7852 207.2549 c
208.6992 207.3428 208.5625 207.3564 208.4609 207.2861 c
208.3594 207.2158 208.3223 207.083 208.373 206.9717 c
213.6719 195.3799 213.2676 182.5244 209.3203 172.708 c
209.2813 172.6104 209.3066 172.499 209.3828 172.4268 c
209.4609 172.3545 209.5723 172.3389 209.668 172.3838 c
214.873 174.9346 217.9316 176.6104 222.4199 182.7744 C
221.0625 190.1729 222.1914 193.8213 225.5918 199.9678 C
221.6543 190.0518 223.75 176.0752 233.7793 170.3779 c
233.8887 170.3154 234.0273 170.3428 234.1035 170.4424 c
234.1816 170.542 234.1758 170.6826 234.0879 170.7744 c
230.3066 174.7295 227.5566 181.4092 229.9316 188.7002 C
228.4023 178.3115 237.5273 169.5869 247.7109 169.5869 c
257.3105 169.5869 263.8613 177.0947 263.3203 184.5264 c
262.7832 191.8916 257.877 195.4971 253.6484 197.0244 c
253.5371 197.0654 253.4121 197.0225 253.3496 196.9229 c
253.2852 196.8232 253.2988 196.6924 253.3828 196.6084 c
258.9922 190.915 259.7598 180.1162 249.7988 176.8486 C
255.6582 181.9053 253.4883 193.6768 244.1094 194.5732 c
243.9922 194.583 243.8828 194.5127 243.8457 194.4014 c
243.8066 194.292 243.8496 194.1689 243.9492 194.1064 c
245.957 192.8271 247.627 190.335 247.627 187.5322 c
247.627 182.8584 244.2051 181.0205 241.9512 181.0205 c
238.5293 181.0205 235.6914 184.2764 235.6914 189.2021 c
235.6914 195.0439 240.9512 199.8857 247.7109 200.6357 c
254.3379 201.3721 260.4941 198.4814 263.4609 194.1768 c
263.5313 194.0752 263.6621 194.04 263.7754 194.0908 c
263.8867 194.1416 263.9453 194.2646 263.916 194.3838 c
260.8965 206.0869 247.1191 211.2607 237.0273 203.8916 C
243.6406 211.3916 254.0332 211.4971 262.75 203.8057 c
262.8398 203.7256 262.9746 203.7197 263.0723 203.7939 c
263.168 203.8682 263.1992 203.999 263.1445 204.1084 c
260.4785 209.5146 253.8926 215.9268 244.5391 214.9932 c
235.9824 214.1377 231.0176 205.9775 230.0156 199.3018 C
229.459 207.8232 231.4102 213.8369 238.7695 219.4463 c
238.8672 219.5205 238.8965 219.6533 238.8418 219.7627 c
238.7871 219.8721 238.6621 219.9268 238.5449 219.8916 c
231.7598 217.9326 226.3145 214.4678 223.4961 207.3486 C
223.4961 213.5088 225.6348 219.7197 231.0215 223.8584 c
231.1191 223.9326 231.1484 224.0654 231.0938 224.1748 c
231.0391 224.2822 230.916 224.3369 230.7988 224.3037 c
227.3457 223.3213 224.627 221.8154 222.6602 219.1201 C
221.3496 230.2197 216.1387 236.8096 210.1348 236.8096 c
206.0098 236.8096 202.9297 233.7764 202.9297 228.9404 c
202.9297 226.1104 204.418 222.1377 207.7402 219.9189 c
f
108.5137 128.3018 m
111.6758 124.3975 118.0527 122.9092 124.9453 124.3135 C
124.4355 120.0107 125.2793 115.5225 126.5566 112.8271 c
126.6094 112.7197 126.7305 112.6611 126.8477 112.6904 c
126.9648 112.7197 127.0449 112.8271 127.041 112.9482 c
126.666 121.7139 131.6641 128.79 140.4902 131.8564 C
133.584 127.1006 131.5645 117.6631 134.8516 112.792 c
134.9199 112.6924 135.0469 112.6533 135.1582 112.6982 c
135.2695 112.7432 135.334 112.8604 135.3125 112.9795 c
134.9395 115.04 135.918 117.6631 138.0254 119.7041 c
140.9316 122.5186 144.875 123.1572 146.8359 121.1338 c
148.7969 119.1084 148.0332 115.1865 145.1289 112.374 c
144.0684 111.3467 142.8691 110.6104 141.6797 110.1885 c
141.5664 110.1475 141.498 110.0342 141.5137 109.917 c
141.5273 109.7979 141.623 109.7061 141.7422 109.6963 c
148.1309 109.1416 152.5117 112.9482 155.2578 117.5732 c
158.0527 122.2783 162.8281 125.9854 168.4688 125.2451 c
168.5879 125.2295 168.7012 125.2998 168.7422 125.4131 c
168.7813 125.5264 168.7363 125.6514 168.6328 125.7139 c
165.8359 127.3975 162.7617 128.0967 158.7695 126.7666 C
164.5645 131.6748 172.8164 134.5068 180.6104 131.9932 c
180.7197 131.958 180.8389 132.001 180.9014 132.0967 c
180.9639 132.1924 180.9541 132.3193 180.876 132.4053 c
174.9668 138.9697 163.1855 139.1006 155.7656 133.7764 C
158.8027 138.0928 162.834 141.2627 170.0586 142.2549 c
170.1738 142.2705 170.2637 142.3643 170.2773 142.4795 c
170.2891 142.5947 170.2227 142.7041 170.1133 142.7451 c
161.8223 145.8213 153.5137 142.7002 146.668 134.5283 C
149.6602 140.9072 154.5742 146.0146 161.4355 148.542 c
161.5508 148.583 161.6191 148.7002 161.5977 148.8213 c
161.5781 148.9424 161.4746 149.0303 161.3535 149.0322 c
157.4102 149.1143 153.8672 148.1748 149.0879 145.4619 C
152.5957 151.1533 151.8281 161.1006 146.7188 167.7217 c
146.6484 167.8135 146.5234 167.8447 146.416 167.7998 c
146.3105 167.7529 146.248 167.6396 146.2676 167.5244 c
147.4473 160.3252 144.9688 152.1963 140.6582 147.8838 C
142.8105 155.5146 140.6641 162.46 134.7617 167.5264 c
134.6914 167.5869 134.5918 167.6045 134.5059 167.5713 c
134.418 167.5381 134.3574 167.46 134.3438 167.3682 c
133.1094 157.9502 122.5742 148.3936 113.7422 147.5928 c
113.6172 147.5811 113.5195 147.4814 113.5117 147.3564 c
113.5039 147.2314 113.5859 147.1201 113.709 147.0928 c
117.9883 146.124 122.4004 146.6025 126.0977 148.1221 C
123.4375 145.1904 120.1582 143.0127 116.543 141.8779 c
116.4258 141.8408 116.3535 141.7275 116.3672 141.6064 c
116.3809 141.4854 116.4805 141.3896 116.6016 141.3818 c
121.1113 141.0713 125.5254 142.3877 129.332 144.9209 C
124.9707 138.2998 118.3516 133.376 109.9043 131.4131 c
109.7832 131.3857 109.7012 131.2744 109.707 131.1514 c
109.7148 131.0283 109.8105 130.9287 109.9336 130.915 c
121.8516 129.6123 131.6797 134.2334 138.1543 142.833 C
136.5059 137.9307 131.7891 133.0771 125.209 130.2139 c
119.3633 127.6689 113.3594 127.2666 108.7871 128.7041 c
108.6816 128.7373 108.5645 128.6963 108.502 128.6045 c
108.4395 128.5107 108.4434 128.3877 108.5137 128.3018 c
f
161.418 203.874 m
156.6113 193.3877 156.9531 185.1885 160.8242 174.8193 c
160.8691 174.7021 160.9902 174.6338 161.1133 174.6592 c
161.2363 174.6846 161.3223 174.7959 161.3164 174.9189 c
160.6953 187.542 164.1426 196.5732 171.6152 202.7275 C
163.3652 192.874 167.2617 173.167 180.4385 173.167 c
190.0234 173.167 197.9531 181.1436 199.8926 190.6924 c
199.918 190.8135 199.8516 190.9346 199.7344 190.9795 c
199.6191 191.0244 199.4883 190.9795 199.4258 190.8721 c
196.584 186.1104 192.0176 183.0205 186.9688 183.0205 c
178.834 183.0205 176.4277 189.4873 176.4277 194.0205 c
176.4277 200.2061 181.3545 205.3623 185.1357 205.3623 c
188.5723 205.3623 190.1758 202.54 190.1758 200.4365 c
190.1758 196.5381 187.1777 193.2705 183.8018 192.2725 c
183.6807 192.2354 183.6045 192.1182 183.6221 191.9932 c
183.6396 191.8682 183.7451 191.7744 183.8721 191.7744 c
187.9766 191.749 191.4473 193.6279 193.5 197.3428 C
193.7695 194.4678 193.7715 192.6572 192.8594 189.6182 c
192.8242 189.501 192.877 189.376 192.9844 189.3193 c
193.0938 189.2646 193.2266 189.292 193.3008 189.3896 c
200.6582 198.7822 197.1367 215.0127 191.3223 221.7471 C
196.8535 217.7646 201.7383 209.1123 201.6621 197.3525 c
201.6602 197.2314 201.7461 197.126 201.8672 197.1025 c
201.9863 197.0791 202.1055 197.1436 202.1504 197.2568 c
206.2598 207.5107 204.0801 226.5049 192.8691 237.1084 C
195.7539 237.5068 198.7363 237.4561 201.9941 236.417 c
202.1094 236.3799 202.2344 236.4307 202.293 236.5361 c
202.3516 236.6416 202.3281 236.7744 202.2344 236.8525 c
198.1426 240.3076 192.4199 241.3936 186.9688 241.3936 C
191.666 235.8936 190.1055 224.8408 182.6162 224.8408 c
177.2656 224.8408 174.8379 233.1396 178.9668 237.6221 c
179.0449 237.708 179.0547 237.835 178.9922 237.9326 c
178.9277 238.0303 178.8066 238.0713 178.6953 238.0342 c
173.916 236.3779 168.75 232.2451 168.75 227.0166 c
168.75 221.9756 173.5625 217.6221 180.5537 217.9658 C
171.7324 215.4619 162.5 218.2334 157.6699 224.2197 c
157.5957 224.3115 157.4648 224.3408 157.3594 224.2861 c
157.252 224.2334 157.1973 224.1123 157.2266 223.9951 c
160.0176 213.2803 169.1934 208.7959 180.667 210.29 C
171.3848 206.5322 157.416 209.8076 151.2422 217.5986 c
151.1699 217.6904 151.043 217.7217 150.9355 217.6709 c
150.8301 217.6221 150.7715 217.5049 150.7949 217.3896 c
152.166 210.7744 155.6582 205.8291 161.418 203.874 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829892 0.242618 0.080446 0 0.258824 0.494118 Xa
 1 0.829892 0.242618 0.080446 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 184.5869 m
26.7178 184.7061 26.8213 184.792 26.9424 184.7939 c
39.8486 184.9287 51.6963 188.0615 60.9141 196.3086 C
52.8838 190.751 37.9717 188.7979 29.3867 192.6904 c
29.2764 192.7402 29.2178 192.8604 29.2451 192.9785 c
29.2715 193.0967 29.3779 193.1787 29.499 193.1748 c
40.1787 192.8857 48.7783 196.1816 55.4834 202.1396 C
48.6143 202.5615 42.9092 206.8799 42.9268 211.9844 c
42.9268 212.1035 43.0107 212.2061 43.1279 212.2314 c
43.2441 212.2568 43.3623 212.1963 43.4111 212.0879 c
44.5322 209.5986 48.1592 208.3076 51.9941 209.208 c
56.1738 210.1885 58.9941 213.3975 58.2949 216.373 c
57.8232 218.3877 55.8584 219.7764 53.3428 220.1602 c
53.2158 220.1787 53.123 220.29 53.126 220.418 c
53.1299 220.5459 53.2285 220.6514 53.3564 220.6631 c
54.4248 220.7656 55.5361 220.7695 56.6738 220.6611 c
63.1641 220.0439 68.1875 216.0654 68.623 211.4834 C
73.3359 212.0303 77.5078 214.6396 79.002 218.2568 c
79.0469 218.3652 79.1621 218.4287 79.2773 218.4111 c
79.3926 218.3916 79.4805 218.2969 79.4902 218.1807 c
79.8672 213.4287 78.2324 210.3418 74.5195 207.3262 C
79.9043 209.3857 85.9648 209.4912 91.7754 206.7881 c
91.8809 206.7393 91.9395 206.624 91.918 206.5088 c
91.8945 206.3936 91.7949 206.3096 91.6777 206.3057 c
86.7988 206.1152 83.2617 204.5498 79.9473 201.2334 C
98.2012 206.3672 113.0332 195.0322 107.9004 178.1807 c
107.8652 178.0654 107.7539 177.9902 107.6328 178.0029 c
107.5117 178.0146 107.416 178.1104 107.4063 178.2314 c
106.4883 187.9453 99.7031 194.3467 89.5449 195.3076 C
94.9316 193.2471 100.5449 188.3311 101.1016 179.7734 c
101.1094 179.6514 101.0293 179.54 100.9102 179.5107 c
100.791 179.4814 100.668 179.54 100.6172 179.6514 c
97.8184 185.8057 92.3203 188.917 86.457 189.4639 C
92.791 186.8838 96.8535 180.8623 98.0273 173.0439 c
98.0469 172.9209 97.9727 172.8018 97.8535 172.7646 c
97.7363 172.7256 97.6074 172.7803 97.5508 172.8896 c
93.6855 180.4727 85.3945 185.6836 75.1035 181.7021 c
64.4863 177.5928 59.8291 165.3154 58.7998 156.6611 c
58.7852 156.54 58.6846 156.4463 58.5615 156.4385 c
58.4395 156.4307 58.3291 156.5127 58.3008 156.6338 c
54.5811 172.3213 61.8838 188.583 74.9375 195.4736 C
67.8418 193.4707 61.498 189.2139 57.9102 182.1191 C
49.6162 181.1006 43.9063 178.2568 41.0527 172.8799 c
40.9961 172.7725 40.8721 172.7197 40.7568 172.7549 c
40.6416 172.7881 40.5654 172.8994 40.5752 173.0205 c
40.7578 175.1299 41.5166 179.3506 44.6494 181.291 C
37.6846 181.2803 32.1436 182.1846 26.8506 184.3037 c
26.7393 184.3496 26.6738 184.4678 26.6963 184.5869 c
f
56.1826 131.1162 m
56.084 131.1826 55.9541 131.1709 55.8672 131.0908 c
55.7813 131.0088 55.7627 130.8799 55.8213 130.7783 c
57.4414 127.9814 55.9619 123.9639 52.7705 123.9639 c
47.0498 123.9639 44.2998 134.7334 45.1748 144.5576 C
47.3379 138.8018 49.208 136.5029 52.5225 133.7627 c
52.6162 133.6846 52.751 133.6846 52.8447 133.7607 c
52.9385 133.8389 52.9658 133.9697 52.9082 134.0771 c
48.0518 143.1572 47.0107 150.1436 47.0107 158.1631 C
48.4736 152.2041 50.2061 148.8408 55.1377 143.7822 c
55.2236 143.6943 55.3604 143.6807 55.4629 143.749 c
55.5645 143.8193 55.6016 143.9521 55.5498 144.0654 c
50.252 155.6553 50.6563 168.5127 54.6025 178.3291 c
54.6416 178.4268 54.6172 178.5381 54.54 178.6104 c
54.4629 178.6807 54.3506 178.6982 54.2549 178.6514 c
49.0498 176.1006 45.9912 174.4248 41.5029 168.2627 C
42.8604 160.8643 41.7314 157.2139 38.3311 151.0674 C
42.2686 160.9854 40.1729 174.9619 30.1436 180.6592 c
30.0342 180.7207 29.8955 180.6934 29.8193 180.5947 c
29.7412 180.4951 29.748 180.3535 29.835 180.2627 c
33.6162 176.3076 36.3662 169.6279 33.9912 162.335 C
35.5205 172.7236 26.3955 181.4502 16.2119 181.4502 c
6.6123 181.4502 0.061523 173.9404 0.602539 166.5088 c
1.13965 159.1436 6.0459 155.54 10.2744 154.0107 c
10.3857 153.9717 10.5107 154.0127 10.5742 154.1123 c
10.6377 154.2139 10.624 154.3428 10.541 154.4287 c
4.93066 160.1201 4.16309 170.9209 14.124 174.1885 C
8.26465 169.1318 10.4346 157.3584 19.8135 156.4639 c
19.9307 156.4521 20.04 156.5225 20.0781 156.6338 c
20.1162 156.7451 20.0732 156.8682 19.9746 156.9307 c
17.9658 158.208 16.2959 160.7021 16.2959 163.5049 c
16.2959 168.1787 19.7178 170.0146 21.9717 170.0146 c
25.3936 170.0146 28.2314 166.7588 28.2314 161.835 c
28.2314 155.9912 22.9717 151.1514 16.2119 150.3994 c
9.58594 149.665 3.42969 152.5537 0.461914 156.8584 c
0.392578 156.96 0.260742 156.9971 0.148438 156.9463 c
0.036133 156.8955 -0.022461 156.7705 0.007813 156.6514 c
3.02637 144.9482 16.8037 139.7744 26.8955 147.1455 C
20.2822 139.6436 9.88965 139.54 1.17383 147.2314 c
1.08301 147.3115 0.948242 147.3154 0.851563 147.2412 c
0.754883 147.1689 0.724609 147.0361 0.77832 146.9287 c
3.44531 141.5205 10.0313 135.1084 19.3838 136.0439 c
27.9404 136.8994 32.9053 145.0576 33.9072 151.7354 C
34.4639 143.2139 32.5137 137.1982 25.1533 131.5889 c
25.0566 131.5146 25.0264 131.3818 25.0811 131.2725 c
25.1357 131.165 25.2607 131.1104 25.3779 131.1436 c
32.1631 133.1045 37.6084 136.5693 40.4268 143.6885 C
40.4268 137.5264 38.2881 131.3154 32.9014 127.1768 c
32.8037 127.1025 32.7744 126.9717 32.8291 126.8623 c
32.8838 126.7529 33.0078 126.6982 33.125 126.7314 c
36.5781 127.7158 39.2959 129.2197 41.2627 131.917 C
42.5732 120.8174 47.7842 114.2256 53.7881 114.2256 c
57.9131 114.2256 60.9932 117.2588 60.9932 122.0967 c
60.9932 124.9268 59.5049 128.8994 56.1826 131.1162 c
f
155.4102 222.7354 m
152.248 226.6396 145.8711 228.1279 138.9785 226.7236 C
139.4883 231.0244 138.6445 235.5146 137.3672 238.208 c
137.3145 238.3174 137.1934 238.375 137.0762 238.3467 c
136.959 238.3174 136.8789 238.21 136.8828 238.0889 c
137.2578 229.3223 132.2598 222.2451 123.4336 219.1787 C
130.3398 223.9346 132.3594 233.3721 129.0723 238.2451 c
129.0039 238.3438 128.877 238.3828 128.7656 238.3369 c
128.6543 238.292 128.5898 238.1748 128.6113 238.0576 c
128.9844 235.9971 128.0059 233.373 125.8984 231.3311 c
122.9922 228.5166 119.0488 227.8779 117.0879 229.9014 c
115.127 231.9268 115.8906 235.8486 118.7949 238.6631 c
119.8555 239.6904 121.0547 240.4248 122.2441 240.8477 c
122.3574 240.8877 122.4258 241.001 122.4102 241.1191 c
122.3965 241.2383 122.3008 241.3301 122.1816 241.3398 c
115.793 241.8945 111.4121 238.0879 108.666 233.4619 c
105.8711 228.7568 101.0957 225.0518 95.4551 225.792 c
95.3359 225.8076 95.2227 225.7373 95.1816 225.624 c
95.1426 225.5107 95.1875 225.3838 95.291 225.3223 c
98.0879 223.6377 101.1621 222.9385 105.1543 224.2705 C
99.3594 219.3613 91.1074 216.5283 83.3145 219.043 c
83.2051 219.0791 83.0859 219.0361 83.0234 218.9395 c
82.9609 218.8428 82.9727 218.7168 83.0488 218.6318 c
88.957 212.0674 100.7383 211.9365 108.1582 217.2588 C
105.1211 212.9424 101.0898 209.7744 93.8652 208.7803 c
93.75 208.7646 93.6602 208.6729 93.6465 208.5576 c
93.6348 208.4414 93.7012 208.332 93.8105 208.292 c
102.1016 205.2139 110.4102 208.3369 117.2559 216.5068 C
114.2637 210.1299 109.3496 205.0225 102.4883 202.4951 c
102.373 202.4531 102.3047 202.335 102.3262 202.2158 c
102.3457 202.0947 102.4492 202.0059 102.5703 202.0029 c
106.5137 201.9219 110.0566 202.8604 114.8359 205.5732 C
111.3281 199.8838 112.0957 189.9346 117.2051 183.3154 c
117.2754 183.2236 117.4004 183.1914 117.5078 183.2373 c
117.6133 183.2842 117.6758 183.3965 117.6563 183.5107 c
116.4766 190.7119 118.9551 198.8408 123.2656 203.1533 C
121.1133 195.5215 123.2598 188.5771 129.1621 183.5088 c
129.2324 183.4482 129.332 183.4316 129.418 183.4648 c
129.5059 183.498 129.5664 183.5771 129.5801 183.6689 c
130.8145 193.0869 141.3496 202.6436 150.1816 203.4443 c
150.3066 203.4551 150.4043 203.5557 150.4121 203.6797 c
150.4199 203.8037 150.3379 203.917 150.2148 203.9443 c
145.9355 204.9131 141.5234 204.4346 137.8262 202.9131 C
140.4863 205.8467 143.7656 208.0244 147.3809 209.1592 c
147.498 209.1953 147.5703 209.3096 147.5566 209.4307 c
147.543 209.5518 147.4434 209.6455 147.3223 209.6543 c
142.8125 209.9658 138.3984 208.6484 134.5918 206.1162 C
138.9531 212.7373 145.5723 217.6611 154.0195 219.6221 c
154.1406 219.6504 154.2227 219.7607 154.2168 219.8848 c
154.209 220.0088 154.1133 220.1084 153.9902 220.1221 c
142.0723 221.4238 132.2441 216.8037 125.7695 208.2041 C
127.418 213.1045 132.1348 217.96 138.7148 220.8232 c
144.5605 223.3682 150.5645 223.7695 155.1367 222.333 c
155.2422 222.2998 155.3594 222.3398 155.4219 222.4326 c
155.4844 222.5244 155.4805 222.6475 155.4102 222.7354 c
f
102.5059 147.1631 m
107.3125 157.6494 106.9707 165.8486 103.0996 176.2178 c
103.0547 176.335 102.9336 176.4023 102.8105 176.3779 c
102.6875 176.3525 102.6016 176.2412 102.6074 176.1162 c
103.2285 163.4951 99.7813 154.4619 92.3086 148.3096 C
100.5586 158.1611 96.6621 177.8691 83.4863 177.8691 c
73.9004 177.8691 65.9697 169.8936 64.0303 160.3447 c
64.0059 160.2236 64.0723 160.1006 64.1885 160.0576 c
64.3037 160.0127 64.4346 160.0576 64.4971 160.1631 c
67.3398 164.9248 71.9063 168.0146 76.9551 168.0146 c
85.0898 168.0146 87.4961 161.5479 87.4961 157.0166 c
87.4961 150.8291 82.5703 145.6729 78.7891 145.6729 c
75.3516 145.6729 73.748 148.4971 73.748 150.6006 c
73.748 154.499 76.7461 157.7666 80.125 158.7646 c
80.2441 158.7998 80.3223 158.9189 80.3047 159.0439 c
80.2852 159.1689 80.1797 159.2607 80.0547 159.2627 c
75.9473 159.2881 72.4766 157.4072 70.4238 153.6943 C
70.1543 156.5693 70.1514 158.3799 71.0645 161.417 c
71.0996 161.5342 71.0459 161.6592 70.9385 161.7158 c
70.8291 161.7725 70.6963 161.7432 70.6221 161.6475 c
63.2656 152.2549 66.7861 136.0225 72.6016 129.29 C
67.0693 133.2725 62.1846 141.9229 62.2617 153.6826 c
62.2627 153.8057 62.1768 153.9092 62.0566 153.9326 c
61.9365 153.958 61.8174 153.8916 61.7725 153.7783 c
57.6641 143.5264 59.8438 124.5303 71.0537 113.9268 C
68.1699 113.5303 65.1865 113.5811 61.9287 114.6201 c
61.8135 114.6553 61.6885 114.6064 61.6299 114.501 c
61.5713 114.3936 61.5947 114.2607 61.6885 114.1826 c
65.7803 110.7275 71.5029 109.6416 76.9551 109.6416 C
72.2578 115.1416 73.8184 126.1963 81.3105 126.1963 c
86.6582 126.1963 89.0859 117.8975 84.957 113.415 c
84.8789 113.3291 84.8691 113.2002 84.9316 113.1045 c
84.9961 113.0068 85.1172 112.9639 85.2285 113.0029 c
90.0078 114.6572 95.1738 118.792 95.1738 124.0186 c
95.1738 129.0615 90.3613 133.4131 83.373 133.0693 C
92.1914 135.5752 101.4238 132.8018 106.2539 126.8174 c
106.3281 126.7236 106.459 126.6963 106.5645 126.749 c
106.6719 126.8037 106.7266 126.9248 106.6973 127.04 c
103.9063 137.7568 94.7305 142.2393 83.2578 140.7471 C
92.5391 144.5029 106.5078 141.2275 112.6816 133.4365 c
112.7539 133.3447 112.8809 133.3154 112.9883 133.3643 c
113.0938 133.415 113.1523 133.5322 113.1289 133.6455 c
111.7578 140.2607 108.2656 145.208 102.5059 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001434 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001434 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8887 166.4502 m
128.8672 166.3311 128.7637 166.2432 128.6426 166.2432 c
115.7363 166.1064 103.8887 162.9756 94.6719 154.7275 C
102.7012 160.2861 117.6133 162.2373 126.1992 158.3467 c
126.3086 158.2959 126.3672 158.1748 126.3398 158.0576 c
126.3145 157.9404 126.207 157.8584 126.0859 157.8604 c
115.4063 158.1514 106.8066 154.8545 100.1016 148.8975 C
106.9707 148.4736 112.6758 144.1572 112.6582 139.0518 c
112.6582 138.9326 112.5742 138.8291 112.457 138.8037 c
112.3418 138.7803 112.2227 138.8389 112.1738 138.9482 c
111.0527 141.4365 107.4258 142.7295 103.5918 141.8291 c
99.4121 140.8467 96.5918 137.6396 97.291 134.6631 c
97.7617 132.6494 99.7266 131.2607 102.2422 130.876 c
102.3691 130.8564 102.4629 130.7471 102.459 130.6182 c
102.4551 130.4912 102.3574 130.3857 102.2285 130.3721 c
101.1602 130.2705 100.0488 130.2666 98.9121 130.376 c
92.4219 130.9932 87.3984 134.9697 86.9629 139.5537 C
82.25 139.0068 78.0781 136.3955 76.584 132.7803 c
76.5391 132.6709 76.4258 132.6084 76.3086 132.626 c
76.1934 132.6436 76.1055 132.7393 76.0957 132.8564 c
75.7188 137.6064 77.3535 140.6943 81.0664 143.71 C
75.6816 141.6514 69.6201 141.5459 63.8096 144.2471 c
63.7041 144.2979 63.6455 144.4131 63.667 144.5283 c
63.6904 144.6436 63.79 144.7275 63.9072 144.7314 c
68.7861 144.9209 72.3242 146.4873 75.6406 149.8037 C
57.3838 144.6689 42.5518 156.0049 47.6846 172.8545 c
47.7197 172.9717 47.8311 173.0459 47.9521 173.0342 c
48.0732 173.0225 48.1689 172.9268 48.1787 172.8057 c
49.0967 163.0908 55.8818 156.6885 66.04 155.7295 C
60.6533 157.7881 55.04 162.7041 54.4834 171.2627 c
54.4756 171.3857 54.5557 171.4951 54.6748 171.5264 c
54.7939 171.5557 54.917 171.4951 54.9678 171.3838 c
57.7666 165.2295 63.2646 162.1201 69.1279 161.5713 C
62.7939 164.1533 58.7314 170.1748 57.5576 177.9932 c
57.5381 178.1162 57.6123 178.2334 57.7314 178.2725 c
57.8486 178.3096 57.9775 178.2568 58.0342 178.1455 c
61.8994 170.5635 70.1904 165.3525 80.4824 169.335 c
91.0996 173.4443 95.7559 185.7197 96.7852 194.374 c
96.8008 194.4971 96.9004 194.5908 97.0234 194.5986 c
97.1465 194.6045 97.2559 194.5225 97.2852 194.4033 c
101.0039 178.7139 93.7012 162.4541 80.6484 155.5635 C
87.7441 157.5654 94.0879 161.8232 97.6758 168.917 C
105.9688 169.9346 111.6797 172.7803 114.5332 178.1572 c
114.5898 178.2627 114.7129 178.3154 114.8281 178.2822 c
114.9434 178.2471 115.0195 178.1357 115.0098 178.0166 c
114.8281 175.9072 114.0684 171.6865 110.9355 169.7451 C
117.9004 169.7568 123.4414 168.8525 128.7344 166.7314 c
128.8457 166.6865 128.9121 166.5693 128.8887 166.4502 c
f
99.4023 219.9189 m
99.502 219.8545 99.6309 219.8643 99.7188 219.9463 c
99.8047 220.0264 99.8223 220.1553 99.7637 220.2588 c
98.1445 223.0557 99.623 227.0713 102.8145 227.0713 c
108.5352 227.0713 111.2852 216.3018 110.4102 206.4795 C
108.248 212.2334 106.377 214.5342 103.0625 217.2744 c
102.9688 217.3506 102.834 217.3525 102.7402 217.2744 c
102.6465 217.1982 102.6191 217.0654 102.6777 216.958 c
107.5332 207.8799 108.5742 200.8936 108.5742 192.874 C
107.1113 198.8311 105.3789 202.1943 100.4473 207.2549 c
100.3613 207.3428 100.2246 207.3564 100.123 207.2861 c
100.0215 207.2158 99.9844 207.083 100.0352 206.9717 c
105.334 195.3799 104.9297 182.5244 100.9824 172.708 c
100.9434 172.6104 100.9688 172.499 101.0449 172.4268 c
101.123 172.3545 101.2344 172.3389 101.3301 172.3838 c
106.5352 174.9346 109.5938 176.6104 114.082 182.7744 C
112.7246 190.1729 113.8535 193.8213 117.2539 199.9678 C
113.3164 190.0518 115.4121 176.0752 125.4414 170.3779 c
125.5508 170.3154 125.6895 170.3428 125.7656 170.4424 c
125.8438 170.542 125.8379 170.6826 125.75 170.7744 c
121.9688 174.7295 119.2188 181.4092 121.5938 188.7002 C
120.0645 178.3115 129.1895 169.5869 139.373 169.5869 c
148.9727 169.5869 155.5234 177.0947 154.9824 184.5264 c
154.4453 191.8916 149.5391 195.4971 145.3105 197.0244 c
145.1992 197.0654 145.0742 197.0225 145.0117 196.9229 c
144.9473 196.8232 144.9609 196.6924 145.0449 196.6084 c
150.6543 190.915 151.4219 180.1162 141.4609 176.8486 C
147.3203 181.9053 145.1504 193.6768 135.7715 194.5732 c
135.6543 194.583 135.5449 194.5127 135.5078 194.4014 c
135.4688 194.292 135.5117 194.1689 135.6113 194.1064 c
137.6191 192.8271 139.2891 190.335 139.2891 187.5322 c
139.2891 182.8584 135.8672 181.0205 133.6133 181.0205 c
130.1914 181.0205 127.3535 184.2764 127.3535 189.2021 c
127.3535 195.0439 132.6133 199.8857 139.373 200.6357 c
146 201.3721 152.1563 198.4814 155.123 194.1768 c
155.1934 194.0752 155.3242 194.04 155.4375 194.0908 c
155.5488 194.1416 155.6074 194.2646 155.5781 194.3838 c
152.5586 206.0869 138.7813 211.2607 128.6895 203.8916 C
135.3027 211.3916 145.6953 211.4971 154.4121 203.8057 c
154.502 203.7256 154.6367 203.7197 154.7344 203.7939 c
154.8301 203.8682 154.8613 203.999 154.8066 204.1084 c
152.1406 209.5146 145.5547 215.9268 136.2012 214.9932 c
127.6445 214.1377 122.6797 205.9775 121.6777 199.3018 C
121.1211 207.8232 123.0723 213.8369 130.4316 219.4463 c
130.5293 219.5205 130.5586 219.6533 130.5039 219.7627 c
130.4492 219.8721 130.3242 219.9268 130.207 219.8916 c
123.4219 217.9326 117.9766 214.4678 115.1582 207.3486 C
115.1582 213.5088 117.2969 219.7197 122.6836 223.8584 c
122.7813 223.9326 122.8105 224.0654 122.7559 224.1748 c
122.7012 224.2822 122.5781 224.3369 122.4609 224.3037 c
119.0078 223.3213 116.2891 221.8154 114.3223 219.1201 C
113.0117 230.2197 107.8008 236.8096 101.7969 236.8096 c
97.6719 236.8096 94.5918 233.7764 94.5918 228.9404 c
94.5918 226.1104 96.0801 222.1377 99.4023 219.9189 c
f
0.174805 128.3018 m
3.33691 124.3975 9.71387 122.9092 16.6064 124.3135 C
16.0967 120.0107 16.9404 115.5225 18.2178 112.8271 c
18.2705 112.7197 18.3916 112.6611 18.5088 112.6904 c
18.626 112.7197 18.7061 112.8271 18.7021 112.9482 c
18.3271 121.7139 23.3252 128.79 32.1514 131.8564 C
25.2451 127.1006 23.2256 117.6631 26.5127 112.792 c
26.5811 112.6924 26.708 112.6533 26.8193 112.6982 c
26.9307 112.7432 26.9951 112.8604 26.9736 112.9795 c
26.6006 115.04 27.5791 117.6631 29.6865 119.7041 c
32.5928 122.5186 36.5361 123.1572 38.4971 121.1338 c
40.458 119.1084 39.6943 115.1865 36.79 112.374 c
35.7295 111.3467 34.5303 110.6104 33.3408 110.1885 c
33.2275 110.1475 33.1592 110.0342 33.1748 109.917 c
33.1885 109.7979 33.2842 109.7061 33.4033 109.6963 c
39.792 109.1416 44.1729 112.9482 46.9189 117.5732 c
49.7139 122.2783 54.4893 125.9854 60.1299 125.2451 c
60.249 125.2295 60.3623 125.2998 60.4033 125.4131 c
60.4424 125.5264 60.3975 125.6514 60.2939 125.7139 c
57.4971 127.3975 54.4229 128.0967 50.4307 126.7666 C
56.2256 131.6748 64.4775 134.5068 72.2715 131.9932 c
72.3809 131.958 72.5 132.001 72.5625 132.0967 c
72.625 132.1924 72.6152 132.3193 72.5371 132.4053 c
66.6279 138.9697 54.8467 139.1006 47.4268 133.7764 C
50.4639 138.0928 54.4951 141.2627 61.7197 142.2549 c
61.835 142.2705 61.9248 142.3643 61.9385 142.4795 c
61.9502 142.5947 61.8838 142.7041 61.7744 142.7451 c
53.4834 145.8213 45.1748 142.7002 38.3291 134.5283 C
41.3213 140.9072 46.2354 146.0146 53.0967 148.542 c
53.2119 148.583 53.2803 148.7002 53.2588 148.8213 c
53.2393 148.9424 53.1357 149.0303 53.0146 149.0322 c
49.0713 149.1143 45.5283 148.1748 40.749 145.4619 C
44.2568 151.1533 43.4893 161.1006 38.3799 167.7217 c
38.3096 167.8135 38.1846 167.8447 38.0771 167.7998 c
37.9717 167.7529 37.9092 167.6396 37.9287 167.5244 c
39.1084 160.3252 36.6299 152.1963 32.3193 147.8838 C
34.4717 155.5146 32.3252 162.46 26.4229 167.5264 c
26.3525 167.5869 26.2529 167.6045 26.167 167.5713 c
26.0791 167.5381 26.0186 167.46 26.0049 167.3682 c
24.7705 157.9502 14.2354 148.3936 5.40332 147.5928 c
5.27832 147.5811 5.18066 147.4814 5.17285 147.3564 c
5.16504 147.2314 5.24707 147.1201 5.37012 147.0928 c
9.64941 146.124 14.0615 146.6025 17.7588 148.1221 C
15.0986 145.1904 11.8193 143.0127 8.2041 141.8779 c
8.08691 141.8408 8.01465 141.7275 8.02832 141.6064 c
8.04199 141.4854 8.1416 141.3896 8.2627 141.3818 c
12.7725 141.0713 17.1865 142.3877 20.9932 144.9209 C
16.6318 138.2998 10.0127 133.376 1.56543 131.4131 c
1.44434 131.3857 1.3623 131.2744 1.36816 131.1514 c
1.37598 131.0283 1.47168 130.9287 1.59473 130.915 c
13.5127 129.6123 23.3408 134.2334 29.8154 142.833 C
28.167 137.9307 23.4502 133.0771 16.8701 130.2139 c
11.0244 127.6689 5.02051 127.2666 0.448242 128.7041 c
0.342773 128.7373 0.225586 128.6963 0.163086 128.6045 c
0.100586 128.5107 0.104492 128.3877 0.174805 128.3018 c
f
53.0791 203.874 m
48.2725 193.3877 48.6143 185.1885 52.4854 174.8193 c
52.5303 174.7021 52.6514 174.6338 52.7744 174.6592 c
52.8975 174.6846 52.9834 174.7959 52.9775 174.9189 c
52.3564 187.542 55.8037 196.5732 63.2764 202.7275 C
55.0264 192.874 58.9229 173.167 72.0996 173.167 c
81.6855 173.167 89.6152 181.1436 91.5547 190.6924 c
91.5801 190.8135 91.5137 190.9346 91.3965 190.9795 c
91.2813 191.0244 91.1504 190.9795 91.0879 190.8721 c
88.2461 186.1104 83.6797 183.0205 78.6309 183.0205 c
70.4951 183.0205 68.0889 189.4873 68.0889 194.0205 c
68.0889 200.2061 73.0156 205.3623 76.7969 205.3623 c
80.2344 205.3623 81.8379 202.54 81.8379 200.4365 c
81.8379 196.5381 78.8398 193.2705 75.4629 192.2725 c
75.3418 192.2354 75.2656 192.1182 75.2832 191.9932 c
75.3008 191.8682 75.4063 191.7744 75.5332 191.7744 c
79.6387 191.749 83.1094 193.6279 85.1621 197.3428 C
85.4316 194.4678 85.4336 192.6572 84.5215 189.6182 c
84.4863 189.501 84.5391 189.376 84.6465 189.3193 c
84.7559 189.2646 84.8887 189.292 84.9629 189.3896 c
92.3203 198.7822 88.7988 215.0127 82.9844 221.7471 C
88.5156 217.7646 93.4004 209.1123 93.3242 197.3525 c
93.3223 197.2314 93.4082 197.126 93.5293 197.1025 c
93.6484 197.0791 93.7676 197.1436 93.8125 197.2568 c
97.9219 207.5107 95.7422 226.5049 84.5313 237.1084 C
87.416 237.5068 90.3984 237.4561 93.6563 236.417 c
93.7715 236.3799 93.8965 236.4307 93.9551 236.5361 c
94.0137 236.6416 93.9902 236.7744 93.8965 236.8525 c
89.8047 240.3076 84.082 241.3936 78.6309 241.3936 C
83.3281 235.8936 81.7676 224.8408 74.2773 224.8408 c
68.9268 224.8408 66.499 233.1396 70.6279 237.6221 c
70.7061 237.708 70.7158 237.835 70.6533 237.9326 c
70.5889 238.0303 70.4678 238.0713 70.3564 238.0342 c
65.5771 236.3779 60.4111 232.2451 60.4111 227.0166 c
60.4111 221.9756 65.2236 217.6221 72.2148 217.9658 C
63.3936 215.4619 54.1611 218.2334 49.3311 224.2197 c
49.2568 224.3115 49.126 224.3408 49.0205 224.2861 c
48.9131 224.2334 48.8584 224.1123 48.8877 223.9951 c
51.6787 213.2803 60.8545 208.7959 72.3281 210.29 C
63.0459 206.5322 49.0771 209.8076 42.9033 217.5986 c
42.8311 217.6904 42.7041 217.7217 42.5967 217.6709 c
42.4912 217.6221 42.4326 217.5049 42.4561 217.3896 c
43.8271 210.7744 47.3193 205.8291 53.0791 203.874 C
f
*U
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 6)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3670.5 3454.5 m
-3569.1816 3454.5 L
-3569.1816 3446.7832 L
-3670.5 3446.7832 L
-3670.5 3454.5 L
n
u
0 O
0.698207 0.674464 0.638605 0.739437 0.137255 0.121569 0.12549 Xa
-3569.3 3448.2073 m
-3569.1504 3448.2439 -3569.2041 3447.8247 -3569.1816 3447.7495 C
-3569.4319 3447.8423 -3569.2937 3448.3159 -3569.3 3448.2073 C
f
-3571.7693 3449.1582 m
-3571.7256 3448.9871 L
-3572.0896 3449.4063 L
-3571.7693 3449.1582 L
f
-3574.0784 3449.1504 m
-3573.8601 3449.8643 -3573.2417 3449.0352 -3572.8303 3449.2888 C
-3572.7625 3449.4524 L
-3572.5769 3448.8772 L
-3573.0769 3448.9683 -3573.7263 3449.3499 -3574.0784 3449.1504 C
f
-3575.3096 3447.6072 m
-3575.2336 3447.8843 -3575.5759 3447.8455 -3575.0225 3447.6936 C
-3575.0503 3447.6631 -3575.0583 3447.6455 -3575.0745 3447.6233 C
-3575.1243 3447.6272 -3575.1929 3447.6262 -3575.3096 3447.6072 C
f
-3575.0745 3447.6233 m
-3574.8313 3447.6033 -3575.2336 3447.3904 -3575.0745 3447.6233 C
-3575.0745 3447.6233 L
f
-3576.1975 3447.7822 m
-3575.8772 3447.5342 L
-3575.9441 3447.3704 -3576.2292 3447.3333 -3576.1233 3447.2134 C
-3576.4519 3447.3496 -3576.3843 3447.5127 -3576.1975 3447.7822 C
f
-3576.5012 3448.303 m
-3576.3352 3448.1982 L
-3576.3643 3448.1294 -3576.4082 3448.105 -3576.5012 3448.303 C
f
-3575.9832 3447.9768 m
-3576.3352 3448.1982 L
-3576.2888 3448.313 -3576.2839 3448.5447 -3576.1736 3448.1184 C
-3576.2024 3448.3296 -3576.1328 3448.1262 -3575.9832 3447.9768 C
f
-3575.7839 3448.0852 m
-3575.6042 3448.2407 -3575.3721 3448.3384 -3575.6936 3448.5852 C
-3575.0808 3448.4871 -3575.1711 3447.9856 -3575.7839 3448.0852 C
f
-3574.1963 3449.8887 m
-3573.9561 3450.0984 L
-3573.7483 3449.8584 L
-3573.8521 3449.9771 -3574.2112 3449.6653 -3574.1963 3449.8887 C
f
-3578.1929 3447.4126 m
-3578.2129 3447.5647 -3578.0852 3447.8174 -3578.0613 3448.0122 C
-3577.8247 3447.8374 L
-3577.9463 3447.7334 -3578.1768 3447.6375 -3578.1929 3447.4126 C
f
-3578.0613 3448.0122 m
-3578.4153 3448.2727 L
-3578.0991 3448.303 -3578.0413 3448.1792 -3578.0613 3448.0122 C
f
-3576.5583 3449.0955 m
-3575.9768 3448.5479 L
-3576.6704 3449.1033 L
-3576.5583 3449.0955 L
f
-3579.5449 3447.3936 m
-3579.3442 3447.0422 L
-3579.7017 3447.5735 L
-3579.5449 3447.3936 L
f
-3580.4417 3447.4551 m
-3580.2932 3447.1638 -3580.6453 3446.9624 -3580.4883 3446.7832 C
-3580.7319 3446.8352 -3580.9399 3447.0852 -3581.1272 3447.3103 C
-3580.9282 3447.1848 -3580.7161 3447.2168 -3580.4417 3447.4551 C
f
-3581.4417 3447.6375 m
-3581.3423 3447.5679 -3581.2393 3447.4431 -3581.1272 3447.3103 C
-3581.2329 3447.3772 -3581.3369 3447.4744 -3581.4417 3447.6375 C
f
-3579.0183 3448.1975 m
-3579.0457 3448.1055 -3579.0984 3447.8655 -3579.2969 3447.7639 C
-3579.1577 3448.1912 L
-3579.1152 3448.1936 -3579.0671 3448.1951 -3579.0183 3448.1975 C
f
-3579.1528 3448.2046 m
-3579.1577 3448.1912 L
-3579.3088 3448.1814 -3579.4136 3448.1719 -3579.4585 3448.167 c
-3579.4199 3448.1707 -3579.3279 3448.1824 -3579.1528 3448.2046 C
f
-3578.9832 3448.1992 m
-3578.9961 3448.1982 -3579.0056 3448.1975 -3579.0183 3448.1975 C
-3579.0049 3448.24 -3578.9968 3448.2534 -3578.9832 3448.1992 C
f
-3577.4863 3448.709 m
-3577.6943 3448.948 -3578.1279 3449.2039 -3577.7083 3449.5686 C
-3577.5591 3449.2759 -3577.7993 3449.0686 -3577.4863 3448.709 c
f
-3578.8103 3448.7334 m
-3578.4343 3448.8311 L
-3578.4417 3448.7183 -3578.5095 3448.5535 -3578.4065 3448.4351 C
-3578.8103 3448.7334 L
f
-3578.9944 3448.8694 m
-3578.8103 3448.7334 L
-3578.9497 3448.6975 L
-3578.9944 3448.8694 L
f
-3580.7976 3448.0376 m
-3580.96 3448.2239 -3581.1377 3448.2393 -3581.3384 3448.2693 C
-3581.1233 3448.3533 -3580.9009 3448.3992 -3580.6897 3448.3972 C
-3580.6599 3448.2632 -3580.5671 3448.0222 -3580.7976 3448.0376 C
f
-3579.9983 3448.1563 m
-3580.0095 3448.1663 -3580.0239 3448.1707 -3580.0344 3448.1807 C
-3580.0122 3448.2173 -3579.9944 3448.2283 -3579.9983 3448.1563 C
f
-3583.3142 3448.2664 m
-3583.3032 3448.2896 -3583.2937 3448.3196 -3583.2825 3448.344 C
-3583.28 3448.3196 -3583.2783 3448.2952 -3583.2751 3448.27 C
-3583.3142 3448.2664 L
f
-3580.6536 3448.4771 m
-3580.4919 3448.5598 -3580.3953 3448.4551 -3580.3032 3448.3242 C
-3580.4241 3448.3662 -3580.5522 3448.3943 -3580.6897 3448.3972 C
-3580.7031 3448.4583 -3580.7056 3448.4983 -3580.6536 3448.4771 C
f
-3581.9929 3447.8374 m
-3581.9087 3447.9272 -3581.8132 3448.0032 -3581.7129 3448.0723 C
-3581.7952 3447.9373 -3581.9631 3447.7263 -3581.9929 3447.8374 C
f
-3580.0889 3448.0623 m
-3580.0808 3448.0559 -3580.0735 3448.0479 -3580.0647 3448.0432 C
-3580.1177 3447.9524 -3580.1111 3447.9966 -3580.0889 3448.0623 C
f
-3580.0889 3448.0623 m
-3580.1721 3448.1243 -3580.2375 3448.2295 -3580.3032 3448.3242 C
-3580.2048 3448.2896 -3580.1135 3448.2439 -3580.0344 3448.1807 C
-3580.0544 3448.1504 -3580.0745 3448.104 -3580.0889 3448.0623 C
f
-3583.9128 3451.0095 m
-3583.8843 3450.6133 -3583.4592 3450.2471 -3583.0923 3450.6719 C
-3582.7312 3450.375 -3582.9673 3449.0723 -3583.2825 3448.344 C
-3583.2937 3448.5166 -3583.2937 3448.6763 -3583.6653 3448.9104 C
-3583.5352 3449.1262 -3582.8408 3449.4163 -3583.1543 3449.7747 C
-3583.6465 3449.9783 -3583.5576 3449.6343 -3583.7969 3449.4253 C
-3583.5935 3449.9182 -3584.4231 3450.1431 -3584.3159 3450.8687 C
-3583.8843 3450.6133 L
-3583.8762 3450.7263 -3584.0327 3450.9063 -3583.9128 3451.0095 C
f
-3582.5745 3448.3843 m
-3582.4216 3448.3352 L
-3582.5959 3448.2664 -3582.7207 3448.1079 -3582.9504 3447.7976 C
-3583.2048 3447.9915 -3583.2576 3448.1382 -3583.2751 3448.27 C
-3582.5222 3448.3252 L
-3582.5745 3448.3843 L
f
-3581.7351 3448.3335 m
-3581.8545 3448.7644 -3582.2217 3448.948 -3581.9968 3449.4143 C
-3581.5481 3449.3843 -3581.6824 3449.0542 -3581.4143 3448.8672 C
-3582.1384 3448.9744 -3581.2063 3448.6272 -3581.7295 3448.3831 C
-3581.5872 3448.3096 -3581.4592 3448.2871 -3581.3384 3448.2693 C
-3581.4688 3448.2173 -3581.5945 3448.1519 -3581.7129 3448.0723 C
-3581.7063 3448.0823 -3581.7017 3448.0896 -3581.6963 3448.0991 C
-3581.6929 3448.0984 L
-3581.6929 3448.1006 -3581.6936 3448.1016 -3581.6936 3448.104 C
-3581.6624 3448.1582 -3581.6521 3448.1912 -3581.6873 3448.1604 C
-3581.6897 3448.1653 -3581.6985 3448.167 -3581.7024 3448.1692 C
-3581.7073 3448.2283 -3581.7207 3448.2808 -3581.7351 3448.3311 C
-3581.9448 3448.2422 -3581.7681 3448.22 -3581.7024 3448.1692 C
-3581.7 3448.1472 -3581.6943 3448.1272 -3581.6936 3448.104 C
-3581.6943 3448.1023 -3581.6953 3448.1006 -3581.6963 3448.0991 C
-3582.4216 3448.3352 L
-3582.2681 3448.3953 -3582.0759 3448.3831 -3581.7351 3448.3335 C
f
-3578.0952 3450.4951 m
-3578.1177 3450.4573 -3578.1167 3450.4263 -3578.1184 3450.3953 C
-3578.1653 3450.448 -3578.1831 3450.4839 -3578.0952 3450.4951 C
f
-3578.3936 3450.2351 m
-3578.3408 3450.1753 -3578.2969 3450.0032 -3578.1255 3450.0471 C
-3577.9768 3450.1763 -3578.1262 3450.2534 -3578.1184 3450.3953 C
-3578.0151 3450.2808 -3577.7568 3450.0862 -3578.0808 3449.8762 C
-3578.1321 3449.9351 L
-3578.4241 3449.7871 -3578.7993 3449.2495 -3578.7483 3449.1902 C
-3578.6631 3449.5784 -3578.5879 3449.8542 -3578.3936 3450.2351 C
f
-3580.0852 3449.3943 m
-3580.6892 3449.6055 L
-3580.3816 3449.9783 L
-3580.3972 3449.7544 L
-3580.0537 3449.8423 -3580.1279 3449.5667 -3580.0852 3449.3943 C
f
-3583.3833 3448.052 m
-3583.3032 3447.5967 L
-3583.6521 3448.24 L
-3583.3833 3448.052 L
f
-3584.1682 3448.1062 m
-3584.1392 3447.7112 L
-3584.3464 3447.9495 L
-3584.1682 3448.1062 L
f
-3628.4617 3453.0166 m
-3628.6392 3453.1287 L
-3628.5552 3453.0942 -3628.5012 3453.0564 -3628.4617 3453.0166 C
f
-3627.1768 3453.0435 m
-3627.1453 3452.8484 L
-3627.2048 3452.9558 -3627.2292 3453.0352 -3627.1768 3453.0435 C
f
-3603.4456 3448.1511 m
-3603.7041 3447.7815 -3603.9929 3447.2083 -3603.9617 3447.6536 C
-3603.8823 3448.0872 L
-3603.7017 3448.0095 -3603.5632 3448.0576 -3603.4456 3448.1511 C
f
-3616.6479 3450.7415 m
-3616.6233 3450.7832 -3616.5977 3450.8286 -3616.5723 3450.8728 C
-3616.5095 3450.7246 -3616.4504 3450.5872 -3616.3977 3450.4583 C
-3616.4729 3450.5471 -3616.5583 3450.6416 -3616.6479 3450.7415 C
f
-3616.8303 3452.5366 m
-3617.1711 3452.2566 L
-3617.0945 3452.3542 -3616.9849 3452.448 -3616.8303 3452.5366 C
f
-3635.4792 3453.4768 m
-3635.6863 3453.9182 L
-3635.3623 3453.9163 -3635.5049 3453.6936 -3635.4792 3453.4768 C
f
-3592.2073 3448.2664 m
-3592.4304 3448.0967 -3592.6079 3448.0254 -3592.7639 3448.0044 C
-3592.4951 3448.2534 -3592.2783 3448.6272 -3592.2073 3448.2664 C
f
-3627.9561 3448.4126 m
-3628.0647 3448.4912 -3628.1111 3448.5796 -3628.1079 3448.6763 C
-3627.9961 3448.6023 -3627.9329 3448.5193 -3627.9561 3448.4126 C
f
-3593.4082 3448.0059 m
-3593.3689 3448.0496 -3593.3303 3448.0713 -3593.2903 3448.1079 C
-3593.1272 3448.0352 -3592.9631 3447.9768 -3592.7639 3448.0044 C
-3592.9624 3447.8196 -3593.1897 3447.7046 -3593.4082 3448.0059 C
f
-3660.9297 3453.1172 m
-3660.9482 3453.0984 -3660.9705 3453.0884 -3660.9873 3453.0652 C
-3660.9929 3453.1243 -3660.9673 3453.1272 -3660.9297 3453.1172 C
f
-3668.3442 3448.74 m
-3668.2712 3448.7124 -3668.1521 3448.7119 -3668.0398 3448.7063 C
-3668.0945 3448.6763 -3668.1863 3448.6792 -3668.3442 3448.74 c
f
-3587.3264 3447.917 m
-3587.1599 3447.8887 -3587.3 3447.8694 -3587.3264 3447.917 C
-3587.3264 3447.917 L
f
-3586.5168 3449.6331 m
-3586.5522 3449.6814 -3586.5791 3449.7439 -3586.5833 3449.844 C
-3586.5696 3449.74 -3586.5464 3449.6736 -3586.5168 3449.6331 c
f
-3595.0664 3450.7063 m
-3595.0713 3450.7063 -3595.0752 3450.7046 -3595.0808 3450.7046 C
-3595.0313 3450.7896 -3595.0398 3450.7732 -3595.0664 3450.7063 C
f
-3587.0759 3448.1143 m
-3587.1384 3448.0613 -3587.2104 3448.0166 -3587.2888 3447.9856 C
-3587.2544 3448.0193 -3587.1897 3448.0613 -3587.0759 3448.1143 C
f
-3587.1096 3447.9092 m
-3587.0522 3447.9287 -3587.0071 3447.9395 -3586.9641 3447.9512 C
-3586.9431 3447.8792 -3586.9617 3447.8335 -3587.1096 3447.9092 C
f
-3587.5583 3447.9407 m
-3587.4631 3447.9336 -3587.3743 3447.9539 -3587.2888 3447.9856 C
-3587.3215 3447.9558 -3587.3352 3447.9319 -3587.3264 3447.917 C
-3587.3752 3447.9236 -3587.4441 3447.9326 -3587.5583 3447.9407 c
f
-3647.2932 3451.9558 m
-3647.3042 3451.9424 -3647.3169 3451.9336 -3647.3289 3451.9153 C
-3647.4968 3452.0952 -3647.4231 3452.0667 -3647.2932 3451.9558 C
f
-3607.7783 3452.6563 m
-3607.7705 3452.6519 -3607.7664 3452.6404 -3607.7593 3452.636 C
-3607.7671 3452.6311 -3607.7769 3452.625 -3607.7839 3452.6199 C
-3607.7783 3452.6563 L
f
-3608.3762 3452.979 m
-3608.1216 3452.4392 -3607.9768 3452.5056 -3607.7839 3452.6199 C
-3607.9817 3451.3694 L
-3608.3762 3452.979 L
f
*u
-3631.5383 3453.1416 m
-3631.1184 3453.532 L
-3631.6252 3454.1736 -3631.9919 3453.9524 -3631.5977 3454.5 C
-3631.5383 3453.1416 -3629.9656 3454.3616 -3629.9072 3453.0039 C
-3629.6304 3453.2896 L
-3629.7097 3453.2766 -3629.7224 3453.3562 -3629.8008 3453.3433 C
-3629.2625 3453.9934 -3629.4009 3452.3616 -3628.7073 3452.5542 C
-3628.4656 3452.6582 -3628.2969 3452.855 -3628.4617 3453.0166 C
-3627.9231 3452.6807 L
-3627.7664 3452.7073 -3627.8047 3452.9431 -3627.9607 3452.917 C
-3627.1392 3452.8086 L
-3627.1453 3452.8484 L
-3627.0281 3452.636 -3626.7625 3452.3064 -3626.6328 3452.1663 C
-3626.4241 3452.3616 -3626.7375 3452.3103 -3626.6841 3452.479 C
-3626.2292 3452.1504 L
-3626.0439 3452.5032 -3626.4209 3452.844 -3626.7351 3452.7935 C
-3626.3103 3454.1494 -3626.3577 3452.4524 -3625.4409 3453.2444 C
-3625.8704 3453.4163 L
-3625.5935 3454.1863 -3625.2583 3453.9072 -3624.7727 3454.3875 C
-3624.8879 3454.1367 -3625.7449 3453.1775 -3625.2512 3452.8391 C
-3625.1121 3452.9414 -3624.9287 3452.99 -3624.6624 3452.7168 C
-3624.6599 3453.2 -3624.3999 3453.0811 -3624.0745 3453.0535 C
-3624.0967 3453.6936 L
-3623.7449 3453.5088 -3623.7727 3453.1831 -3623.5657 3452.8953 C
-3623.1736 3452.9583 -3623.0923 3453.4536 -3623 3453.8711 C
-3622.3721 3453.9727 -3623.4336 3453.0767 -3622.6904 3452.9558 C
-3622.1682 3453.2007 -3621.8015 3452.9392 -3621.1768 3452.5564 C
-3620.8113 3452.7776 -3621.2407 3452.948 -3621.1096 3453.1311 C
-3620.7856 3452.6206 L
-3620.7063 3452.6331 -3620.7319 3452.7896 -3620.7449 3452.8687 C
-3620.4719 3452.6707 -3620.7224 3452.229 -3620.2932 3452.0559 C
-3620.1775 3451.3511 -3619.4121 3453.0852 -3618.8809 3452.2854 C
-3618.75 3452.4673 -3618.9441 3452.6775 -3618.9041 3452.9253 C
-3618.1753 3452.3999 -3618.2793 3452.5435 -3617.6809 3451.8367 C
-3617.1711 3452.2566 L
-3617.5457 3451.7766 -3617.0671 3451.2083 -3616.6479 3450.7415 C
-3616.7808 3450.5095 -3616.8943 3450.3064 -3616.9705 3450.2095 C
-3616.3015 3449.8662 L
-3616.2207 3449.9712 -3616.2881 3450.1912 -3616.3977 3450.4583 C
-3616.3521 3450.4055 -3616.3088 3450.3533 -3616.2751 3450.3047 C
-3616.0359 3450.5413 -3616.1599 3450.9104 -3616.3313 3451.2678 C
-3616.4128 3451.1416 -3616.4937 3451.0071 -3616.5723 3450.8728 C
-3616.7375 3451.2615 -3616.8921 3451.6919 -3616.8577 3452.0667 C
-3616.8142 3451.9927 -3616.7305 3451.9292 -3616.6384 3451.8936 C
-3616.6816 3451.9993 -3616.7092 3452.0935 -3616.6892 3452.1575 c
-3616.6665 3452.2246 -3616.5967 3452.0833 -3616.4873 3451.9199 C
-3616.3352 3452.6331 L
-3616.2983 3452.3499 L
-3615.4231 3452.7959 L
-3614.7969 3452.0784 -3614.2522 3451.021 -3613.2583 3450.7271 C
-3613.5049 3451.25 -3613.3113 3451.5811 -3613.3247 3452.2007 C
-3613.5959 3451.5447 -3614.0945 3452.479 -3614.6096 3452.3462 c
-3614.3408 3452.4153 -3614.3999 3452.7112 -3614.4683 3452.813 C
-3613.5496 3452.2168 L
-3613.5703 3452.7239 -3613.3545 3452.5967 -3613.1145 3452.8064 C
-3613.2959 3451.8047 -3612.4297 3452.1392 -3612.0559 3451.8323 C
-3612.0327 3452.1682 -3612.1223 3452.5122 -3612.5784 3452.4304 C
-3612.0752 3453.1848 -3611.9282 3451.2544 -3611.4343 3451.8953 C
-3611.5457 3451.9031 -3611.6057 3451.8518 -3611.6497 3452.0232 C
-3611.3896 3451.7239 -3610.7537 3451.9612 -3610.9033 3452.2534 C
-3611.0144 3452.2603 L
-3610.2751 3452.3792 -3608.7639 3452.2678 -3608.6536 3451.417 C
-3608.6462 3451.5276 -3608.7505 3452.4424 -3608.7952 3452.6143 C
-3607.4761 3449.7527 L
-3607.5923 3450.4832 -3607.1462 3452.2224 -3607.7593 3452.636 C
-3607.5833 3452.74 -3607.3655 3452.8616 -3606.9944 3452.6033 C
-3607.1145 3452.4993 -3607.2937 3451.5471 -3607.1296 3451.48 C
-3606.6792 3452.2932 -3606.8169 3451.9153 -3606.2617 3452.6084 C
-3606.4417 3452.4524 -3606.2417 3451.3064 -3605.9573 3451.3433 C
-3606.0017 3451.5144 -3605.9336 3452.4734 -3606.0376 3452.5928 C
-3605.3296 3451.4683 L
-3605.5063 3451.6707 -3605.3608 3452.4214 -3605.2024 3452.74 C
-3605.2759 3452.5193 -3604.5903 3452.76 -3604.4016 3452.6487 C
-3604.7017 3452.3875 L
-3603.9023 3452.5579 -3603.9121 3450.8064 -3603.1191 3450.8655 C
-3603.2151 3451.0974 -3603.3562 3452.2952 -3602.9529 3452.4363 C
-3602.7681 3451.8606 -3602.1345 3449.6663 -3601.4329 3449.2227 C
-3601.2983 3449.552 L
-3600.76 3449.1768 L
-3601.0952 3450.0435 -3602.0359 3451.8672 -3602.5496 3452.5767 C
-3602.2505 3452.8374 -3602.4663 3452.9656 -3602.0183 3452.9351 C
-3601.8601 3453.2439 -3602.2625 3453.4031 -3602.3943 3453.4214 C
-3601.3513 3453.6206 L
-3601.3977 3452.948 -3600.5537 3452.9463 -3600.5935 3452.3862 C
-3601.7263 3453.0833 L
-3601.7722 3452.4119 -3601.0713 3451.1753 -3600.3323 3451.2932 C
-3600.1443 3451.5613 -3600.4729 3452.49 -3600.4575 3452.7144 C
-3600.3616 3452.4832 -3599.7561 3452.2722 -3599.6882 3452.4363 C
-3600.0017 3452.7959 L
-3599.5903 3453.0486 -3599.3303 3451.9048 -3598.8359 3452.5464 C
-3598.6653 3452.5896 -3598.3264 3453.4119 -3598.2969 3453.0144 C
-3598.5752 3452.2471 -3598.6296 3449.8743 -3598.4441 3449.2979 C
-3598.3843 3449.3499 -3597.5481 3450.0313 -3597.3533 3450.4104 C
-3597.0723 3451.0122 -3597.7751 3451.844 -3597.5359 3452.3606 C
-3597.5256 3452.1768 -3597.3704 3451.9502 -3597.3057 3451.8772 C
-3597.1265 3452.0342 -3597.3799 3452.4463 -3596.9905 3452.3633 C
-3596.9255 3451.6824 -3596.1985 3452.4207 -3596.8064 3451.7871 C
-3596.4255 3451.5923 -3596.4016 3451.9282 -3595.9543 3451.8975 C
-3596.0967 3451.4573 -3595.5527 3450.3992 -3595.1711 3450.2039 C
-3595.1936 3450.3772 -3595.1079 3450.6033 -3595.0664 3450.7063 C
-3594.2856 3450.7678 -3593.8665 3451.0774 -3593.1384 3451.0833 C
-3593.0713 3451.2483 -3592.72 3451.448 -3592.8696 3451.7415 C
-3592.7649 3451.6206 -3592.6687 3451.3894 -3592.4441 3451.3733 C
-3592.0095 3451.9624 -3592.9448 3451.4646 -3592.6135 3452.1736 C
-3592.5852 3451.7776 -3592.0327 3451.6262 -3591.7129 3451.3792 C
-3591.8113 3450.7671 -3592.4519 3451.2615 -3592.7722 3451.5088 C
-3592.7737 3450.6653 -3592.2161 3449.7815 -3591.4551 3449.3911 C
-3590.8503 3449.1814 -3591.1929 3449.9363 -3591.0879 3449.8167 C
-3589.9519 3449.9639 -3590.1201 3448.3433 -3589.1768 3448.9524 C
-3588.8025 3449.4895 -3589.1599 3450.021 -3589.0769 3450.4092 C
-3589.5696 3450.6128 -3589.8333 3450.0679 -3590.1672 3450.0896 C
-3589.7561 3450.344 L
-3589.9128 3450.5232 -3590.2417 3450.6582 -3590.4209 3450.5032 C
-3590.1072 3450.9856 -3588.5017 3450.5952 -3587.6252 3451.0413 C
-3587.4695 3450.8616 -3587.2007 3450.6743 -3587.3279 3450.4583 C
-3587.6052 3450.5332 L
-3587.8601 3450.0999 -3587.0833 3449.9336 -3587.4343 3449.7312 C
-3587.0623 3449.4263 -3586.6453 3448.9473 -3586.1216 3449.1924 C
-3586.0232 3449.8054 L
-3586.0344 3449.6262 -3586.3655 3449.4407 -3586.5127 3449.6272 c
-3586.2944 3449.355 -3585.7097 3450.4573 -3585.4705 3449.6543 C
-3585.8376 3449.2295 L
-3585.4641 3448.9214 -3585.0024 3448.2703 -3584.5383 3448.4639 C
-3584.7495 3447.8584 -3584.6453 3448.5332 -3584.9751 3447.8247 C
-3584.6892 3448.7063 -3586.1624 3447.7876 -3585.7031 3448.7134 C
-3586.0415 3447.8916 -3586.2888 3448.3655 -3586.7312 3447.6638 C
-3586.7175 3447.8662 -3586.5745 3448.0513 -3586.9641 3447.9512 C
-3586.9817 3448.0103 -3587.0232 3448.0852 -3587.0496 3448.1294 C
-3587.0615 3448.1243 -3587.0657 3448.1206 -3587.0759 3448.1143 C
-3587.0681 3448.1223 -3587.0623 3448.1311 -3587.0544 3448.1382 C
-3587.0713 3448.1687 -3587.0728 3448.1753 -3587.0464 3448.1462 C
-3586.9536 3448.2356 -3586.8784 3448.3416 -3586.8479 3448.4539 C
-3587.0413 3448.9182 -3587.6609 3448.9038 -3587.8704 3449.1443 C
-3588.1016 3449.0479 -3587.7737 3448.9119 -3587.8999 3448.6963 C
-3588.2129 3449.0559 L
-3588.2439 3448.6072 -3588.8271 3448.3096 -3588.2825 3448.0464 C
-3588.7727 3448.0264 L
-3589.0613 3447.7747 -3589.4583 3447.6743 -3589.7031 3447.8633 C
-3589.9343 3447.7664 -3590.2871 3448.3606 -3590.0857 3448.0088 C
-3590.8545 3448.2871 L
-3590.8616 3448.1753 L
-3591.6201 3448.1184 -3592.4231 3448.9192 -3593.2903 3448.1079 C
-3593.5457 3448.2212 -3593.8096 3448.3599 -3594.2368 3448.2327 C
-3594.3201 3447.844 L
-3594.6479 3447.979 -3595.3047 3447.4551 -3595.4456 3447.8599 C
-3595.7993 3446.8142 -3597.0369 3447.6316 -3597.6135 3447.4463 C
-3597.6353 3447.9536 L
-3598.0322 3447.9253 -3598.4128 3448.0696 -3598.9055 3448.2727 C
-3598.8752 3448.7207 L
-3599.3 3449.0886 -3599.9673 3448.4019 -3600.6392 3448.448 C
-3600.5935 3448.2766 -3600.4231 3448.3213 -3600.3025 3448.4253 C
-3601.1052 3447.4119 -3601.9961 3449.1614 -3602.7241 3448.4236 C
-3602.9055 3448.5872 -3603.0369 3448.5313 -3603.1641 3448.4192 C
-3603.1472 3448.4175 -3603.1321 3448.4092 -3603.1191 3448.3953 C
-3603.1377 3448.3904 -3603.1653 3448.3887 -3603.1936 3448.3894 C
-3603.2737 3448.3123 -3603.3562 3448.2227 -3603.4456 3448.1511 C
-3603.3696 3448.26 -3603.2969 3448.3496 -3603.2336 3448.3911 C
-3603.3735 3448.4004 -3603.5857 3448.4558 -3603.7937 3448.5686 C
-3603.8823 3448.0872 L
-3603.8992 3448.0935 -3603.9128 3448.0923 -3603.9304 3448.1006 C
-3604.1345 3447.9231 -3604.0945 3448.3286 -3603.9856 3448.6912 C
-3604.0903 3448.77 -3604.1863 3448.8655 -3604.2607 3448.9812 C
-3604.4265 3448.2039 -3604.8064 3449.2432 -3605.0327 3448.4143 C
-3605.1729 3448.8184 -3606.0784 3448.7183 -3606.1892 3449.5696 C
-3606.1963 3449.4583 -3606.2576 3449.4055 -3606.1453 3449.3982 C
-3606.3772 3449.3015 -3606.6089 3449.2046 -3606.8169 3449.4446 C
-3606.9153 3448.8323 L
-3607.4216 3449.6553 L
-3607.7292 3449.2822 -3607.8567 3449.0652 -3607.5513 3448.5942 C
-3608.2888 3449.3196 -3608.1497 3448.8672 -3608.7769 3449.5852 C
-3608.7463 3449.1895 L
-3608.9705 3449.2046 -3609.3289 3449.7356 -3609.4641 3449.4082 C
-3609.9656 3448.6553 -3611.9456 3449.3042 -3613.2329 3448.604 C
-3612.9832 3449.77 -3613.8313 3448.0823 -3613.8823 3448.9856 C
-3613.9573 3448.7102 -3614.1367 3448.5542 -3613.9282 3448.3152 C
-3614.5852 3448.5852 -3614.9153 3447.8772 -3615.3689 3448.6392 C
-3615.4441 3448.3623 -3615.2283 3448.2356 -3615.2952 3448.0713 C
-3615.3479 3448.1311 -3615.5039 3448.3113 -3615.5723 3448.1462 c
-3615.6392 3447.9822 -3615.4761 3447.9153 -3615.3721 3447.7952 C
-3616.0432 3447.8416 -3616.1111 3448.6912 -3616.1599 3449.4883 C
-3616.5 3449.1111 -3616.6697 3449.1638 -3616.9153 3449.6873 C
-3617.0337 3449.4263 -3617.2312 3449.1536 -3616.8142 3449.0598 C
-3617.0488 3449.0215 -3618.2473 3448.6775 -3618.2712 3449.3167 C
-3618.3447 3449.1543 -3618.5991 3449.2693 -3618.6609 3449.3433 C
-3619.1873 3449.3047 -3619.2336 3449.2471 -3619.7505 3449.3079 C
-3619.6072 3449.4119 L
-3619.8113 3450.1831 -3620.0369 3449.584 -3620.4536 3449.6768 C
-3620.4417 3449.5984 L
-3621.3972 3449.0415 -3620.8542 3449.8643 -3621.7969 3449.229 C
-3621.7456 3449.709 L
-3621.8335 3450.7407 -3622.5808 3449.1006 -3623.1279 3449.4951 C
-3622.9304 3449.7693 L
-3623.2292 3450.1223 -3623.7656 3448.3662 -3624.0657 3448.2371 C
-3624.1311 3448.1472 -3623.9624 3448.0935 -3623.8711 3448.0276 C
-3624.6567 3447.4182 -3623.9729 3448.6553 -3624.5583 3448.8015 C
-3624.6663 3448.4624 -3624.4192 3447.9392 -3624.8132 3447.8762 C
-3625.0095 3447.6023 -3625.9561 3448.9768 -3626.4937 3448.3267 C
-3626.3752 3448.5879 -3626.2576 3448.8484 -3626.5295 3449.0447 C
-3626.9463 3449.1382 -3627.6563 3448.0579 -3628.0327 3448.8816 C
-3628.0857 3448.8096 -3628.1057 3448.7415 -3628.1079 3448.6763 C
-3628.4265 3448.8887 -3629.1433 3449.0291 -3629.3352 3449.4756 C
-3629.6296 3447.8191 -3631.3159 3450.2815 -3631.3088 3448.7534 C
-3632.2888 3448.8352 L
-3632.2632 3448.6792 L
-3632.8896 3448.5784 -3633.1111 3448.9446 -3633.3313 3449.3113 C
-3633.4761 3449.2073 -3633.3704 3449.0642 -3633.3584 3448.9846 C
-3634.2737 3448.6763 -3634.3647 3448.7415 -3635.1321 3449.5032 C
-3635.2119 3449.0071 L
-3635.4199 3449.2952 -3636.5352 3448.2295 -3637.4329 3448.8079 C
-3637.4241 3448.751 -3637.4055 3448.6553 -3637.3342 3448.5852 C
-3638.3442 3449.167 -3639.7522 3447.2112 -3640.1223 3449.0159 C
-3640.7888 3449.4607 L
-3639.9265 3449.6006 -3640.9172 3450.2444 -3640.5625 3450.5435 C
-3640.9016 3450.6494 -3641.4392 3449.9993 -3641.0225 3449.9063 C
-3640.9573 3449.9966 L
-3640.8042 3449.0559 -3642.0288 3449.6631 -3642.0056 3449.0222 C
-3643.7024 3449.0696 -3645.3562 3448.5479 -3646.9456 3448.5078 C
-3646.7625 3449.2393 L
-3647.3169 3449.1975 L
-3647.4624 3449.0276 -3647.5122 3448.625 -3647.1167 3448.6553 C
-3647.3247 3448.2407 -3647.78 3449.0032 -3647.7913 3449.1614 C
-3648.5657 3448.8655 -3647.4888 3448.3086 -3647.7263 3448.2913 C
-3648.0488 3448.3455 L
-3647.9761 3448.4312 L
-3648.2375 3448.73 -3648.2607 3449.0471 -3648.7361 3449.0112 C
-3649.0369 3448.8643 -3648.8904 3448.5598 -3649.0088 3448.532 C
-3649.0081 3448.479 -3649.0481 3448.4551 -3649.1904 3448.5103 C
-3649.8889 3448.448 L
-3649.6096 3449.0254 L
-3649.9192 3449.3103 -3650.2664 3448.9951 -3649.9441 3449.6494 c
-3650.4172 3448.6404 -3652.5496 3449.2871 -3652.8401 3448.9744 C
-3653.2737 3449.3953 -3653.7017 3449.3875 -3654.2319 3449.3367 C
-3654.1001 3449.4573 -3654.0212 3450.1062 -3654.4785 3450.0271 C
-3654.3113 3448.6873 -3655.3159 3449.4456 -3655.6855 3448.4812 C
-3655.3552 3449.1206 -3656.9856 3448.6392 -3656.4673 3449.5471 C
-3656.8489 3449.4382 -3656.4905 3449.0454 -3656.78 3448.73 C
-3657.6882 3449.2493 -3658.7815 3448.3926 -3659.9041 3448.5679 C
-3659.9216 3448.7444 -3659.7336 3449.0127 -3659.9744 3449.2747 C
-3660.5671 3448.3953 L
-3660.7888 3448.4812 -3660.7712 3449.4104 -3661.1763 3448.8 C
-3661.1191 3448.948 -3661.0337 3449.1707 -3661.1824 3449.2271 C
-3663.3816 3448.3704 -3665.6763 3449.9292 -3667.9097 3448.3191 C
-3667.6072 3448.6604 -3667.8088 3448.6936 -3668.0398 3448.7063 C
-3667.8896 3448.7876 -3668.0432 3449.1404 -3668.0137 3449.3792 C
-3668.9487 3448.7168 L
-3669.1191 3449.3784 -3669.9512 3448.7615 -3670.0488 3449.3943 C
-3669.7527 3449.28 L
-3670.1465 3450.0271 -3669.2017 3450.9395 -3669.2593 3451.8975 C
-3668.8184 3451.0486 -3668.0967 3453.1543 -3667.3733 3451.9395 C
-3667.2136 3452.1353 -3667.5095 3452.2483 -3667.4241 3452.4702 C
-3667.2407 3452.0598 -3667.0193 3451.9744 -3666.6089 3452.1582 C
-3666.6553 3452.26 L
-3665.5024 3452.1599 -3665.0081 3452.5647 -3663.7129 3452.8342 C
-3663.8088 3452.3606 L
-3663.5305 3452.4236 -3663.4719 3452.5723 -3663.3416 3452.6912 C
-3663.0222 3451.9727 -3664.1233 3452.6504 -3663.8323 3451.8584 C
-3663.4631 3452.8223 -3661.8696 3451.8728 -3661.6201 3452.9683 C
-3661.1919 3452.9744 -3661.7456 3452.4199 -3661.3176 3452.4263 C
-3661.2041 3452.7227 L
-3661.0959 3452.3408 L
-3660.8152 3452.4038 -3660.6736 3452.7747 -3660.6631 3453.0254 C
-3660.7312 3452.9956 -3660.8567 3453.0955 -3660.9297 3453.1172 C
-3660.5657 3453.4663 -3659.9033 3452.9983 -3659.7783 3453.1118 C
-3660.1897 3452.9292 L
-3659.0212 3452.6519 -3657.5945 3453.0413 -3656.4656 3452.4382 C
-3656.5513 3452.2151 L
-3655.6892 3451.8015 -3655.8608 3452.4607 -3654.9143 3452.2693 C
-3654.9487 3452.3223 L
-3654.7593 3452.0999 -3654.5063 3451.9871 -3654.2473 3452.0127 C
-3654.4863 3452.2747 -3653.7976 3452.521 -3654.1111 3452.8113 C
-3653.1763 3452.3672 -3653.6487 3452.4624 -3653.0313 3451.6316 C
-3652.8889 3452.0032 L
-3652.6785 3451.667 -3652.6609 3451.49 -3652.1882 3451.3943 C
-3652.5759 3451.7124 -3651.8865 3451.959 -3652.3208 3452.3799 C
-3651.3289 3453.1912 -3650.8479 3451.5613 -3650.3928 3452.7471 C
-3649.9373 3451.7207 -3651.2512 3452.1775 -3650.9961 3451.9575 C
-3651.2097 3451.6223 -3650.6201 3451.1902 -3650.3088 3451.2932 C
-3649.9919 3451.3167 -3649.77 3452.6072 -3648.9729 3452.5872 C
-3649.0522 3452.5823 -3649.0576 3452.6604 -3649.1367 3452.6553 C
-3648.8384 3452.917 -3648.5522 3452.3008 -3648.1863 3452.7263 C
-3647.9812 3452.105 -3647.7112 3452.7615 -3647.6521 3451.9702 C
-3648.3833 3452.1536 L
-3647.9688 3451.9463 -3647.5801 3451.02 -3646.8972 3451.4695 C
-3646.9504 3451.6287 -3647.1536 3451.8391 -3647.2932 3451.9558 C
-3647.0935 3452.1895 -3646.9087 3451.8015 -3646.7017 3452.0413 C
-3646.7607 3452.8335 -3647.5903 3452.2134 -3648.0344 3452.8174 C
-3647.8201 3453.1519 -3647.1943 3452.2439 -3647.4175 3453.1016 c
-3647.0967 3452.0112 -3646.6321 3453.24 -3646.0923 3452.4063 C
-3646.1279 3452.8806 L
-3646.0425 3452.8064 -3645.8655 3452.5823 -3645.7083 3452.5942 C
-3645.9929 3453.2095 L
-3645.5559 3452.6848 -3645.1504 3453.6692 -3644.7312 3453.3831 C
-3645.6089 3453.3975 -3644.9282 3452.8113 -3645.2993 3452.4646 C
-3644.2168 3451.8296 -3644.6768 3453.7063 -3643.4648 3453.4783 C
-3643.6289 3453.5454 -3644.0808 3453.1936 -3643.8242 3452.9734 C
-3643.5935 3453.0713 -3643.2888 3453.2534 -3643.1472 3453.5032 C
-3642.3442 3453.4038 -3643.2705 3453.0144 -3642.9287 3452.7224 C
-3642.6553 3453.3008 -3642.5344 3452.4871 -3642.1824 3452.3022 C
-3642.1799 3452.7847 L
-3641.2649 3453.0942 -3641.9373 3451.7791 -3641.1135 3452.1536 C
-3641.4617 3452.8223 L
-3641.0322 3452.6494 L
-3641.1208 3453.1982 L
-3640.6536 3452.7913 -3640.5081 3452.896 -3640.0503 3453.0503 C
-3640.1567 3452.7112 -3639.9905 3452.1753 -3639.5852 3452.1599 C
-3639.3088 3452.4463 -3639.74 3452.6184 -3639.1655 3452.5496 C
-3639.2952 3452.8511 -3639.4373 3453.23 -3639.6873 3452.7864 C
-3639.7129 3452.9436 -3639.8152 3453.0884 -3639.8416 3453.2444 C
-3639.5439 3453.5735 -3639.0935 3453.3191 -3638.8855 3453.3142 C
-3638.9656 3453.2964 -3639.0613 3453.2703 -3639.1104 3453.2024 C
-3638.2776 3452.5332 L
-3638.1465 3452.7144 -3638.2505 3452.8599 -3638.3535 3453.0032 C
-3638.1848 3452.9502 -3638.0681 3452.7283 -3637.8201 3452.6873 C
-3637.8843 3453.0791 -3637.8689 3453.4839 -3638.22 3453.6687 C
-3637.4265 3453.2334 L
-3637.3735 3453.4038 -3637.0193 3453.7024 -3637.1223 3453.8462 C
-3636.6824 3454.0767 -3636.0432 3453.0852 -3635.46 3453.3894 C
-3635.4297 3453.3135 -3635.3689 3453.2407 -3635.2449 3453.1848 C
-3634.6968 3453.2732 -3634.2112 3453.7544 -3633.5615 3453.2173 C
-3633.1929 3453.9199 L
-3632.6841 3453.7603 -3633.6919 3453.0342 -3632.8447 3452.7693 C
-3632.2449 3452.5447 -3632.6208 3453.3687 -3632.4104 3453.5642 C
-3632.1121 3453.2102 -3631.5935 3452.4888 -3631.0425 3453.0613 C
-3631.2249 3453.1936 -3631.3679 3453.0896 -3631.5383 3453.1416 C
f
1 D
-3625.2632 3452.8303 m
-3625.3848 3452.9312 -3625.6272 3453.2439 -3625.7161 3452.959 C
-3625.5776 3452.4063 -3625.4705 3452.6707 -3625.2632 3452.8303 C
f
-3615.7241 3451.6692 m
-3615.8145 3451.8279 -3615.9543 3451.7493 -3616.1121 3451.5667 C
-3615.9976 3451.5271 -3615.8679 3451.5447 -3615.7241 3451.6692 C
f
-3589.1511 3448.3096 m
-3589.1563 3448.3174 -3589.1599 3448.3232 -3589.1641 3448.3333 C
-3589.4353 3448.1453 -3589.3391 3448.22 -3589.1511 3448.3096 C
f
0 D
-3588.5879 3448.5193 m
-3588.5313 3448.4524 -3588.5352 3448.3848 -3588.5591 3448.3174 C
-3588.5984 3448.4392 -3588.7249 3448.448 -3588.8689 3448.4136 C
-3588.8289 3448.5398 -3588.7561 3448.6272 -3588.5879 3448.5193 C
f
1 D
-3649.0713 3448.709 m
-3648.9617 3448.8352 L
-3649.2092 3448.9744 -3649.1399 3448.8484 -3649.0713 3448.709 C
f
*U
0 D
-3616.8057 3452.3286 m
-3616.8401 3452.2471 -3616.8496 3452.1575 -3616.8577 3452.0667 C
-3616.9055 3452.1475 -3616.9065 3452.2415 -3616.8057 3452.3286 C
f
-3635.4409 3453.3953 m
-3635.4473 3453.3911 -3635.4536 3453.3926 -3635.46 3453.3894 C
-3635.4705 3453.4182 -3635.4761 3453.448 -3635.4792 3453.4768 C
-3635.4409 3453.3953 L
f
-3597.3123 3452.6096 m
-3597.4282 3452.5398 -3597.4929 3452.4524 -3597.5359 3452.3606 C
-3597.5422 3452.4783 -3597.4895 3452.5784 -3597.3123 3452.6096 C
f
-3585.6033 3447.6992 m
-3585.9641 3447.8247 L
-3585.7896 3447.8008 -3585.7273 3447.9063 -3585.6392 3447.9832 C
-3585.6472 3447.8704 -3585.7161 3447.7073 -3585.6033 3447.6992 C
f
-3582.4719 3450.6848 m
-3582.4192 3450.6255 -3582.3601 3450.6782 -3582.3081 3450.6184 C
-3582.3225 3450.3943 L
-3582.5471 3450.4087 -3582.7041 3450.5896 -3582.4719 3450.6848 C
f
-3585.2693 3449.3022 m
-3585.2407 3449.7083 -3585.0144 3449.5703 -3584.7617 3449.4951 C
-3584.7769 3449.4966 -3584.7913 3449.5 -3584.8064 3449.4951 C
-3584.7319 3448.9282 -3585.0012 3449.1152 -3585.2693 3449.3022 C
f
-3584.7031 3449.4812 m
-3584.6252 3449.4624 -3584.5457 3449.4524 -3584.4695 3449.4712 C
-3584.4399 3449.2439 -3584.5642 3449.4236 -3584.7031 3449.4812 C
f
-3587.8735 3448.25 m
-3587.7537 3448.3542 -3587.7983 3447.7312 -3587.7305 3447.896 C
-3587.5967 3447.3799 -3588.5295 3448.521 -3587.8735 3448.25 C
f
-3585.0647 3450.6392 m
-3585.1553 3450.1382 L
-3585.2969 3450.5422 L
-3585.0647 3450.6392 L
f
-3587.0601 3450.271 m
-3586.6563 3450.4104 L
-3586.6624 3450.3264 -3586.6111 3450.2776 -3586.5481 3450.24 C
-3586.7969 3450.2224 -3587.0696 3450.1233 -3587.0601 3450.271 C
f
-3586.5481 3450.24 m
-3586.4185 3450.2493 -3586.2952 3450.2383 -3586.2231 3450.1563 C
-3586.2932 3450.1614 -3586.4441 3450.1782 -3586.5481 3450.24 C
f
-3585.6167 3450.7896 m
-3585.7361 3450.6851 L
-3586.0212 3450.6487 L
-3585.6167 3450.7896 L
f
-3591.4009 3450.1753 m
-3591.8416 3450.3184 L
-3591.8865 3450.49 -3591.7664 3450.5952 -3591.6023 3450.5271 C
-3591.4968 3450.4072 -3591.3333 3450.3408 -3591.4009 3450.1753 C
f
-3590.0681 3451.5471 m
-3590.1873 3451.4431 -3590.1953 3451.3311 -3590.2625 3451.1663 C
-3590.2759 3451.7871 L
-3590.0681 3451.5471 L
f
-3591.3533 3451.6919 m
-3591.3972 3451.8643 -3591.9929 3452.1863 -3591.4343 3452.1475 C
-3591.3896 3451.9768 -3590.9482 3451.8335 -3591.3533 3451.6919 C
f
-3597.9937 3450.9063 m
-3597.8816 3450.8982 L
-3597.8977 3449.8799 L
-3597.9937 3450.9063 L
f
-3603.8464 3453.3433 m
-3603.3242 3453.5872 -3603.7224 3452.7144 -3603.2505 3453.0193 C
-3603.1279 3452.7783 -3603.6362 3452.7703 -3603.5105 3452.5623 C
-3603.8257 3452.8167 -3603.9912 3452.6736 -3603.8464 3453.3433 C
f
-3603.5105 3452.5623 m
-3603.46 3452.5222 -3603.4065 3452.4734 -3603.3496 3452.4082 C
-3603.4409 3452.4712 -3603.4839 3452.52 -3603.5105 3452.5623 C
f
-3669.5745 3448.1924 m
-3669.9104 3447.98 L
-3669.6936 3448.3223 L
-3669.5745 3448.1924 L
f
-3670.2192 3448.948 m
-3670.2983 3448.2991 L
-3670.5 3448.8862 L
-3670.4241 3448.8574 -3670.2769 3448.8015 -3670.2192 3448.948 C
f
-3624.3303 3454.1375 m
-3624.3047 3453.9812 L
-3624.3567 3453.8123 -3624.4353 3453.8 -3624.5928 3453.7732 C
-3624.3303 3454.1375 L
f
-3628.8848 3453.6519 m
-3628.8064 3453.6653 L
-3628.9529 3453.0784 L
-3628.8848 3453.6519 L
f
-3632.7073 3454.4004 m
-3632.5513 3454.4253 -3632.3679 3454.2942 -3632.2112 3454.3196 C
-3632.5513 3454.4253 -3632.7495 3453.6692 -3632.7073 3454.4004 C
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
1 Ap
0 J 0 j 1 w 10 M []0 d0 XR
-7515.4036 7327 m
-7542.5408 7327 L
-7542.5408 7306.9818 L
-7515.4036 7306.9818 L
-7515.4036 7327 L
n
0 Ap
0 O
0.518791 0.330999 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7543 7327 m
-7515 7327 L
-7515 7320.2663 L
-7543 7320.2663 L
-7543 7327 L
f
0.203525 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7543 7320.2687 m
-7515 7320.2687 L
-7515 7319.1079 L
-7543 7319.1079 L
-7543 7320.2687 L
f
0.371405 0.218784 0.109773 0 0.627451 0.701961 0.792157 Xa
-7515 7319.1079 m
-7515 7306.9818 L
-7543 7306.9818 L
-7543 7319.1079 L
-7515 7319.1079 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 10 M []0 d0 XR
-7543 7327 m
-7515 7327 L
-7515 7299 L
-7543 7299 L
-7543 7327 L
n
u
q
-7515.4592 7303.0187 m
-7539.0369 7303.0187 l
-7519.0187 7323.0369 l
-7515.4592 7323.0369 l
-7515.4592 7303.0187 l
h
W
n
0 O
0.518791 0.330999 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7515 7303.0187 m
-7543 7303.0187 L
-7543 7309.7523 L
-7515 7309.7523 L
-7515 7303.0187 L
f
0.203525 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7515 7309.7499 m
-7543 7309.7499 L
-7543 7310.9108 L
-7515 7310.9108 L
-7515 7309.7499 L
f
0.371405 0.218784 0.109773 0 0.627451 0.701961 0.792157 Xa
-7543 7310.9108 m
-7543 7323.0369 L
-7515 7323.0369 L
-7515 7310.9108 L
-7543 7310.9108 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
-7539.0369 7326.5964 m
-7539.0369 7303.0187 l
-7519.0187 7323.0369 l
-7519.0187 7326.5964 l
-7539.0369 7326.5964 l
h
W
n
0 O
0.518791 0.330999 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7539.0369 7299 m
-7539.0369 7327 L
-7532.3032 7327 L
-7532.3032 7299 L
-7539.0369 7299 L
f
0.203525 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7532.3056 7299 m
-7532.3056 7327 L
-7531.1448 7327 L
-7531.1448 7299 L
-7532.3056 7299 L
f
0.371405 0.218784 0.109773 0 0.627451 0.701961 0.792157 Xa
-7531.1448 7327 m
-7519.0187 7327 L
-7519.0187 7299 L
-7531.1448 7299 L
-7531.1448 7327 L
f
Q
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
0 J 0 j 1 w 10 M []0 d0 XR
-7543 7327 m
-7515 7327 L
-7515 7299 L
-7543 7299 L
-7543 7327 L
n
u
q
-7518.9631 7326.5408 m
-7518.9631 7322.9813 l
-7538.9813 7302.9631 l
-7538.9813 7326.5408 l
-7518.9631 7326.5408 l
h
W
n
0 O
0.518791 0.330999 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7518.9631 7327 m
-7518.9631 7299 L
-7525.6968 7299 L
-7525.6968 7327 L
-7518.9631 7327 L
f
0.203525 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7525.6944 7327 m
-7525.6944 7299 L
-7526.8552 7299 L
-7526.8552 7327 L
-7525.6944 7327 L
f
0.371405 0.218784 0.109773 0 0.627451 0.701961 0.792157 Xa
-7526.8552 7299 m
-7538.9813 7299 L
-7538.9813 7327 L
-7526.8552 7327 L
-7526.8552 7299 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
-7515.4036 7322.9813 m
-7518.9631 7322.9813 l
-7538.9813 7302.9631 l
-7515.4036 7302.9631 l
-7515.4036 7322.9813 l
h
W
n
0 O
0.518791 0.330999 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7543 7322.9813 m
-7515 7322.9813 L
-7515 7316.2477 L
-7543 7316.2477 L
-7543 7322.9813 L
f
0.203525 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7543 7316.2501 m
-7515 7316.2501 L
-7515 7315.0892 L
-7543 7315.0892 L
-7543 7316.2501 L
f
0.371405 0.218784 0.109773 0 0.627451 0.701961 0.792157 Xa
-7515 7315.0892 m
-7515 7302.9631 L
-7543 7302.9631 L
-7543 7315.0892 L
-7515 7315.0892 L
f
Q
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Calligraphi) -
(c Brush Tool/ 10 pt. Round/ Adobe Calligraphic Brush Tool/ 3 p) -
(t. Oval/ Adobe Calligraphic Brush Tool/ Touch Calligraphic Bru) -
(sh/ Adobe ArtOnPath Brush Tool/ Charcoal - Feather/ Adobe Patt) -
(ernOnPath Brush Tool/ Silver/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal - Feather)
(1 / Unnamed 6/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt. Round)
(1 10 10 100 100 0 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Oval)
(1 3 3 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 0 24 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
(Black)
Pc
0 0.993286 1 0 1 0 0 Xa
(RGB Red)
Pc
0.06183 0 0.965484 0 1 1 0 Xa
(RGB Yellow)
Pc
0.626581 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.51809 0 0.125673 0 0 1 1 Xa
(RGB Cyan)
Pc
0.883848 0.768521 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.271061 0.816037 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.168917 0.979614 0.927855 0.067292 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.00296 0.992767 0.972076 0.000885 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.79913 0.96704 0.000122 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0.000214 0.500877 0.986084 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.348516 0.872618 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.045472 0 0.932189 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188754 0 0.984253 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.500328 0.001617 0.993042 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.746639 0 0.997681 0.000092 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.864073 0.176333 1 0.038239 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.903288 0.334081 0.988586 0.260441 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.762295 0 0.749203 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.784085 0.09073 0.457221 0.000275 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.6972 0.14786 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.874876 0.526604 0 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.991974 0.964538 0.03418 0.004913 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.261723 0.244419 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.74554 0.984558 0.009827 0.002289 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.494484 0.992584 0.013214 0.001068 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.348486 1 0.371649 0.108034 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.119265 1 0.492561 0.008789 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.970825 0.20383 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.228824 0.273991 0.399542 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.398596 0.428931 0.525536 0.068055 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.504417 0.530724 0.609705 0.236027 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.576074 0.60415 0.637018 0.419196 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.226596 0.383764 0.6365 0.01181 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.315404 0.491493 0.741085 0.09897 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.362432 0.574304 0.839963 0.226139 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.391638 0.640528 0.932921 0.355779 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415747 0.70016 0.970611 0.491493 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.477089 0.734707 0.837186 0.681422 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black)
Pc
Bb
2 (Gold Dust) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gold Dust)
Pc
Bb
2 (Blue Sky) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Blue Sky)
Pc
(Jive) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Jive)
Pc
0.558099 0 0.199985 0 0.396078 0.784314 0.815686 Xa
(C=56 M=0 Y=20 K=0)
Pc
0.51107 0.430945 0 0 0.513725 0.545098 0.772549 Xa
(C=51 M=43 Y=0 K=0)
Pc
0.264256 0.41297 0 0 0.729412 0.607843 0.788235 Xa
(C=26 M=41 Y=0 K=0)
Pc
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.72607 0.666682 0.65243 0.782345 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.694331 0.632349 0.621027 0.583551 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.653956 0.580224 0.5682 0.366552 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.597711 0.511833 0.507713 0.201297 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.516197 0.432044 0.432044 0.075471 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.426154 0.347417 0.353185 0.009857 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.30695 0.241886 0.247776 0 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.084993 0.061036 0.066285 0 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.037079 0.024628 0.024628 0 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
*u
0 O
0 g
0 J 0 j 1 w 10 M []0 d0 XR
1219.8462 -1255.4293 m
819.9163 -1255.4293 419.9864 -1255.4293 19.9513 -1255.4293 C
19.9513 -970.8996 19.9513 -686.3376 19.9513 -401.6186 C
419.8461 -401.6186 819.8462 -401.6186 1219.8462 -401.6186 C
1219.8462 -686.1333 1219.8462 -970.7652 1219.8462 -1255.4293 C
f
1 D
186.0601 -987.467 m
186.6018 -987.458 187.1435 -987.449 187.6852 -987.4399 C
188.0945 -988.8534 188.5232 -990.2616 188.9102 -991.6812 C
203.9525 -1046.8545 230.0521 -1096.147 267.2807 -1139.585 C
293.5419 -1170.2264 323.8226 -1196.5367 355.0984 -1221.8043 C
362.0382 -1227.4109 368.9247 -1233.0834 375.8358 -1238.7256 C
376.3755 -1238.5774 376.9153 -1238.4291 377.455 -1238.2809 C
377.455 -1222.0396 376.7855 -1205.7628 377.6421 -1189.5668 C
378.5093 -1173.1713 383.044 -1157.4116 389.3133 -1141.3514 C
418.541 -1175.0378 453.6954 -1198.1138 495.666 -1210.5559 C
495.6951 -1210.3987 495.9042 -1209.9055 495.849 -1209.4438 c
495.711 -1208.2905 495.4636 -1207.1495 495.2417 -1206.0071 C
491.6857 -1187.7052 487.5777 -1169.467 488.02 -1150.6534 C
488.4947 -1130.4681 491.1721 -1110.7413 501.9824 -1093.1048 C
538.4138 -1033.6681 601.8195 -1006.4569 670.1276 -1020.3611 C
711.7724 -1028.8381 742.3582 -1051.2848 760.8479 -1089.8378 C
777.7681 -1125.1181 784.6961 -1162.4072 783.2052 -1201.3209 C
782.7483 -1213.2447 781.2797 -1225.1298 780.2384 -1237.4578 C
781.7527 -1237.2643 783.0379 -1237.2181 784.2641 -1236.9252 C
796.0778 -1234.1033 807.926 -1231.4108 819.6811 -1228.3606 C
899.1205 -1207.7477 971.7288 -1173.2788 1034.3427 -1119.737 C
1060.2633 -1097.5721 1084.5102 -1073.4219 1109.0172 -1049.6575 C
1113.5536 -1045.2586 1116.4348 -1038.67 1118.7594 -1032.5874 C
1122.1413 -1023.7382 1120.8256 -1014.5798 1118.1025 -1005.5998 C
1117.6391 -1004.0721 1117.8463 -1001.435 1118.8505 -1000.5017 C
1140.4715 -980.4098 1152.7599 -955.1654 1160.1057 -927.0662 C
1160.7314 -924.6724 1162.4337 -922.43 1164.0427 -920.4476 C
1169.1772 -914.1219 1175.3125 -908.4618 1179.6168 -901.6341 C
1199.0758 -870.7674 1210.343 -836.9904 1215.2728 -800.8123 C
1218.7046 -775.6289 1210.6015 -756.9914 1189.2108 -742.8733 C
1161.5102 -724.5907 1131.6544 -710.9473 1101.1558 -698.3678 C
1098.6827 -697.3478 1095.9411 -695.0583 1094.9511 -692.6811 C
1089.4565 -679.4867 1084.4067 -666.1046 1079.3802 -652.7208 C
1078.7948 -651.1621 1078.8697 -649.0684 1079.364 -647.4433 C
1081.0908 -641.7651 1080.6734 -636.4859 1078.3006 -630.9754 C
1072.1508 -616.6936 1063.2492 -604.2656 1052.7729 -593.013 C
1010.1619 -547.245 959.4973 -512.0785 904.4722 -483.2473 C
827.3864 -442.8573 744.2699 -423.3683 658.1291 -415.6333 C
609.799 -411.2934 561.3457 -409.8649 512.8147 -411.2972 C
461.0781 -412.8241 409.6966 -417.7871 359.3011 -429.7198 C
322.7396 -438.3768 286.6354 -448.9612 250.2985 -458.5777 C
247.6418 -459.2808 244.7084 -459.5377 241.9767 -459.2664 C
214.8111 -456.568 187.7086 -453.0522 160.4928 -451.0936 C
133.8459 -449.1761 107.1795 -450.3577 80.9857 -456.4391 c
64.4187 -460.2855 48.6876 -466.0176 36.7464 -478.9603 c
35.287 -480.5422 34.1433 -482.8041 33.749 -484.9179 c
30.8131 -500.6562 32.4311 -516.0785 37.4717 -531.2051 C
45.4432 -555.1266 59.8963 -574.9522 77.0293 -592.9478 C
85.6159 -601.9667 94.897 -610.3244 104.283 -619.3855 C
103.0546 -620.4483 101.7346 -621.4659 100.5572 -622.6281 c
88.1051 -634.9195 75.558 -647.1182 63.2921 -659.5932 c
57.5775 -665.4052 52.3374 -671.6945 47.0387 -677.9011 c
43.3815 -682.185 41.3372 -686.9777 41.8543 -692.9511 c
44.0793 -718.6525 44.6996 -744.5698 48.3655 -770.0544 c
57.4636 -833.3032 77.3645 -893.3566 105.9455 -950.4694 C
124.7848 -988.1156 146.3456 -1024.0414 175.2275 -1055.0755 C
177.1618 -1057.1539 179.109 -1059.2202 181.238 -1061.4926 C
182.8818 -1036.258 184.471 -1011.8625 186.0601 -987.467 C
f
*U
*u
0 D
1 g
186.0601 -987.467 m
184.471 -1011.8625 182.8818 -1036.258 181.238 -1061.4926 C
179.109 -1059.2202 177.1618 -1057.1539 175.2275 -1055.0755 C
146.3456 -1024.0414 124.7848 -988.1156 105.9455 -950.4694 C
77.3645 -893.3566 57.4636 -833.3032 48.3655 -770.0544 c
44.6996 -744.5698 44.0793 -718.6525 41.8543 -692.9511 c
41.3372 -686.9777 43.3815 -682.185 47.0387 -677.9011 c
52.3374 -671.6945 57.5775 -665.4052 63.2921 -659.5932 c
75.558 -647.1182 88.1051 -634.9195 100.5572 -622.6281 c
101.7346 -621.4659 103.0546 -620.4483 104.283 -619.3855 C
94.897 -610.3244 85.6159 -601.9667 77.0293 -592.9478 C
59.8963 -574.9522 45.4432 -555.1266 37.4717 -531.2051 C
32.4311 -516.0785 30.8131 -500.6562 33.749 -484.9179 c
34.1433 -482.8041 35.287 -480.5422 36.7464 -478.9603 c
48.6876 -466.0176 64.4187 -460.2855 80.9857 -456.4391 c
107.1795 -450.3577 133.8459 -449.1761 160.4928 -451.0936 C
187.7086 -453.0522 214.8111 -456.568 241.9767 -459.2664 C
244.7084 -459.5377 247.6418 -459.2808 250.2985 -458.5777 C
286.6354 -448.9612 322.7396 -438.3768 359.3011 -429.7198 C
409.6966 -417.7871 461.0781 -412.8241 512.8147 -411.2972 C
561.3457 -409.8649 609.799 -411.2934 658.1291 -415.6333 C
744.2699 -423.3683 827.3864 -442.8573 904.4722 -483.2473 C
959.4973 -512.0785 1010.1619 -547.245 1052.7729 -593.013 C
1063.2492 -604.2656 1072.1508 -616.6936 1078.3006 -630.9754 C
1080.6734 -636.4859 1081.0908 -641.7651 1079.364 -647.4433 C
1078.8697 -649.0684 1078.7948 -651.1621 1079.3802 -652.7208 C
1084.4067 -666.1046 1089.4565 -679.4867 1094.9511 -692.6811 C
1095.9411 -695.0583 1098.6827 -697.3478 1101.1558 -698.3678 C
1131.6544 -710.9473 1161.5102 -724.5907 1189.2108 -742.8733 C
1210.6015 -756.9914 1218.7046 -775.6289 1215.2728 -800.8123 C
1210.343 -836.9904 1199.0758 -870.7674 1179.6168 -901.6341 C
1175.3125 -908.4618 1169.1772 -914.1219 1164.0427 -920.4476 C
1162.4337 -922.43 1160.7314 -924.6724 1160.1057 -927.0662 C
1152.7599 -955.1654 1140.4715 -980.4098 1118.8505 -1000.5017 C
1117.8463 -1001.435 1117.6391 -1004.0721 1118.1025 -1005.5998 C
1120.8256 -1014.5798 1122.1413 -1023.7382 1118.7594 -1032.5874 C
1116.4348 -1038.67 1113.5536 -1045.2586 1109.0172 -1049.6575 C
1084.5102 -1073.4219 1060.2633 -1097.5721 1034.3427 -1119.737 C
971.7288 -1173.2788 899.1205 -1207.7477 819.6811 -1228.3606 C
807.926 -1231.4108 796.0778 -1234.1033 784.2641 -1236.9252 C
783.0379 -1237.2181 781.7527 -1237.2643 780.2384 -1237.4578 C
781.2797 -1225.1298 782.7483 -1213.2447 783.2052 -1201.3209 C
784.6961 -1162.4072 777.7681 -1125.1181 760.8479 -1089.8378 C
742.3582 -1051.2848 711.7724 -1028.8381 670.1276 -1020.3611 C
601.8195 -1006.4569 538.4138 -1033.6681 501.9824 -1093.1048 C
491.1721 -1110.7413 488.4947 -1130.4681 488.02 -1150.6534 C
487.5777 -1169.467 491.6857 -1187.7052 495.2417 -1206.0071 C
495.4636 -1207.1495 495.711 -1208.2905 495.849 -1209.4438 c
495.9042 -1209.9055 495.6951 -1210.3987 495.666 -1210.5559 C
453.6954 -1198.1138 418.541 -1175.0378 389.3133 -1141.3514 C
383.044 -1157.4116 378.5093 -1173.1713 377.6421 -1189.5668 C
376.7855 -1205.7628 377.455 -1222.0396 377.455 -1238.2809 C
376.9153 -1238.4291 376.3755 -1238.5774 375.8358 -1238.7256 C
368.9247 -1233.0834 362.0382 -1227.4109 355.0984 -1221.8043 C
323.8226 -1196.5367 293.5419 -1170.2264 267.2807 -1139.585 C
230.0521 -1096.147 203.9525 -1046.8545 188.9102 -991.6812 C
188.5232 -990.2616 188.0945 -988.8534 187.6852 -987.4399 C
187.1435 -987.449 186.6018 -987.458 186.0601 -987.467 C
f
1 D
794.9169 -1223.9888 m
795.9242 -1224.1464 796.4388 -1224.3754 796.874 -1224.2718 C
800.9149 -1223.3085 804.9431 -1222.2919 808.9732 -1221.2836 C
870.3595 -1205.9244 927.8236 -1181.5383 980.8924 -1146.9115 C
1027.3537 -1116.5959 1065.9255 -1077.4346 1103.9915 -1037.6827 C
1110.0106 -1031.397 1110.5162 -1023.6219 1109.3009 -1015.6921 C
1108.6284 -1011.3036 1107.2221 -1006.9372 1105.5022 -1002.8309 C
1104.3164 -999.9999 1104.6574 -998.3389 1106.9062 -996.4147 C
1128.3849 -978.0356 1141.6316 -954.5865 1148.8292 -927.5301 C
1150.759 -920.2764 1153.6148 -913.8761 1159.6936 -909.0072 C
1162.4926 -906.7652 1164.7065 -903.6363 1166.7288 -900.6048 C
1189.2625 -866.8272 1202.2797 -829.718 1205.4947 -789.2016 C
1206.6289 -774.9087 1201.7476 -763.0973 1189.9865 -754.9571 C
1178.51 -747.0138 1166.8492 -739.1275 1154.4917 -732.7149 C
1135.7581 -722.9939 1116.3835 -714.5006 1097.2109 -705.6379 C
1091.6853 -703.0837 1087.2031 -699.6384 1084.9123 -693.8884 C
1080.113 -681.8415 1075.0318 -669.8844 1070.8603 -657.6204 C
1069.0909 -652.4185 1069.4536 -646.5164 1068.5984 -640.971 c
1067.8734 -636.2699 1067.9912 -630.8763 1065.637 -627.0963 C
1058.983 -616.4118 1052.3829 -605.316 1043.7581 -596.2984 C
990.886 -541.0178 928.486 -499.4279 858.1701 -469.5801 C
777.1577 -435.1919 691.9397 -421.1781 604.6137 -418.8875 c
562.3366 -417.7786 519.9798 -418.7401 477.681 -419.7145 c
440.3179 -420.5752 403.2775 -425.4385 366.984 -434.3763 C
327.7569 -444.0366 288.8281 -454.9061 249.739 -465.1326 C
246.946 -465.8633 243.8492 -466.1243 240.9886 -465.7905 C
224.6235 -463.881 208.3354 -460.6096 191.9303 -459.9011 C
163.6644 -458.6804 135.3263 -458.5222 107.0291 -458.8446 C
87.832 -459.0634 69.5042 -463.8553 52.6986 -473.6764 C
44.764 -478.3133 40.9496 -484.9093 40.9326 -494.1552 c
40.9059 -508.6211 44.7702 -522.0471 50.577 -535.1165 C
59.8184 -555.9164 74.3575 -572.7668 90.2493 -588.58 C
99.1843 -597.4708 108.4814 -605.9977 117.7909 -614.8556 C
117.2531 -615.4957 116.678 -616.2869 115.998 -616.9743 C
95.7188 -637.47 75.466 -657.9922 55.0926 -678.3939 C
52.6736 -680.8163 51.652 -683.2389 51.5783 -686.6835 c
50.3728 -743.0359 60.347 -797.671 76.6537 -851.3419 C
96.4349 -916.4487 127.0634 -976.1869 166.1103 -1031.7432 C
166.5918 -1032.4282 167.3485 -1032.9199 168.6281 -1034.1051 C
169.6957 -998.4619 175.4788 -964.5415 185.4636 -930.6477 C
186.2843 -931.6086 186.4585 -931.7182 186.4826 -931.8543 C
187.9889 -940.3639 189.4064 -948.89 190.9904 -957.385 C
202.2334 -1017.6829 225.8927 -1072.3786 264.0165 -1120.7216 C
291.3537 -1155.3866 324.1276 -1184.3826 357.8681 -1212.438 C
358.4064 -1212.8855 359.207 -1213.0178 359.8612 -1213.2873 C
362.754 -1197.1942 365.3361 -1181.4574 368.4611 -1165.8293 C
371.5929 -1150.1674 376.7164 -1135.1664 384.9249 -1121.0361 C
390.1371 -1126.9843 394.8808 -1132.5568 399.7936 -1137.9758 C
418.1966 -1158.2743 439.1418 -1175.3694 463.6047 -1187.904 C
471.8666 -1192.1373 477.0936 -1188.5431 476.4988 -1179.3754 C
476.4342 -1178.3799 476.2348 -1177.3939 476.1375 -1176.3995 C
474.0311 -1154.8624 474.0569 -1133.3426 480.5216 -1112.5299 C
491.2886 -1077.8659 514.1684 -1051.8801 543.9371 -1032.7588 C
597.499 -998.3542 654.1482 -997.9765 711.3028 -1023.1118 C
740.7669 -1036.0695 759.2628 -1060.5364 772.788 -1088.9143 c
787.7945 -1120.4 794.0323 -1153.9292 794.8715 -1188.5765 C
795.1574 -1200.3809 794.9169 -1212.1981 794.9169 -1223.9888 C
f
*U
*u
0 D
0 g
794.9169 -1223.9888 m
794.9169 -1212.1981 795.1574 -1200.3809 794.8715 -1188.5765 C
794.0323 -1153.9292 787.7945 -1120.4 772.788 -1088.9143 c
759.2628 -1060.5364 740.7669 -1036.0695 711.3028 -1023.1118 C
654.1482 -997.9765 597.499 -998.3542 543.9371 -1032.7588 C
514.1684 -1051.8801 491.2886 -1077.8659 480.5216 -1112.5299 C
474.0569 -1133.3426 474.0311 -1154.8624 476.1375 -1176.3995 C
476.2348 -1177.3939 476.4342 -1178.3799 476.4988 -1179.3754 C
477.0936 -1188.5431 471.8666 -1192.1373 463.6047 -1187.904 C
439.1418 -1175.3694 418.1966 -1158.2743 399.7936 -1137.9758 C
394.8808 -1132.5568 390.1371 -1126.9843 384.9249 -1121.0361 C
376.7164 -1135.1664 371.5929 -1150.1674 368.4611 -1165.8293 C
365.3361 -1181.4574 362.754 -1197.1942 359.8612 -1213.2873 C
359.207 -1213.0178 358.4064 -1212.8855 357.8681 -1212.438 C
324.1276 -1184.3826 291.3537 -1155.3866 264.0165 -1120.7216 C
225.8927 -1072.3786 202.2334 -1017.6829 190.9904 -957.385 C
189.4064 -948.89 187.9889 -940.3639 186.4826 -931.8543 C
186.4585 -931.7182 186.2843 -931.6086 185.4636 -930.6477 C
175.4788 -964.5415 169.6957 -998.4619 168.6281 -1034.1051 C
167.3485 -1032.9199 166.5918 -1032.4282 166.1103 -1031.7432 C
127.0634 -976.1869 96.4349 -916.4487 76.6537 -851.3419 C
60.347 -797.671 50.3728 -743.0359 51.5783 -686.6835 c
51.652 -683.2389 52.6736 -680.8163 55.0926 -678.3939 C
75.466 -657.9922 95.7188 -637.47 115.998 -616.9743 C
116.678 -616.2869 117.2531 -615.4957 117.7909 -614.8556 C
108.4814 -605.9977 99.1843 -597.4708 90.2493 -588.58 C
74.3575 -572.7668 59.8184 -555.9164 50.577 -535.1165 C
44.7702 -522.0471 40.9059 -508.6211 40.9326 -494.1552 c
40.9496 -484.9093 44.764 -478.3133 52.6986 -473.6764 C
69.5042 -463.8553 87.832 -459.0634 107.0291 -458.8446 C
135.3263 -458.5222 163.6644 -458.6804 191.9303 -459.9011 C
208.3354 -460.6096 224.6235 -463.881 240.9886 -465.7905 C
243.8492 -466.1243 246.946 -465.8633 249.739 -465.1326 C
288.8281 -454.9061 327.7569 -444.0366 366.984 -434.3763 C
403.2775 -425.4385 440.3179 -420.5752 477.681 -419.7145 c
519.9798 -418.7401 562.3366 -417.7786 604.6137 -418.8875 c
691.9397 -421.1781 777.1577 -435.1919 858.1701 -469.5801 C
928.486 -499.4279 990.886 -541.0178 1043.7581 -596.2984 C
1052.3829 -605.316 1058.983 -616.4118 1065.637 -627.0963 C
1067.9912 -630.8763 1067.8734 -636.2699 1068.5984 -640.971 c
1069.4536 -646.5164 1069.0909 -652.4185 1070.8603 -657.6204 C
1075.0318 -669.8844 1080.113 -681.8415 1084.9123 -693.8884 C
1087.2031 -699.6384 1091.6853 -703.0837 1097.2109 -705.6379 C
1116.3835 -714.5006 1135.7581 -722.9939 1154.4917 -732.7149 C
1166.8492 -739.1275 1178.51 -747.0138 1189.9865 -754.9571 C
1201.7476 -763.0973 1206.6289 -774.9087 1205.4947 -789.2016 C
1202.2797 -829.718 1189.2625 -866.8272 1166.7288 -900.6048 C
1164.7065 -903.6363 1162.4926 -906.7652 1159.6936 -909.0072 C
1153.6148 -913.8761 1150.759 -920.2764 1148.8292 -927.5301 C
1141.6316 -954.5865 1128.3849 -978.0356 1106.9062 -996.4147 C
1104.6574 -998.3389 1104.3164 -999.9999 1105.5022 -1002.8309 C
1107.2221 -1006.9372 1108.6284 -1011.3036 1109.3009 -1015.6921 C
1110.5162 -1023.6219 1110.0106 -1031.397 1103.9915 -1037.6827 C
1065.9255 -1077.4346 1027.3537 -1116.5959 980.8924 -1146.9115 C
927.8236 -1181.5383 870.3595 -1205.9244 808.9732 -1221.2836 C
804.9431 -1222.2919 800.9149 -1223.3085 796.874 -1224.2718 C
796.4388 -1224.3754 795.9242 -1224.1464 794.9169 -1223.9888 C
f
1 D
399.6585 -600.2392 m
331.7427 -605.9993 268.0986 -624.1136 211.9535 -664.5196 C
213.5286 -659.7147 215.2748 -655.3937 217.5589 -651.3788 C
230.8272 -628.056 249.2601 -609.2134 270.4429 -591.6153 C
267.9301 -591.0455 266.2585 -590.5186 264.5476 -590.3018 c
250.7883 -588.5588 237.3196 -590.723 223.9221 -593.5236 c
217.8493 -594.793 217.1066 -594.3034 216.8423 -588.1176 c
216.4736 -579.4908 219.5045 -571.8794 224.2734 -564.4249 C
222.7891 -563.9893 221.7465 -563.547 220.662 -563.3857 C
206.6745 -561.3037 192.6818 -559.2569 178.6887 -557.2121 c
172.6877 -556.3352 166.2639 -550.2083 165.0451 -544.1686 c
163.9053 -538.5201 166.1061 -533.989 172.4007 -530.2149 C
175.065 -528.6175 178.0867 -527.2534 181.1133 -526.7015 c
186.8217 -525.6607 192.6414 -524.8419 198.4324 -524.7107 C
222.3391 -524.169 245.9056 -527.6483 269.4778 -531.0857 C
282.44 -532.9758 295.2844 -536.7614 308.5878 -534.5598 C
316.3252 -533.2793 323.9991 -531.6146 331.7015 -530.1228 C
331.639 -529.6265 331.5764 -529.1303 331.5138 -528.634 C
329.9422 -528.1573 328.3913 -527.5919 326.7957 -527.217 C
300.4181 -521.0187 274.1802 -514.1104 247.616 -508.851 C
214.7141 -502.3368 181.4302 -498.6928 147.7986 -502.3513 C
134.9841 -503.7453 122.5421 -506.6071 111.4289 -513.6788 c
108.4868 -515.5509 107.2864 -517.6027 108.9154 -521.0362 c
110.8375 -525.0877 112.2272 -529.3989 114.2473 -533.3956 C
126.5578 -557.7504 144.2616 -577.7522 165.1601 -594.9493 C
173.8258 -602.0801 183.3446 -608.1742 192.6685 -614.8785 C
192.1244 -615.3083 191.393 -615.9249 190.6228 -616.4884 C
171.9417 -630.1558 152.861 -643.3164 134.7012 -657.6441 C
121.0042 -668.4507 108.4242 -680.6832 95.4824 -692.43 C
92.0806 -695.5178 90.0445 -699.3087 90.7883 -704.392 c
93.076 -720.0247 94.3086 -735.8494 97.3282 -751.3308 C
108.5035 -808.6251 133.041 -860.1366 166.4563 -907.6596 c
167.2582 -908.8 168.2195 -909.8285 169.5419 -911.4398 C
179.0309 -877.0284 195.6922 -846.7175 211.777 -816.1284 C
210.7814 -849.2864 211.1559 -882.1935 216.652 -914.8965 C
223.8492 -957.7216 238.837 -997.3214 264.346 -1032.7312 C
287.0852 -1064.2961 316.2822 -1089.3608 345.7933 -1114.1277 C
345.9823 -1114.2864 346.3933 -1114.1807 345.65 -1114.1377 C
354.3006 -1099.0184 362.7866 -1084.3695 370.9981 -1069.5683 c
371.8748 -1067.9881 371.5948 -1065.4034 371.099 -1063.4785 c
362.8 -1031.259 356.8763 -998.7294 359.093 -965.2702 C
359.695 -956.183 361.6282 -947.184 362.9504 -938.1445 C
363.4249 -938.2275 363.8994 -938.3105 364.3739 -938.3935 C
370.6025 -1003.3794 400.4512 -1055.1893 451.5999 -1095.8248 C
453.7833 -1089.956 455.4489 -1084.735 457.6304 -1079.7393 C
469.8801 -1051.688 488.6239 -1028.178 509.6939 -1006.4027 C
512.8888 -1003.1009 513.2768 -1000.6511 511.691 -996.4803 C
497.7196 -959.7343 494.5067 -921.7841 499.728 -882.9929 C
500.5482 -876.8997 501.7728 -870.861 502.8104 -864.797 C
502.4031 -864.535 501.9959 -864.2729 501.5887 -864.0108 C
497.6606 -867.5105 493.3793 -870.6909 489.8708 -874.5701 C
479.5012 -886.0352 473.2005 -899.8806 468.8265 -914.4453 C
464.2272 -929.7605 460.6955 -945.3965 456.8261 -960.3934 C
451.162 -949.5366 444.0097 -915.6908 442.9924 -897.1162 C
440.409 -849.9488 459.3623 -810.7143 488.7431 -774.6076 C
486.2891 -774.6076 485.0995 -774.3601 484.0544 -774.6442 C
463.6995 -780.1771 443.1365 -785.0763 423.0867 -791.5605 C
404.9934 -797.4119 388.4576 -806.7879 372.6893 -817.597 C
347.9474 -834.5574 333.5761 -858.8677 322.5898 -885.7959 C
321.8304 -887.6573 320.9602 -889.4736 319.6887 -892.3272 C
311.9544 -869.2481 310.2937 -847.1543 314.4687 -824.552 C
318.9963 -800.0416 331.4347 -779.9993 348.7539 -762.6256 C
376.7673 -734.5239 409.2782 -712.6419 444.0015 -693.8252 C
445.3717 -693.0826 446.7159 -692.2922 448.0722 -691.524 C
361.4531 -693.9271 281.6096 -715.0352 215.4394 -775.212 C
215.0986 -773.4928 214.9433 -773.1578 214.9879 -772.852 c
215.1315 -771.8693 215.2999 -770.8849 215.545 -769.9231 c
225.9774 -728.9845 248.5969 -695.7802 280.1424 -668.2627 C
307.786 -644.1488 339.4527 -626.6037 372.7535 -611.7652 C
381.6645 -607.7946 390.6871 -604.0744 399.6585 -600.2392 C
f
773.543 -980.9049 m
791.7098 -1001.7239 805.4779 -1023.1358 814.1114 -1047.6655 C
822.7406 -1072.1831 825.827 -1097.6078 826.4079 -1123.8705 C
857.3291 -1113.5606 886.1044 -1101.3678 910.5134 -1080.4446 C
902.9522 -1100.3417 887.0672 -1113.6028 872.8494 -1128.3082 C
892.1113 -1122.8575 909.8087 -1114.2247 926.8228 -1104.0998 C
943.8234 -1093.9831 959.375 -1081.9642 973.6886 -1068.2345 C
958.0286 -1101.1542 929.5197 -1121.2797 900.6961 -1141.1871 C
902.2818 -1141.4913 903.6067 -1141.5064 904.9025 -1141.3205 C
920.8253 -1139.0362 936.2205 -1134.7843 950.5384 -1127.4418 C
988.1925 -1108.1322 1018.314 -1081.6734 1032.1583 -1040.0222 C
1032.5418 -1038.8685 1034.6854 -1037.6913 1036.0815 -1037.5959 C
1040.3904 -1037.3014 1044.7622 -1037.8516 1049.0605 -1037.4899 C
1063.469 -1036.2776 1069.4198 -1025.9897 1063.3859 -1012.8684 C
1058.8426 -1002.9888 1052.3488 -994.1932 1043.4592 -988.271 C
1031.7545 -980.4735 1019.5209 -973.0295 1006.6187 -967.5391 C
903.3303 -923.5854 795.8833 -902.32 683.3814 -910.339 C
656.5597 -912.2508 630.3952 -917.9032 605.0429 -927.0688 C
588.8789 -932.9126 573.5601 -940.3856 558.9821 -950.1134 C
569.9907 -882.0022 601.7835 -824.8504 651.2826 -777.5444 C
701.1661 -729.8711 761.4207 -706.3352 830.6629 -703.4213 C
825.2557 -756.1598 838.2627 -802.6299 872.697 -843.0243 C
890.876 -831.2645 905.9987 -816.6212 921.7768 -800.2467 C
922.9042 -807.6547 924.6524 -813.6561 924.5694 -819.6321 C
924.3267 -837.0942 923.4368 -854.5503 922.5879 -871.9983 C
922.4401 -875.0343 923.2851 -876.8108 925.7447 -878.5852 C
954.1975 -899.113 985.4986 -912.5629 1020.4018 -917.3514 C
1024.3803 -917.8971 1027.2503 -917.1654 1030.0982 -914.1401 C
1035.3459 -908.5654 1041.1521 -903.5213 1046.5587 -898.0899 C
1054.7815 -889.8291 1062.9716 -881.5297 1070.9586 -873.0424 C
1075.1793 -868.5573 1077.5993 -863.1668 1077.4056 -856.7577 C
1076.4663 -825.6763 1065.9055 -798.9241 1042.1714 -778.0691 C
1040.8714 -776.9267 1039.382 -775.9999 1036.8271 -774.1272 C
1038.5573 -793.6618 1040.162 -811.7787 1041.8842 -831.223 C
1041.1031 -829.8396 1040.916 -829.3854 1040.6256 -829.0116 C
1022.9657 -806.2933 1003.0272 -785.8002 980.8602 -767.4416 C
973.4227 -761.282 966.1536 -754.8927 959.1357 -748.2612 C
953.8081 -743.2271 953.8604 -738.3399 959.1374 -733.1426 C
962.0372 -730.2867 965.6466 -728.1513 969.4608 -725.2985 C
962.8404 -723.0701 956.4426 -720.9004 950.0342 -718.7623 C
915.8183 -707.3464 881.9661 -694.7327 846.4042 -687.7963 C
807.8137 -680.2691 769.4737 -680.4425 731.9809 -693.1192 C
661.8496 -716.8314 606.4105 -760.227 565.2373 -821.4379 C
542.5285 -855.1985 529.3648 -892.3566 532.7232 -933.913 C
533.8535 -947.9 536.3763 -961.6827 542.7027 -974.3721 C
547.7987 -984.5935 553.6001 -986.4788 563.8079 -981.6544 C
610.215 -959.7217 659.6972 -951.3116 710.3925 -948.6757 c
737.2146 -947.2811 764.1182 -948.0247 790.6863 -951.9048 C
815.9928 -955.6007 841.0647 -960.9233 866.2022 -965.7266 C
868.8546 -966.2334 871.4588 -967.7781 873.6843 -969.3939 C
874.7598 -970.1747 874.9038 -972.2388 875.4696 -973.7218 C
874.042 -974.2184 872.6225 -975.1222 871.1856 -975.1507 C
847.5602 -975.6214 823.9199 -975.6471 800.3123 -976.5447 C
791.8294 -976.8672 783.4242 -979.2294 773.543 -980.9049 C
f
585.8196 -476.411 m
586.9159 -476.161 587.3526 -475.9683 587.7859 -475.9759 c
630.8295 -476.7313 672.9649 -482.9459 713.8812 -496.7148 C
748.0835 -508.2244 778.046 -525.8953 800.2881 -555.096 C
817.0432 -577.0929 833.7492 -599.1311 850.8231 -620.8793 c
856.2409 -627.7804 862.5464 -634.0441 868.9068 -640.1165 C
871.4401 -642.535 875.0915 -644.0009 878.4743 -645.2482 c
881.6927 -646.4349 884.2453 -645.0275 884.2418 -641.2726 C
884.2375 -636.6293 884.505 -631.8115 883.4092 -627.377 c
880.4249 -615.2995 876.7876 -603.3833 873.4026 -591.405 C
872.4896 -588.1744 870.6118 -584.9145 874.4223 -580.7077 C
877.0653 -584.8509 879.7301 -588.3424 881.6728 -592.1977 C
888.4864 -605.7203 894.8603 -619.4665 901.7987 -632.9229 C
904.8311 -638.8039 908.5709 -644.3779 912.5194 -649.698 c
913.9204 -651.5857 916.8726 -653.3468 919.1499 -653.3896 C
931.9005 -653.6287 943.9866 -650.8863 954.4362 -643.1285 c
962.2398 -637.3352 965.0303 -629.3592 962.1628 -620.1628 c
960.1519 -613.7136 957.4523 -607.3205 954.0478 -601.494 C
943.4519 -583.3602 929.4079 -567.996 914.1275 -553.717 C
913.0223 -552.6842 911.9044 -551.6648 910.7923 -550.6392 C
919.2926 -554.2835 927.5189 -558.0991 934.8557 -563.1952 C
953.0329 -575.8209 970.7847 -589.0579 988.7545 -601.9839 C
991.9867 -604.3089 995.2819 -606.6543 998.8426 -608.3841 c
1002.3697 -610.0976 1004.4263 -608.3939 1002.9701 -604.844 c
1001.3086 -600.7939 999.211 -596.4641 996.0987 -593.5358 C
942.1878 -542.8109 880.4265 -505.024 809.8369 -482.2955 C
748.0235 -462.3927 684.2461 -454.3425 619.5709 -452.6457 C
573.8479 -451.446 528.3601 -454.5335 483.0928 -461.1694 C
438.7091 -467.6757 395.2082 -477.8659 352.5323 -491.6359 C
351.0167 -492.1249 349.5798 -492.8574 348.1062 -493.4764 C
453.9463 -485.5692 558.2275 -491.6484 660.6686 -520.9212 C
639.156 -500.6795 613.1389 -488.0368 585.8196 -476.411 C
f
639.9212 -825.55 m
621.0497 -838.0237 579.5242 -904.1655 580.0707 -920.9276 C
615.939 -908.7169 652.1137 -898.2109 689.7329 -893.3573 C
727.3958 -888.4981 765.0202 -889.0423 802.872 -893.7892 C
803.9433 -871.1528 804.9831 -849.1794 806.0781 -826.0383 C
781.9929 -840.0022 758.7362 -853.4857 734.9687 -867.2654 C
731.5729 -848.0401 732.4693 -828.9206 733.6137 -808.8075 C
699.65 -827.8588 673.4697 -854.7798 646.778 -882.1009 C
641.1936 -863.1783 640.9405 -844.4289 639.9212 -825.55 C
f
812.2616 -803.9958 m
806.5717 -792.9209 800.6288 -781.0378 794.2822 -769.3744 C
793.4275 -767.8036 790.6126 -766.6981 788.5825 -766.47 c
778.6654 -765.3554 768.7074 -763.9382 758.7622 -763.9264 C
748.885 -763.9148 738.4117 -763.6516 729.2515 -766.6798 C
710.2771 -772.9524 692.6397 -782.6754 676.4405 -794.4623 c
654.2208 -810.6298 658.4081 -802.4775 657.6356 -830.0445 C
657.5561 -832.8849 657.8857 -835.7369 658.0931 -839.9616 C
684.7023 -810.638 715.0867 -790.6816 754.0494 -783.657 C
750.4278 -804.992 746.9396 -825.5407 743.3884 -846.461 C
766.9024 -831.963 789.496 -818.0324 812.2616 -803.9958 C
f
1150.9674 -836.4668 m
1150.5869 -836.1537 1150.2063 -835.8405 1149.8258 -835.5274 C
1132.1867 -848.6054 1112.7634 -858.3945 1092.6665 -866.9839 C
1090.8036 -867.7801 1089.2364 -869.5354 1087.8416 -871.1182 C
1073.9648 -886.8677 1060.1489 -902.6709 1046.3359 -918.4765 C
1045.6474 -919.2644 1045.1441 -920.2142 1043.9957 -921.9177 C
1077.252 -921.7931 1108.5673 -917.926 1134.8435 -896.8004 C
1152.62 -882.5085 1163.7951 -863.2487 1173.1803 -843.0199 C
1156.8835 -852.4153 1140.8812 -861.6408 1124.879 -870.8664 C
1124.7833 -870.5638 1124.6876 -870.2613 1124.5919 -869.9588 C
1133.3838 -858.7948 1142.1755 -847.6308 1150.9674 -836.4668 C
f
756.1742 -646.4647 m
755.7525 -644.5707 755.7396 -643.8997 755.4637 -643.3641 C
750.1401 -633.0272 744.8735 -622.6586 739.3439 -612.4325 C
738.5064 -610.8835 736.5852 -609.6138 734.8789 -608.8913 C
724.0252 -604.2954 713.1516 -599.7335 702.1643 -595.47 C
693.3485 -592.0491 684.4029 -588.9466 675.4362 -585.9371 C
670.7035 -584.3485 668.5351 -586.261 669.6439 -591.0407 C
670.3464 -594.069 671.3559 -597.2632 673.1034 -599.7734 C
683.8202 -615.1679 694.7259 -630.4329 705.7865 -645.5821 C
706.6726 -646.7957 709.2071 -647.3137 710.9649 -647.2922 C
717.4431 -647.2129 723.9142 -646.62 730.3931 -646.5022 c
738.8205 -646.349 747.2528 -646.4647 756.1742 -646.4647 C
f
845.9317 -900.4576 m
846.2821 -900.7147 846.6331 -901.1578 847.0664 -901.2634 C
860.7974 -904.6084 874.5626 -907.8175 888.2561 -911.3089 C
891.7713 -912.2051 892.3092 -910.0388 892.9198 -907.8097 c
897.6174 -890.6626 902.3392 -873.521 906.8341 -856.3203 C
907.9557 -852.0282 908.2777 -847.5272 908.8762 -843.7031 C
887.8552 -862.6569 866.9192 -881.534 845.9317 -900.4576 C
f
1124.7664 -931.819 m
1100.3071 -941.738 1076.6984 -951.312 1053.5573 -960.6964 C
1062.841 -967.2335 1072.6772 -974.1597 1082.8067 -981.2923 C
1100.8808 -968.6459 1115.0326 -952.5037 1124.7664 -931.819 C
f
851.9603 -858.8282 m
843.372 -847.9901 835.3544 -837.8722 826.7329 -826.9922 C
823.3065 -844.484 820.93 -861.2896 820.1004 -879.5807 C
831.4698 -872.1751 841.5781 -865.5908 851.9603 -858.8282 C
f
812.3934 -648.3392 m
812.5896 -647.8655 812.7858 -647.3919 812.982 -646.9182 C
800.049 -639.9472 787.116 -632.9763 773.8121 -625.8054 C
768.945 -632.5737 764.4997 -638.7554 759.7205 -645.4014 C
777.9907 -646.4204 795.192 -647.3798 812.3934 -648.3392 C
f
1040.5376 -696.0817 m
1041.2398 -685.7201 1039.0764 -676.8754 1034.5487 -668.5629 C
1032.6038 -664.992 1027.5247 -664.0194 1025.1298 -667.2013 c
1020.1018 -673.8817 1015.6124 -680.9674 1010.5005 -688.4765 C
1020.9326 -691.1178 1030.4744 -693.5338 1040.5376 -696.0817 C
f
975.0026 -671.6346 m
981.8644 -685.3787 995.5818 -683.3102 1006.7229 -687.0078 C
1004.2329 -681.3571 1001.4101 -676.1457 998.3407 -671.0839 C
997.8096 -670.2079 996.1896 -669.4309 995.1479 -669.5173 c
988.5966 -670.0608 982.0666 -670.8613 975.0026 -671.6346 C
f
*U
0 D
1 g
399.6585 -600.2392 m
390.6871 -604.0744 381.6645 -607.7946 372.7535 -611.7652 C
339.4527 -626.6037 307.786 -644.1488 280.1424 -668.2627 C
248.5969 -695.7802 225.9774 -728.9845 215.545 -769.9231 c
215.2999 -770.8849 215.1315 -771.8693 214.9879 -772.852 c
214.9433 -773.1578 215.0986 -773.4928 215.4394 -775.212 C
281.6096 -715.0352 361.4531 -693.9271 448.0722 -691.524 C
446.7159 -692.2922 445.3717 -693.0826 444.0015 -693.8252 C
409.2782 -712.6419 376.7673 -734.5239 348.7539 -762.6256 C
331.4347 -779.9993 318.9963 -800.0416 314.4687 -824.552 C
310.2937 -847.1543 311.9544 -869.2481 319.6887 -892.3272 C
320.9602 -889.4736 321.8304 -887.6573 322.5898 -885.7959 C
333.5761 -858.8677 347.9474 -834.5574 372.6893 -817.597 C
388.4576 -806.7879 404.9934 -797.4119 423.0867 -791.5605 C
443.1365 -785.0763 463.6995 -780.1771 484.0544 -774.6442 C
485.0995 -774.3601 486.2891 -774.6076 488.7431 -774.6076 C
459.3623 -810.7143 440.409 -849.9488 442.9924 -897.1162 C
444.0097 -915.6908 451.162 -949.5366 456.8261 -960.3934 C
460.6955 -945.3965 464.2272 -929.7605 468.8265 -914.4453 C
473.2005 -899.8806 479.5012 -886.0352 489.8708 -874.5701 C
493.3793 -870.6909 497.6606 -867.5105 501.5887 -864.0108 C
501.9959 -864.2729 502.4031 -864.535 502.8104 -864.797 C
501.7728 -870.861 500.5482 -876.8997 499.728 -882.9929 C
494.5067 -921.7841 497.7196 -959.7343 511.691 -996.4803 C
513.2768 -1000.6511 512.8888 -1003.1009 509.6939 -1006.4027 C
488.6239 -1028.178 469.8801 -1051.688 457.6304 -1079.7393 C
455.4489 -1084.735 453.7833 -1089.956 451.5999 -1095.8248 C
400.4512 -1055.1893 370.6025 -1003.3794 364.3739 -938.3935 C
363.8994 -938.3105 363.4249 -938.2275 362.9504 -938.1445 C
361.6282 -947.184 359.695 -956.183 359.093 -965.2702 C
356.8763 -998.7294 362.8 -1031.259 371.099 -1063.4785 c
371.5948 -1065.4034 371.8748 -1067.9881 370.9981 -1069.5683 c
362.7866 -1084.3695 354.3006 -1099.0184 345.65 -1114.1377 C
346.3933 -1114.1807 345.9823 -1114.2864 345.7933 -1114.1277 C
316.2822 -1089.3608 287.0852 -1064.2961 264.346 -1032.7312 C
238.837 -997.3214 223.8492 -957.7216 216.652 -914.8965 C
211.1559 -882.1935 210.7814 -849.2864 211.777 -816.1284 C
195.6922 -846.7175 179.0309 -877.0284 169.5419 -911.4398 C
168.2195 -909.8285 167.2582 -908.8 166.4563 -907.6596 c
133.041 -860.1366 108.5035 -808.6251 97.3282 -751.3308 C
94.3086 -735.8494 93.076 -720.0247 90.7883 -704.392 c
90.0445 -699.3087 92.0806 -695.5178 95.4824 -692.43 C
108.4242 -680.6832 121.0042 -668.4507 134.7012 -657.6441 C
152.861 -643.3164 171.9417 -630.1558 190.6228 -616.4884 C
191.393 -615.9249 192.1244 -615.3083 192.6685 -614.8785 C
183.3446 -608.1742 173.8258 -602.0801 165.1601 -594.9493 C
144.2616 -577.7522 126.5578 -557.7504 114.2473 -533.3956 C
112.2272 -529.3989 110.8375 -525.0877 108.9154 -521.0362 c
107.2864 -517.6027 108.4868 -515.5509 111.4289 -513.6788 c
122.5421 -506.6071 134.9841 -503.7453 147.7986 -502.3513 C
181.4302 -498.6928 214.7141 -502.3368 247.616 -508.851 C
274.1802 -514.1104 300.4181 -521.0187 326.7957 -527.217 C
328.3913 -527.5919 329.9422 -528.1573 331.5138 -528.634 C
331.5764 -529.1303 331.639 -529.6265 331.7015 -530.1228 C
323.9991 -531.6146 316.3252 -533.2793 308.5878 -534.5598 C
295.2844 -536.7614 282.44 -532.9758 269.4778 -531.0857 C
245.9056 -527.6483 222.3391 -524.169 198.4324 -524.7107 C
192.6414 -524.8419 186.8217 -525.6607 181.1133 -526.7015 c
178.0867 -527.2534 175.065 -528.6175 172.4007 -530.2149 C
166.1061 -533.989 163.9053 -538.5201 165.0451 -544.1686 c
166.2639 -550.2083 172.6877 -556.3352 178.6887 -557.2121 c
192.6818 -559.2569 206.6745 -561.3037 220.662 -563.3857 C
221.7465 -563.547 222.7891 -563.9893 224.2734 -564.4249 C
219.5045 -571.8794 216.4736 -579.4908 216.8423 -588.1176 c
217.1066 -594.3034 217.8493 -594.793 223.9221 -593.5236 c
237.3196 -590.723 250.7883 -588.5588 264.5476 -590.3018 c
266.2585 -590.5186 267.9301 -591.0455 270.4429 -591.6153 C
249.2601 -609.2134 230.8272 -628.056 217.5589 -651.3788 C
215.2748 -655.3937 213.5286 -659.7147 211.9535 -664.5196 C
268.0986 -624.1136 331.7427 -605.9993 399.6585 -600.2392 C
f
773.543 -980.9049 m
783.4242 -979.2294 791.8294 -976.8672 800.3123 -976.5447 C
823.9199 -975.6471 847.5602 -975.6214 871.1856 -975.1507 C
872.6225 -975.1222 874.042 -974.2184 875.4696 -973.7218 C
874.9038 -972.2388 874.7598 -970.1747 873.6843 -969.3939 C
871.4588 -967.7781 868.8546 -966.2334 866.2022 -965.7266 C
841.0647 -960.9233 815.9928 -955.6007 790.6863 -951.9048 C
764.1182 -948.0247 737.2146 -947.2811 710.3925 -948.6757 c
659.6972 -951.3116 610.215 -959.7217 563.8079 -981.6544 C
553.6001 -986.4788 547.7987 -984.5935 542.7027 -974.3721 C
536.3763 -961.6827 533.8535 -947.9 532.7232 -933.913 C
529.3648 -892.3566 542.5285 -855.1985 565.2373 -821.4379 C
606.4105 -760.227 661.8496 -716.8314 731.9809 -693.1192 C
769.4737 -680.4425 807.8137 -680.2691 846.4042 -687.7963 C
881.9661 -694.7327 915.8183 -707.3464 950.0342 -718.7623 C
956.4426 -720.9004 962.8404 -723.0701 969.4608 -725.2985 C
965.6466 -728.1513 962.0372 -730.2867 959.1374 -733.1426 C
953.8604 -738.3399 953.8081 -743.2271 959.1357 -748.2612 C
966.1536 -754.8927 973.4227 -761.282 980.8602 -767.4416 C
1003.0272 -785.8002 1022.9657 -806.2933 1040.6256 -829.0116 C
1040.916 -829.3854 1041.1031 -829.8396 1041.8842 -831.223 C
1040.162 -811.7787 1038.5573 -793.6618 1036.8271 -774.1272 C
1039.382 -775.9999 1040.8714 -776.9267 1042.1714 -778.0691 C
1065.9055 -798.9241 1076.4663 -825.6763 1077.4056 -856.7577 C
1077.5993 -863.1668 1075.1793 -868.5573 1070.9586 -873.0424 C
1062.9716 -881.5297 1054.7815 -889.8291 1046.5587 -898.0899 C
1041.1521 -903.5213 1035.3459 -908.5654 1030.0982 -914.1401 C
1027.2503 -917.1654 1024.3803 -917.8971 1020.4018 -917.3514 C
985.4986 -912.5629 954.1975 -899.113 925.7447 -878.5852 C
923.2851 -876.8108 922.4401 -875.0343 922.5879 -871.9983 C
923.4368 -854.5503 924.3267 -837.0942 924.5694 -819.6321 C
924.6524 -813.6561 922.9042 -807.6547 921.7768 -800.2467 C
905.9987 -816.6212 890.876 -831.2645 872.697 -843.0243 C
838.2627 -802.6299 825.2557 -756.1598 830.6629 -703.4213 C
761.4207 -706.3352 701.1661 -729.8711 651.2826 -777.5444 C
601.7835 -824.8504 569.9907 -882.0022 558.9821 -950.1134 C
573.5601 -940.3856 588.8789 -932.9126 605.0429 -927.0688 C
630.3952 -917.9032 656.5597 -912.2508 683.3814 -910.339 C
795.8833 -902.32 903.3303 -923.5854 1006.6187 -967.5391 C
1019.5209 -973.0295 1031.7545 -980.4735 1043.4592 -988.271 C
1052.3488 -994.1932 1058.8426 -1002.9888 1063.3859 -1012.8684 C
1069.4198 -1025.9897 1063.469 -1036.2776 1049.0605 -1037.4899 C
1044.7622 -1037.8516 1040.3904 -1037.3014 1036.0815 -1037.5959 C
1034.6854 -1037.6913 1032.5418 -1038.8685 1032.1583 -1040.0222 C
1018.314 -1081.6734 988.1925 -1108.1322 950.5384 -1127.4418 C
936.2205 -1134.7843 920.8253 -1139.0362 904.9025 -1141.3205 C
903.6067 -1141.5064 902.2818 -1141.4913 900.6961 -1141.1871 C
929.5197 -1121.2797 958.0286 -1101.1542 973.6886 -1068.2345 C
959.375 -1081.9642 943.8234 -1093.9831 926.8228 -1104.0998 C
909.8087 -1114.2247 892.1113 -1122.8575 872.8494 -1128.3082 C
887.0672 -1113.6028 902.9522 -1100.3417 910.5134 -1080.4446 C
886.1044 -1101.3678 857.3291 -1113.5606 826.4079 -1123.8705 C
825.827 -1097.6078 822.7406 -1072.1831 814.1114 -1047.6655 C
805.4779 -1023.1358 791.7098 -1001.7239 773.543 -980.9049 C
f
585.8196 -476.411 m
613.1389 -488.0368 639.156 -500.6795 660.6686 -520.9212 C
558.2275 -491.6484 453.9463 -485.5692 348.1062 -493.4764 C
349.5798 -492.8574 351.0167 -492.1249 352.5323 -491.6359 C
395.2082 -477.8659 438.7091 -467.6757 483.0928 -461.1694 C
528.3601 -454.5335 573.8479 -451.446 619.5709 -452.6457 C
684.2461 -454.3425 748.0235 -462.3927 809.8369 -482.2955 C
880.4265 -505.024 942.1878 -542.8109 996.0987 -593.5358 C
999.211 -596.4641 1001.3086 -600.7939 1002.9701 -604.844 c
1004.4263 -608.3939 1002.3697 -610.0976 998.8426 -608.3841 c
995.2819 -606.6543 991.9867 -604.3089 988.7545 -601.9839 C
970.7847 -589.0579 953.0329 -575.8209 934.8557 -563.1952 C
927.5189 -558.0991 919.2926 -554.2835 910.7923 -550.6392 C
911.9044 -551.6648 913.0223 -552.6842 914.1275 -553.717 C
929.4079 -567.996 943.4519 -583.3602 954.0478 -601.494 C
957.4523 -607.3205 960.1519 -613.7136 962.1628 -620.1628 c
965.0303 -629.3592 962.2398 -637.3352 954.4362 -643.1285 c
943.9866 -650.8863 931.9005 -653.6287 919.1499 -653.3896 C
916.8726 -653.3468 913.9204 -651.5857 912.5194 -649.698 c
908.5709 -644.3779 904.8311 -638.8039 901.7987 -632.9229 C
894.8603 -619.4665 888.4864 -605.7203 881.6728 -592.1977 C
879.7301 -588.3424 877.0653 -584.8509 874.4223 -580.7077 C
870.6118 -584.9145 872.4896 -588.1744 873.4026 -591.405 C
876.7876 -603.3833 880.4249 -615.2995 883.4092 -627.377 c
884.505 -631.8115 884.2375 -636.6293 884.2418 -641.2726 C
884.2453 -645.0275 881.6927 -646.4349 878.4743 -645.2482 c
875.0915 -644.0009 871.4401 -642.535 868.9068 -640.1165 C
862.5464 -634.0441 856.2409 -627.7804 850.8231 -620.8793 c
833.7492 -599.1311 817.0432 -577.0929 800.2881 -555.096 C
778.046 -525.8953 748.0835 -508.2244 713.8812 -496.7148 C
672.9649 -482.9459 630.8295 -476.7313 587.7859 -475.9759 c
587.3526 -475.9683 586.9159 -476.161 585.8196 -476.411 C
f
639.9212 -825.55 m
640.9405 -844.4289 641.1936 -863.1783 646.778 -882.1009 C
673.4697 -854.7798 699.65 -827.8588 733.6137 -808.8075 C
732.4693 -828.9206 731.5729 -848.0401 734.9687 -867.2654 C
758.7362 -853.4857 781.9929 -840.0022 806.0781 -826.0383 C
804.9831 -849.1794 803.9433 -871.1528 802.872 -893.7892 C
765.0202 -889.0423 727.3958 -888.4981 689.7329 -893.3573 C
652.1137 -898.2109 615.939 -908.7169 580.0707 -920.9276 C
579.5242 -904.1655 621.0497 -838.0237 639.9212 -825.55 C
f
812.2616 -803.9958 m
789.496 -818.0324 766.9024 -831.963 743.3884 -846.461 C
746.9396 -825.5407 750.4278 -804.992 754.0494 -783.657 C
715.0867 -790.6816 684.7023 -810.638 658.0931 -839.9616 C
657.8857 -835.7369 657.5561 -832.8849 657.6356 -830.0445 C
658.4081 -802.4775 654.2208 -810.6298 676.4405 -794.4623 c
692.6397 -782.6754 710.2771 -772.9524 729.2515 -766.6798 C
738.4117 -763.6516 748.885 -763.9148 758.7622 -763.9264 C
768.7074 -763.9382 778.6654 -765.3554 788.5825 -766.47 c
790.6126 -766.6981 793.4275 -767.8036 794.2822 -769.3744 C
800.6288 -781.0378 806.5717 -792.9209 812.2616 -803.9958 C
f
1150.9674 -836.4668 m
1142.1755 -847.6308 1133.3838 -858.7948 1124.5919 -869.9588 C
1124.6876 -870.2613 1124.7833 -870.5638 1124.879 -870.8664 C
1140.8812 -861.6408 1156.8835 -852.4153 1173.1803 -843.0199 C
1163.7951 -863.2487 1152.62 -882.5085 1134.8435 -896.8004 C
1108.5673 -917.926 1077.252 -921.7931 1043.9957 -921.9177 C
1045.1441 -920.2142 1045.6474 -919.2644 1046.3359 -918.4765 C
1060.1489 -902.6709 1073.9648 -886.8677 1087.8416 -871.1182 C
1089.2364 -869.5354 1090.8036 -867.7801 1092.6665 -866.9839 C
1112.7634 -858.3945 1132.1867 -848.6054 1149.8258 -835.5274 C
1150.2063 -835.8405 1150.5869 -836.1537 1150.9674 -836.4668 C
f
756.1742 -646.4647 m
747.2528 -646.4647 738.8205 -646.349 730.3931 -646.5022 c
723.9142 -646.62 717.4431 -647.2129 710.9649 -647.2922 C
709.2071 -647.3137 706.6726 -646.7957 705.7865 -645.5821 C
694.7259 -630.4329 683.8202 -615.1679 673.1034 -599.7734 C
671.3559 -597.2632 670.3464 -594.069 669.6439 -591.0407 C
668.5351 -586.261 670.7035 -584.3485 675.4362 -585.9371 C
684.4029 -588.9466 693.3485 -592.0491 702.1643 -595.47 C
713.1516 -599.7335 724.0252 -604.2954 734.8789 -608.8913 C
736.5852 -609.6138 738.5064 -610.8835 739.3439 -612.4325 C
744.8735 -622.6586 750.1401 -633.0272 755.4637 -643.3641 C
755.7396 -643.8997 755.7525 -644.5707 756.1742 -646.4647 C
f
845.9317 -900.4576 m
866.9192 -881.534 887.8552 -862.6569 908.8762 -843.7031 C
908.2777 -847.5272 907.9557 -852.0282 906.8341 -856.3203 C
902.3392 -873.521 897.6174 -890.6626 892.9198 -907.8097 c
892.3092 -910.0388 891.7713 -912.2051 888.2561 -911.3089 C
874.5626 -907.8175 860.7974 -904.6084 847.0664 -901.2634 C
846.6331 -901.1578 846.2821 -900.7147 845.9317 -900.4576 C
f
1124.7664 -931.819 m
1115.0326 -952.5037 1100.8808 -968.6459 1082.8067 -981.2923 C
1072.6772 -974.1597 1062.841 -967.2335 1053.5573 -960.6964 C
1076.6984 -951.312 1100.3071 -941.738 1124.7664 -931.819 C
f
851.9603 -858.8282 m
841.5781 -865.5908 831.4698 -872.1751 820.1004 -879.5807 C
820.93 -861.2896 823.3065 -844.484 826.7329 -826.9922 C
835.3544 -837.8722 843.372 -847.9901 851.9603 -858.8282 C
f
812.3934 -648.3392 m
795.192 -647.3798 777.9907 -646.4204 759.7205 -645.4014 C
764.4997 -638.7554 768.945 -632.5737 773.8121 -625.8054 C
787.116 -632.9763 800.049 -639.9472 812.982 -646.9182 C
812.7858 -647.3919 812.5896 -647.8655 812.3934 -648.3392 C
f
1040.5376 -696.0817 m
1030.4744 -693.5338 1020.9326 -691.1178 1010.5005 -688.4765 C
1015.6124 -680.9674 1020.1018 -673.8817 1025.1298 -667.2013 c
1027.5247 -664.0194 1032.6038 -664.992 1034.5487 -668.5629 C
1039.0764 -676.8754 1041.2398 -685.7201 1040.5376 -696.0817 C
f
975.0026 -671.6346 m
982.0666 -670.8613 988.5966 -670.0608 995.1479 -669.5173 c
996.1896 -669.4309 997.8096 -670.2079 998.3407 -671.0839 C
1001.4101 -676.1457 1004.2329 -681.3571 1006.7229 -687.0078 C
995.5818 -683.3102 981.8644 -685.3787 975.0026 -671.6346 C
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
